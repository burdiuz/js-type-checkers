{"version":3,"file":"type-checkers.min.js","sources":["../source/checkers/index.js","../node_modules/@actualwave/has-own/has-own.js","../source/proxy/config.js","../source/reporters/utils.js","../source/reporters/console.js","../source/reporters/index.js","../source/enabled.js","../source/target/info.js","../source/target/proxy.js","../source/utils.js","../source/proxy/utils.js","../source/proxy/create.js","../source/proxy/getProperty.js","../source/proxy/setProperty.js","../source/proxy/callFunction.js","../source/proxy/createDeep.js","../source/reporters/error.js","../source/target/object/merge.js","../source/target/object/properties.js"],"sourcesContent":["let defaultTypeChecker = null;\n\nconst getDefaultTypeChecker = () => defaultTypeChecker;\nconst setDefaultTypeChecker = (typeChecker) => {\n  defaultTypeChecker = typeChecker;\n};\n\nexport {\n  getDefaultTypeChecker,\n  setDefaultTypeChecker,\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst hasOwn = (\n  (has) =>\n  (target, property) =>\n  Boolean(target && has.call(target, property))\n)(Object.prototype.hasOwnProperty);\n\nexports.hasOwn = hasOwn;\nexports.default = hasOwn;","import hasOwn from '@actualwave/has-own';\n\nexport const PROXY_WRAP_FUNCTION_RETURN_VALUES = 'wrapFunctionReturnValues';\nexport const PROXY_WRAP_FUNCTION_ARGUMENTS = 'wrapFunctionArguments';\nexport const PROXY_WRAP_SET_PROPERTY_VALUES = 'wrapSetPropertyValues';\nexport const PROXY_IGNORE_PROTOTYPE_METHODS = 'ignorePrototypeMethods';\n\nexport const getDefaultProxyConfig = () => ({\n  [PROXY_WRAP_FUNCTION_RETURN_VALUES]: true,\n  [PROXY_WRAP_FUNCTION_ARGUMENTS]: false,\n  [PROXY_WRAP_SET_PROPERTY_VALUES]: true,\n  [PROXY_IGNORE_PROTOTYPE_METHODS]: false,\n});\n\nconst config = getDefaultProxyConfig();\n\nexport const setProxyConfig = (newConfig) => Object.assign(config, newConfig);\n\nexport const getProxyConfig = () => ({ ...config });\n\nexport const getProxyConfigValue = (key, info = null) =>\n  (hasOwn(info, key) ? info[key] : config[key]);\n","/* eslint-disable import/prefer-default-export */\n\nexport const constructErrorString = (action, name, required, received) =>\n  `${action}Error on \"${name}\" instead of \"${required}\" received \"${received}\"`;\n","/* eslint-disable no-console */\nimport { constructErrorString } from './utils';\n\nexport const ConsoleErrorReporter = (\n  action,\n  name,\n  requiredTypeString,\n  actualTypeString,\n) =>\n  console.error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\nexport const ConsoleWarnReporter = (\n  action,\n  name,\n  requiredTypeString,\n  actualTypeString,\n) =>\n  console.warn(constructErrorString(action, name, requiredTypeString, actualTypeString));\n","import {\n  ConsoleErrorReporter,\n  ConsoleWarnReporter,\n} from './console';\nimport { ThrowErrorReporter } from './error';\n\nlet errorReporter = ConsoleErrorReporter;\n\nconst getErrorReporter = () => errorReporter;\n\nconst setErrorReporter = (reporter) => {\n  errorReporter = reporter;\n};\n\nexport {\n  ConsoleErrorReporter,\n  ConsoleWarnReporter,\n  ThrowErrorReporter,\n  getErrorReporter,\n  setErrorReporter,\n};\n","let enabled = true;\n\nexport const isEnabled = () => enabled;\nexport const setEnabled = (value = true) => {\n  enabled = !!value;\n};\n","import hasOwn from '@actualwave/has-own';\n\nexport const INFO_KEY = Symbol('type-checkers::info');\n\nexport const createChildrenCache = (children = {}) => ({ ...children });\n\nexport const createTargetInfo = (\n  checker,\n  config,\n  deep = true,\n  names = [],\n  children = createChildrenCache(),\n) => ({\n  checker,\n  config,\n  deep,\n  names,\n  children,\n});\n\nexport const getTargetInfo = (target) =>\n  (target ? target[INFO_KEY] : undefined);\n\nexport const setTargetInfo = (target, info) => {\n  if (target && info) {\n    target[INFO_KEY] = info;\n  }\n};\n\nexport const hasTargetInfo = (target) => !!getTargetInfo(target);\n\n// TODO three times getting same, might need optimizing\nexport const getTargetTypeChecker = (target) => {\n  if (target) {\n    const info = target[INFO_KEY];\n\n    return (info && info.checker) || undefined;\n  }\n\n  return undefined;\n};\n\nexport const getTargetTypeCheckerConfig = (target) => {\n  if (target) {\n    const info = target[INFO_KEY];\n\n    return (info && info.config) || undefined;\n  }\n\n  return undefined;\n};\n\n/*\n  I have had to apply custom key instead of name as is to\n  fix \"construtor\" issue. Since ordinary object has some\n  properties with values from start, these properties were\n  mustakenly returned as child info objects, for example, if\n  requesting hild info for \"constructor\" function of the target,\n  it returned class constructor which caused errors later,\n  when accesing info properties.\n */\nconst getChildInfoKey = (name) => `@${name}`;\n\nexport const mergeChildrenCache = (targetCache, sourceCache) => {\n  for (const key in sourceCache) {\n    if (hasOwn(targetCache, key)) {\n      // eslint-disable-next-line no-use-before-define\n      targetCache[key] = mergeTargetInfo(targetCache[key], sourceCache[key]);\n    } else {\n      targetCache[key] = sourceCache[key];\n    }\n  }\n\n  return targetCache;\n};\n\nexport const storeChildInfo = (cache, name, childInfo) => {\n  const key = getChildInfoKey(name);\n  delete cache[key];\n\n  if (childInfo) {\n    cache[key] = childInfo;\n  }\n};\n\nexport const storeChildInfoFrom = (cache, name, child) => {\n  storeChildInfo(cache, name, getTargetInfo(child));\n};\n\nexport const getChildInfo = (cache, name) => cache[getChildInfoKey(name)];\n\nexport const hasChildInfo = (cache, name) => !!cache[getChildInfoKey(name)];\n\nexport const removeChildInfo = (cache, name) =>\n  delete cache[getChildInfoKey(name)];\n\nexport const mergeTargetInfo = (targetInfo, sourceInfo) => {\n  const { deep, checker, children, config, names } = targetInfo;\n\n  if (checker === sourceInfo.checker) {\n    targetInfo.deep = deep || sourceInfo.deep;\n    targetInfo.children = mergeChildrenCache(children, sourceInfo.children);\n    targetInfo.config = checker.mergeConfigs(config, sourceInfo.config, names);\n  } else {\n    console.error('TypeChecked objects can be merged only if using exactly same instance of type checker.');\n  }\n\n  return targetInfo;\n};\n","export const TARGET_KEY = Symbol('type-checkers::target');\n\nexport const getOriginalTarget = (target) =>\n  (target && target[TARGET_KEY]) || target;\n","import { TARGET_KEY } from './target/proxy';\n\nconst validTypes = {\n  object: true,\n  function: true,\n};\n\nexport const isValidTarget = (target) => Boolean(target && validTypes[typeof target]);\nexport const isTypeChecked = (target) => Boolean(target && target[TARGET_KEY]);\n","/* eslint-disable import/prefer-default-export */\n\nimport { isTypeChecked, isValidTarget } from '../utils';\nimport { getChildInfo, storeChildInfoFrom } from '../target/info';\n\nexport const getTypeCheckedChild = (createFn, info, name, value) => {\n  if (!isValidTarget(value)) {\n    return value;\n  }\n\n  let result = value;\n\n  if (!isTypeChecked(value)) {\n    const { children } = info;\n    const childInfo = getChildInfo(children, name);\n\n    if (childInfo) {\n      result = createFn(value, { info: childInfo });\n    } else {\n      const { deep, names, checker } = info;\n      result = createFn(value, { deep, names: [...names, name], checker });\n      storeChildInfoFrom(children, name, result);\n    }\n  }\n\n  return result;\n};\n","import { getDefaultTypeChecker } from '../checkers';\nimport { getErrorReporter } from '../reporters';\nimport { isEnabled } from '../enabled';\nimport {\n  createTargetInfo,\n  setTargetInfo,\n  createChildrenCache,\n} from '../target/info';\nimport { isValidTarget, isTypeChecked } from '../utils';\nimport getPropertyInit from './getProperty';\nimport setPropertyInit from './setProperty';\nimport callFunctionInit from './callFunction';\n\nlet getProperty;\nlet setProperty;\nlet callFunction;\n\nconst objectProxy = (target) => new Proxy(\n  target,\n  {\n    get: getProperty,\n    set: setProperty,\n  },\n);\n\nconst functionProxy = (target) => new Proxy(\n  target,\n  {\n    get: getProperty,\n    set: setProperty,\n    apply: callFunction,\n    construct: callFunction,\n  },\n);\n\nexport const wrapWithProxy = (target) => {\n  if (target instanceof Function) {\n    return functionProxy(target);\n  }\n\n  return objectProxy(target);\n};\n\nexport const createInfoFromOptions = (target, {\n  deep = true,\n  names = [],\n  config = null,\n  children = null,\n  checker = getDefaultTypeChecker(),\n  info = null, // exclusive option, if set other options being ignored\n} = {}) => info || createTargetInfo(\n  checker,\n  checker.init(target, getErrorReporter(), config),\n  deep,\n  names,\n  createChildrenCache(children),\n);\n\nconst create = (target, options) => {\n  if (!isValidTarget(target) || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  setTargetInfo(\n    target,\n    createInfoFromOptions(target, options),\n  );\n\n  return wrapWithProxy(target);\n};\n\ngetProperty = getPropertyInit(create);\nsetProperty = setPropertyInit(create);\ncallFunction = callFunctionInit(create);\n\nexport default create;\n","import hasOwn from '@actualwave/has-own';\n\nimport {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n} from '../target/info';\n\nimport { getProxyConfigValue, PROXY_IGNORE_PROTOTYPE_METHODS } from './config';\n\nimport { isValidTarget, isTypeChecked } from '../utils';\n\nimport { TARGET_KEY } from '../target/proxy';\n\nconst getTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, children, names, checker } = info;\n\n  if (deep || value instanceof Function) {\n    const childInfo = getChildInfo(children, property);\n\n    if (childInfo) {\n      value = createFn(value, { info: childInfo });\n    } else {\n      value = createFn(value, { deep, names: [...names, property], checker });\n      storeChildInfoFrom(children, property, value);\n    }\n  }\n\n  return value;\n};\n\nconst isIgnoredProperty = (target, info, property, value) => {\n  if (\n    value instanceof Function &&\n    !hasOwn(target, property) &&\n    getProxyConfigValue(PROXY_IGNORE_PROTOTYPE_METHODS, info)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getProperty = (createFn) => (target, property) => {\n  const value = target[property];\n\n  if (property === INFO_KEY) {\n    return value;\n    /*\n    target[TARGET_KEY] is a virtual property accessing which indicates\n    if object is wrapped with type checked proxy or not.\n    */\n  } else if (property === TARGET_KEY) {\n    return target;\n  }\n\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.getProperty) {\n    checker.getProperty(target, property, value, config, names);\n  }\n\n  if (\n    !isValidTarget(value) ||\n    isTypeChecked(value) ||\n    isIgnoredProperty(target, info, property, value)\n  ) {\n    return value;\n  }\n\n  return getTargetProperty(createFn, target, property, value);\n};\n\nexport default getProperty;\n","import {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n  mergeTargetInfo,\n} from '../target/info';\n\nimport {\n  getProxyConfigValue,\n  PROXY_WRAP_SET_PROPERTY_VALUES,\n} from './config';\n\nimport {\n  isValidTarget,\n  isTypeChecked,\n} from '../utils';\n\nimport { TARGET_KEY } from '../target/proxy';\n\nconst setNonTargetProperty = (target, property, value) => {\n  if (property === INFO_KEY) {\n    let info = getTargetInfo(target);\n    if (info && value && info !== value) {\n      info = mergeTargetInfo(info, value);\n    } else {\n      info = value;\n    }\n\n    target[property] = info;\n    return true;\n  } else if (!isValidTarget(value)) {\n    const { names, config, checker } = getTargetInfo(target);\n\n    if (checker.setProperty) {\n      checker.setProperty(target, property, value, config, names);\n    }\n\n    target[property] = value;\n    return true;\n  }\n\n  return false;\n};\n\nconst setTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, names, checker, config, children } = info;\n\n  if (checker.setProperty) {\n    checker.setProperty(target, property, value, config, names);\n  }\n\n  if (getProxyConfigValue(PROXY_WRAP_SET_PROPERTY_VALUES, info)) {\n    if (!isTypeChecked(value)) {\n      const childInfo = getChildInfo(children, property);\n\n      if (childInfo) {\n        value = createFn(value, { info: childInfo });\n      } else {\n        value = createFn(value, { deep, names: [...names, property], checker });\n      }\n    }\n\n    storeChildInfoFrom(children, property, value);\n  }\n\n  target[property] = value;\n  return true;\n};\n\nconst setProperty = (createFn) => (target, property, value) => {\n  if (property === TARGET_KEY) {\n    throw new Error(`\"${TARGET_KEY}\" is a virtual property and cannot be set`);\n  }\n\n  return setNonTargetProperty(target, property, value)\n    || setTargetProperty(createFn, target, property, value);\n};\n\nexport default setProperty;\n","import { getTargetInfo } from '../target/info';\n\nimport {\n  getProxyConfigValue,\n  PROXY_WRAP_FUNCTION_ARGUMENTS,\n  PROXY_WRAP_FUNCTION_RETURN_VALUES,\n} from './config';\n\nimport { getTypeCheckedChild } from './utils';\n\nconst getTargetArguments = (createFn, target, argumentsList) => {\n  const info = getTargetInfo(target);\n\n  if (getProxyConfigValue(PROXY_WRAP_FUNCTION_ARGUMENTS, info)) {\n    const { length } = argumentsList;\n    // FIXME cache arguments info objects as children\n    for (let index = 0; index < length; index++) {\n      argumentsList[index] = getTypeCheckedChild(\n        createFn,\n        info,\n        String(index),\n        argumentsList[index],\n      );\n    }\n  }\n\n  return argumentsList;\n};\n\nconst callFunction = (createFn) => (target, thisArg, argumentsList) => {\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.arguments) {\n    checker.arguments(target, thisArg, argumentsList, config, names);\n  }\n\n  argumentsList = getTargetArguments(createFn, target, argumentsList);\n\n  let result = target.apply(thisArg, argumentsList);\n\n  if (checker.returnValue) {\n    checker.returnValue(target, thisArg, result, config, names);\n  }\n\n  if (getProxyConfigValue(PROXY_WRAP_FUNCTION_RETURN_VALUES, info)) {\n    result = getTypeCheckedChild(createFn, info, 'returnValue', result);\n  }\n\n  return result;\n};\n\nexport default callFunction;\n","import { isEnabled } from '../enabled';\nimport { setTargetInfo, storeChildInfo, getChildInfo } from '../target/info';\nimport { isTypeChecked, isValidTarget } from '../utils';\nimport { wrapWithProxy, createInfoFromOptions } from './create';\n\nconst deepInitializer = (target, options) => {\n  const info = createInfoFromOptions(target, options);\n  const { deep, names, checker, config, children } = info;\n\n  Object.keys(target).forEach((name) => {\n    const value = target[name];\n\n    checker.getProperty(target, name, value, config, names);\n\n    if (isValidTarget(value)) {\n      let childInfo = getChildInfo(children, name);\n\n      if (childInfo) {\n        deepInitializer(value, { info: childInfo });\n      } else {\n        childInfo = deepInitializer(value, {\n          deep,\n          names: [...names, name],\n          checker,\n        });\n        storeChildInfo(children, name, childInfo);\n      }\n    }\n  });\n\n  setTargetInfo(target, info);\n\n  return info;\n};\n\nconst createDeep = (target, options) => {\n  if (\n    !target ||\n    typeof target !== 'object' ||\n    !isEnabled() ||\n    isTypeChecked(target)\n  ) {\n    return target;\n  }\n\n  deepInitializer(target, options);\n\n  return wrapWithProxy(target);\n};\n\nexport default createDeep;\n","/* eslint-disable import/prefer-default-export */\n\nimport { constructErrorString } from './utils';\n\nexport const ThrowErrorReporter = (\n  action,\n  name,\n  requiredTypeString,\n  receivedTypeString,\n) => {\n  throw new Error(constructErrorString(action, name, requiredTypeString, receivedTypeString));\n};\n","import { getTargetInfo, hasTargetInfo } from '../info';\n\nimport create from '../../proxy/create';\n\nimport { isEnabled } from '../../enabled';\n\nconst merge = (options, ...sources) => {\n  let target = {};\n\n  if (isEnabled()) {\n    if (!options) {\n      options = {\n        info: getTargetInfo(sources.find((item) => hasTargetInfo(item))),\n        deep: false,\n      };\n    }\n\n    target = create(target, options);\n  }\n\n  return Object.assign(target, ...sources);\n};\n\nexport default merge;\n","import { isEnabled } from '../../enabled';\nimport { isValidTarget, isTypeChecked } from '../../utils';\nimport create from '../../proxy/create';\n\n// TODO if enabled, replaces original value with type checked\nconst properties = (target, options = undefined, ...names) => {\n  if (!isEnabled()) {\n    return target;\n  }\n\n  if (!isValidTarget(target)) {\n    throw new Error('Target must be a valid object.');\n  }\n\n  if (Object.isFrozen(target) || Object.isSealed(target)) {\n    throw new Error('Target object should not be sealed or frozen.');\n  }\n\n  if (!names.length) {\n    // Symbols and non-enumerables must be explicitly specified\n    names = Object.keys(target);\n  }\n\n  const { length } = names;\n  for (let index = 0; index < length; index += 1) {\n    const name = names[index];\n    const { writable, get, set } = Object.getOwnPropertyDescriptor(target, name);\n\n    // Prohibit applying to properties with accessor/mutator pair?\n    if ((get && set) || writable) {\n      const value = target[name];\n\n      if (isValidTarget(value) && !isTypeChecked(value)) {\n        target[name] = create(value, options);\n      }\n    }\n  }\n\n  return target;\n};\n\nexport default properties;\n"],"names":["defaultTypeChecker","getDefaultTypeChecker","Object","defineProperty","exports","value","hasOwn","has","target","property","Boolean","call","prototype","hasOwnProperty","getDefaultProxyConfig","config","getProxyConfigValue","key","info","constructErrorString","action","name","required","received","ConsoleErrorReporter","requiredTypeString","actualTypeString","console","error","errorReporter","getErrorReporter","enabled","isEnabled","INFO_KEY","Symbol","createChildrenCache","children","getTargetInfo","undefined","setTargetInfo","hasTargetInfo","getChildInfoKey","storeChildInfo","cache","childInfo","storeChildInfoFrom","child","getChildInfo","mergeTargetInfo","targetInfo","sourceInfo","deep","checker","names","targetCache","sourceCache","mergeChildrenCache","mergeConfigs","TARGET_KEY","validTypes","isValidTarget","isTypeChecked","getTypeCheckedChild","createFn","result","getProperty","setProperty","callFunction","wrapWithProxy","Function","Proxy","functionProxy","objectProxy","createInfoFromOptions","createTargetInfo","init","create","options","isIgnoredProperty","getTargetProperty","getPropertyInit","Error","setNonTargetProperty","setTargetProperty","setPropertyInit","thisArg","argumentsList","arguments","length","index","String","getTargetArguments","apply","returnValue","callFunctionInit","deepInitializer","keys","forEach","typeChecker","newConfig","assign","warn","receivedTypeString","reporter","sources","find","item","isFrozen","isSealed","writable","get","set","getOwnPropertyDescriptor"],"mappings":"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"}