!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(e.TypeCheckers={})}(this,function(e){"use strict";const r="(GetProperty)",t="(SetProperty)",n="(Index)",o="(Arguments)",s="(ReturnValue)";function c(e){if(!(this instanceof c))return new c(e);this.value=e}function i(){return this.value}c.prototype.toString=i,c.prototype.valueOf=i,c.prototype[Symbol.toPrimitive]=i;const p=e=>e.reduce((e,r)=>e=r instanceof c?`${e}${r}`:String(parseInt(r,10))===r?`${e}[${r}]`:/^[a-z][\w$]*$/i.test(r)?e?`${e}.${r}`:r:`${e}["${r}"]`,""),a=Symbol("type-checkers::info"),f=e=>e?e[a]:void 0,u=(e,r)=>{e&&r&&(e[a]=r)},y=e=>!!f(e),l=e=>{if(e&&e[a])return e[a].config},d=(e={})=>Object.assign({},e),g=(e,r,t)=>{delete e[r],t&&(e[r]=t)},h=(e,r,t)=>{g(e,r,f(t))},m=(e,r)=>e[r],k=(e,r)=>{const{deep:t,checker:n,children:o,config:s,names:c}=e;return n===r.checker?(e.deep=t||r.deep,e.children=((e,r)=>{for(const t in r)e.hasOwnProperty(t)?e[t]=k(e[t],r[t]):e[t]=r[t];return e})(o,r.children),e.config=n.mergeConfigs(s,r.config,c)):console.error("TypeChecked objects can be merged only if using exactly same instance of type checker."),e},P=(e,r,t,n,o,s)=>{if(!n)return!0;const c=r[t];if(c){if(c!==n)return o(e,p([...s,t]),c,n),!1}else r[t]=n;return!0},T=[Array],b=e=>e&&T.indexOf(e.constructor)>=0,C=e=>void 0===e?"":e instanceof Array?"array":typeof e,w=(e,r)=>{const t=l(e);t&&(t.types[n]=r)},x={collectTypesOnInit:!0,areArrayElementsOfSameType:!0,ignorePrototypeValues:!0,init(e,r,t=null){let o={};if(t)o=t;else if(this.collectTypesOnInit)if(this.areArrayElementsOfSameType&&e instanceof Array){const r=C(e.find(e=>void 0!==e));r&&(o[n]=r)}else Object.keys(e).forEach(r=>{o[r]=C(e[r])});return{types:o,errorReporter:r}},getProperty(e,r,t,o,s){return!(e.hasOwnProperty(r)||!(this.ignorePrototypeValues||t instanceof Function))||(this.areArrayElementsOfSameType&&b(e)?this.getIndexProperty(e,n,t,o,s):this.getNamedProperty(e,r,t,o,s))},getIndexProperty(e,t,o,s,i){const{types:p,errorReporter:a}=s,f=p[t];if(f instanceof Function)return f(r,e,t,o,s,i);const u=C(o);return P(r,p,c(n),u,a,i)},getNamedProperty(e,t,n,o,s){const{types:c,errorReporter:i}=o,p=c[t];if(p instanceof Function)return p(r,e,t,n,o,s);const a=C(n);return P(r,c,t,a,i,s)},setProperty(e,r,t,o,s){return this.areArrayElementsOfSameType&&b(e)?this.setIndexProperty(e,n,t,o,s):this.setNamedProperty(e,r,t,o,s)},setIndexProperty(e,r,o,s,i){const{types:p,errorReporter:a}=s,f=p[r];if(f instanceof Function)return f(t,e,r,o,s,i);const u=C(o);return P(t,p,c(n),u,a,i)},setNamedProperty(e,r,n,o,s){const{types:c,errorReporter:i}=o,p=c[r];if(p instanceof Function)return p(t,e,r,n,o,s);const a=C(n);return P(t,c,r,a,i,s)},arguments(e,r,t,n,s){const{types:c,errorReporter:i}=n,p=c[o];if(p instanceof Function)return p(o,e,t,n,s);const{length:a}=t;let f=!0;for(let e=0;e<a;e++){const r=C(t[e]);f=P(o,c,String(e),r,i,s)&&f}return f},returnValue(e,r,t,n,o){const{types:i,errorReporter:p}=n,a=i[s];if(a instanceof Function)return a(s,e,t,n,o);const f=C(t);return P(s,i,c(s),f,p,o)},isIndexAccessTarget:b,getTypeString:C,mergeConfigs:({types:e,errorReporter:r},t,n=[])=>{const o=t.types;for(const t in o)if(o.hasOwnProperty(t)){const s=o[t],c=e[t];s&&c&&c!==s?r("(Merge)",p([...n,t]),c,s):e[t]=s}return{types:e,errorReporter:r}},replacePropertyTypeCheck:(e,r,t)=>{const{types:n}=l(e);delete n[r],t&&(n[r]=t)},replaceArgumentsTypeCheck:(e,r)=>{const{types:t}=l(e);delete t[o],r&&(t[o]=r)},replaceReturnValueTypeCheck:(e,r)=>{const{types:t}=l(e);delete t[s],r&&(t[s]=r)},registerIndexBasedClass:e=>{T.push(e)},setIndexValueType:w,setIndexValueTypeBy:(e,r)=>{w(e,C(r))},replaceIndexedTypeCheck:(e,r)=>{const{types:t}=l(e);delete t[n],r&&(t[n]=r)}};let O=x;const R=()=>O,I=(e,r,t,n)=>`${e}Error on "${r}" instead of "${t}" received "${n}"`,v=(e,r,t,n)=>console.error(I(e,r,t,n));let E=v;const $=()=>E;let S=!0;const V=()=>S,j=Symbol("type-checkers::target"),F={wrapFunctionReturnValues:!0,wrapFunctionArguments:!1,wrapSetPropertyValues:!0},A={object:!0,function:!0},N=e=>e&&A[typeof e],B=e=>Boolean(e&&e[j]);let D,M,_;const z=e=>e instanceof Function?new Proxy(e,{get:D,set:M,apply:_,construct:_}):new Proxy(e,{get:D,set:M});const G=(e,{deep:r=!0,names:t=[],config:n=null,children:o=null,checker:s=R(),info:c=null}={})=>c||((e,r,t=!0,n=[],o=d())=>({checker:e,config:r,deep:t,names:n,children:o}))(s,s.init(e,$(),n),r,t,d(o)),W=(e,r)=>N(e)&&V()&&!B(e)?(u(e,G(e,r)),z(e)):e;q=W,D=((e,r)=>{const t=e[r];if(r===a)return t;if(r===j)return e;const n=f(e),{names:o,config:s,checker:c}=n;return c.getProperty&&c.getProperty(e,r,t,s,o),!N(t)||B(t)?t:((e,r,t,n)=>{const o=f(r),{deep:s,children:c,names:i,checker:p}=o;if(s||n instanceof Function){const r=m(c,t);r?n=e(n,{info:r}):(n=e(n,{deep:s,names:[...i,t],checker:p}),h(c,t,n))}return n})(q,e,r,t)});var q;H=W,M=((e,r,t)=>{if(r===j)throw new Error(`"${j}" is a virtual property and cannot be set`);return((e,r,t)=>{if(r===a){let n=f(e);return n=n&&t&&n!==t?k(n,t):t,e[r]=n,!0}if(!N(t)){const{names:n,config:o,checker:s}=f(e);return s.setProperty&&s.setProperty(e,r,t,o,n),e[r]=t,!0}return!1})(e,r,t)||((e,r,t,n)=>{const{deep:o,names:s,checker:c,config:i,children:p}=f(r);if(c.setProperty&&c.setProperty(r,t,n,i,s),F.wrapSetPropertyValues){if(!B(n)){const r=m(p,t);n=e(n,r?{info:r}:{deep:o,names:[...s,t],checker:c})}h(p,t,n)}return r[t]=n,!0})(H,e,r,t)});var H;J=W,_=((e,r,t)=>{const n=f(e),{names:o,config:c,checker:i}=n;i.arguments&&i.arguments(e,r,t,c,o),t=((e,r,t)=>{if(F.wrapFunctionArguments){const{deep:n,names:o,checker:s}=f(r),{length:c}=t;for(let r=0;r<c;r++)t[r]=e(t[r],{deep:n,names:[...o,r],checker:s})}return t})(J,e,t);const p=e.apply(r,t);return i.returnValue&&i.returnValue(e,r,p,c,o),((e,r,t)=>{if(F.wrapFunctionReturnValues){const{deep:n,names:o,checker:c,children:i}=f(r);if(!B(t)){const r=m(i,s);t=e(t,r?{info:r}:{deep:n,names:[...o],checker:c})}h(i,s,t)}return t})(J,e,p)});var J;const K=(e,r)=>{const t=G(e,r),{deep:n,names:o,checker:s,config:c,children:i}=t;return Object.keys(e).forEach(r=>{const t=e[r];if(s.getProperty(e,r,t,c,o),"object"==typeof t){let e=m(i,r);e?K(t,{info:e}):(e=K(t,{deep:n,names:[...o,r],checker:s}),g(i,r,e))}}),u(e,t),t};e.PrimitiveTypeChecker=x,e.getDefaultTypeChecker=R,e.setDefaultTypeChecker=(e=>{O=e}),e.ConsoleErrorReporter=v,e.ConsoleWarnReporter=((e,r,t,n)=>console.warn(I(e,r,t,n))),e.ThrowErrorReporter=((e,r,t,n)=>{throw new Error(I(e,r,t,n))}),e.getErrorReporter=$,e.setErrorReporter=(e=>E=e),e.isEnabled=V,e.setEnabled=((e=!0)=>{S=!!e}),e.getTargetInfo=f,e.hasTargetInfo=y,e.setTargetInfo=u,e.getTargetTypeChecker=(e=>e&&e[a]?e[a].checker:void 0),e.getTargetTypeCheckerConfig=l,e.mergeTargetInfo=k,e.getOriginalTarget=(e=>e[j]||e),e.objectMerge=((e,...r)=>{let t={};return V()&&(e||(e={info:f(r.find(e=>y(e))),deep:!1}),t=W(t,e)),Object.assign(t,...r)}),e.getProxyConfig=(()=>Object.assign({},F)),e.setProxyConfig=(e=>Object.assign(F,e)),e.create=W,e.createDeep=((e,r)=>e&&"object"==typeof e&&V()&&!B(e)?(K(e,r),z(e)):e),e.isTypeChecked=B,e.isValidTarget=N,e.default=W,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=type-checkers.min.js.map
