!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(e.TypeCheckers={})}(this,function(e){"use strict";const r="ReturnValue",t=e=>e.reduce((e,r)=>e=String(parseInt(r,10))===r?`${e}[${r}]`:/^[a-z][\w$]*$/i.test(r)?e?`${e}.${r}`:r:`${e}["${r}"]`,""),n=(e,r,n,o,c,s)=>{if(!o)return!0;const i=r[n];if(i){if(i!==o)return c(e,t([...s,n]),r[n],o),!1}else r[n]=o;return!0};let o={collectTypesOnInit:!0,init(e,r,t=null){let n={};return t?n=t:this.collectTypesOnInit&&Object.keys(e).forEach(r=>{n[r]=this.getTypeString(e[r])}),{types:n,errorReporter:r}},getTypeString:e=>void 0===e?"":e instanceof Array?"array":typeof e,mergeConfigs({types:e,errorReporter:r},n,o=[]){const c=n.types;for(const n in c){const s=c[n],i=e[n];s&&i&&i!==s?r("Merge",t([...o,n]),i,s):e[n]=s}},getProperty(e,r,t,{types:o,errorReporter:c},s){return n("GetProperty",o,r,this.getTypeString(t),c,s)},setProperty(e,r,t,{types:o,errorReporter:c},s){return n("SetProperty",o,r,this.getTypeString(t),c,s)},arguments(e,r,t,{types:o,errorReporter:c},s){const{length:i}=t;let p=!0;for(let e=0;e<i;e++){p=n("Arguments",o,String(e),this.getTypeString(t[e]),c,s)&&p}return p},returnValue(e,t,o,{types:c,errorReporter:s},i){return n(r,c,"",this.getTypeString(o),s,i)}};const c=()=>o,s=(e,r,t,n)=>`${e}Error on "${r}" instead of "${t}" received "${n}"`,i=(e,r,t,n)=>console.error(s(e,r,t,n));let p=i;const a=()=>p;let u=!0;const f=()=>u,g=Symbol("type-checkers::info"),l=e=>e?e[g]:void 0,y=(e,r)=>{e&&r&&(e[g]=r)},d=e=>!!l(e),h=(e={})=>Object.assign({},e),m=(e,r,t)=>{k=e,T=r,b=l(t),delete k[T],b&&(k[T]=b)};var k,T,b;const w=(e,r)=>e[r],P=(e,r)=>{const{deep:t,checker:n,children:o,config:c,names:s}=e;return n===r.checker?(e.deep=t||r.deep,e.children=((e,r)=>{for(const t in r)e.hasOwnProperty(t)?e[t]=P(e[t],r[t]):e[t]=r[t];return e})(o,r.children),e.config=n.mergeConfigs(c,r.config,s)):console.error("TypeChecked objects can be merged only if using exactly same instance of type checker."),e},C={wrapFunctionReturnValues:!0,wrapFunctionArguments:!1,wrapSetPropertyValues:!0},R=Symbol("type-checkers::target"),j={object:!0,function:!0},S=e=>e&&j[typeof e],$=e=>Boolean(e&&e[R]);let v,E,O;const V=e=>e instanceof Function?new Proxy(e,{apply:O,construct:O}):new Proxy(e,{get:v,set:E});const x=(e,{deep:r=!0,names:t=[],config:n=null,children:o=null,checker:s=c(),info:i=null}={})=>S(e)&&f()&&!$(e)?(y(e,i||((e,r,t=!0,n=[],o=h())=>({checker:e,config:r,deep:t,names:n,children:o}))(s,s.init(e,a(),n),r,t,h(o))),V(e)):e;I=x,v=((e,r)=>{const t=e[r];if(r===g)return t;if(r===R)return e;const n=l(e),{names:o,config:c,checker:s}=n;return s.getProperty&&s.getProperty(e,r,t,c,o),!S(t)||$(t)?t:((e,r,t,n)=>{const o=l(r),{deep:c,children:s,names:i,checker:p}=o;if(c||n instanceof Function){const r=w(s,t);r?n=e(n,{info:r}):(n=e(n,{deep:c,names:[...i,t],checker:p}),m(s,t,n))}return n})(I,e,r,t)});var I;F=x,E=((e,r,t)=>{if(r===R)throw new Error(`"${R}" is a virtual property and cannot be set`);const{names:n,config:o,checker:c}=l(e);return c.setProperty&&c.setProperty(e,r,t,o,n),((e,r,t)=>{if(r===g){let n=l(e);return n=n&&t&&n!==t?P(n,t):t,e[r]=n,!0}return!S(t)&&(e[r]=t,!0)})(e,r,t)||((e,r,t,n)=>{if(C.wrapSetPropertyValues){const{deep:o,names:c,checker:s,children:i}=l(r);if(!$(n)){const r=w(i,t);n=e(n,r?{info:r}:{deep:o,names:[...c,t],checker:s})}m(i,t,n)}return r[t]=n,!0})(F,e,r,t)});var F;A=x,O=((e,t,n)=>{const o=l(e),{names:c,config:s,checker:i}=o;i.arguments&&i.arguments(e,t,n,s,c),n=((e,r,t)=>{if(C.wrapFunctionArguments){const{deep:n,names:o,checker:c}=l(r),{length:s}=t;for(let r=0;r<s;r++)t[r]=e(t[r],{deep:n,names:[...o,r],checker:c})}return t})(A,e,n);const p=e.apply(t,n);return i.returnValue&&i.returnValue(e,t,p,s,c),((e,t,n)=>{if(C.wrapFunctionReturnValues){const{deep:o,names:c,checker:s,children:i}=l(t);if(!$(n)){const t=w(i,r);n=e(n,t?{info:t}:{deep:o,names:[...c],checker:s})}m(i,r,n)}return n})(A,e,p)});var A;const D=e=>{for(const r in e){const t=e[r];"object"==typeof t&&D(t)}};e.getDefaultTypeChecker=c,e.setDefaultTypeChecker=(e=>o=e),e.ConsoleErrorReporter=i,e.ConsoleWarnReporter=((e,r,t,n)=>console.warn(s(e,r,t,n))),e.ThrowErrorReporter=((e,r,t,n)=>{throw new Error(s(e,r,t,n))}),e.getErrorReporter=a,e.setErrorReporter=(e=>p=e),e.isEnabled=f,e.setEnabled=((e=!0)=>u=!!e),e.getTargetInfo=l,e.hasTargetInfo=d,e.setTargetInfo=y,e.getTargetTypeChecker=(e=>e&&e[g]?e[g].checker:void 0),e.getTargetTypeCheckerConfig=(e=>e&&e[g]?e[g].config:void 0),e.mergeTargetInfo=P,e.objectMerge=((e,...r)=>{let t={};return f()&&(e||(e={info:l(r.find(e=>d(e))),deep:!1}),t=x(t,e)),Object.assign(t,...r)}),e.getProxyConfig=(()=>Object.assign({},C)),e.setProxyConfig=(e=>Object.assign(C,e)),e.create=x,e.createDeep=((e,r)=>{if(!e||"object"!==e||!f()||$(e))return e;const t=x(e,Object.assign({},r,{deep:!0}));return D(t),t}),e.isTypeChecked=$,e.isValidTarget=S,e.default=x,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=type-checkers.min.js.map
