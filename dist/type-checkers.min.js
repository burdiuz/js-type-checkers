!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(e.TypeCheckers={})}(this,function(e){"use strict";let r;const t=()=>r,n=e=>r=e,o=(e,r,t,n)=>`TypeChecker error for "${e}" on "${r}" instead of "${t}" received "${n}"`,s=(e,r,t,n)=>console.error(o(e,r,t,n));let c=s;const p=()=>c;let i=!0;const y=()=>i,a=Symbol("data-checkers::config"),u=e=>e[a],g={object:!0,function:!0},f=e=>e&&g[typeof e],l=(e,r)=>{const t=e[r];if(r===a)return t;const{deep:n,names:o,config:s,typeChecker:c}=u(e);if(c.getProperty&&c.getProperty(e,r,t,s,o),n&&f(t)||t instanceof Function){const{children:s}=u(e);return s.hasOwnProperty(r)||(s[r]=T(t,{deep:n,names:[...o,r]},c)),s[r]}return t},h=(e,r,t,n)=>{const{names:o,config:s,children:c,typeChecker:p}=u(e);r!==a&&(delete c[r],p.setProperty&&p.setProperty(e,r,t,s,o)),e[r]=t},d=(e,r,t)=>{const{names:n,config:o,typeChecker:s}=u(e);s.arguments&&s.arguments(e,r,t,o,n);const c=e.apply(r,t);return s.returnValue&&s.returnValue(e,r,c,o,n),c},T=(e,{deep:r=!0,names:n=[]}={},o=t())=>f(e)&&y()&&!u(e)?(C=e,k={deep:r,names:n,children:{},typeChecker:o,config:o.init(e,p())},C[a]=k,e instanceof Function?new Proxy(e,{apply:d,construct:d}):new Proxy(e,{get:l,set:h})):e;var C,k;const m=(e,r,t,n,o,s)=>{if(!n)return!0;const c=r[t];if(c){if(c!==n)return o(e,[...s,t].reduce((e,r)=>e=String(parseInt(r,10))===r?`${e}[${r}]`:/^[a-z][\w$]*$/i.test(r)?e?`${e}.${r}`:r:`${e}["${r}"]`,""),r[t],n),!1}else r[t]=n;return!0};n({collectTypesOnInit:!0,getTypeString:e=>void 0===e?"":e instanceof Array?"array":typeof e,init(e,r){const t={};return this.collectTypesOnInit&&Object.keys(e).forEach(r=>{t[r]=this.getTypeString(e[r])}),{types:t,errorReporter:r}},getProperty(e,r,t,{types:n,errorReporter:o},s){return m("getProperty",n,r,this.getTypeString(t),o,s)},setProperty(e,r,t,{types:n,errorReporter:o},s){return m("setProperty",n,r,this.getTypeString(t),o,s)},arguments(e,r,t,{types:n,errorReporter:o},s){const{length:c}=t;let p=!0;for(let e=0;e<c;e++){p=m("arguments",n,String(e),this.getTypeString(t[e]),o,s)&&p}return p},returnValue(e,r,t,{types:n,errorReporter:o},s){return m("returnValue",n,"",this.getTypeString(t),o,s)}}),e.getDefaultTypeChecker=t,e.setDefaultTypeChecker=n,e.ConsoleErrorReporter=s,e.ConsoleWarnReporter=((e,r,t,n)=>console.warn(o(e,r,t,n))),e.getErrorReporter=p,e.setErrorReporter=(e=>c=e),e.ThrowErrorReporter=((e,r,t,n)=>{throw new Error(o(e,r,t,n))}),e.isEnabled=y,e.setEnabled=(e=>i=!!e),e.getTargetTypeChecker=(e=>e[a]&&e[a].typeChecker),e.getTargetTypeCheckerConfig=(e=>e[a]&&e[a].config),e.create=T,e.isValidTarget=f,e.default=T,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=type-checkers.min.js.map
