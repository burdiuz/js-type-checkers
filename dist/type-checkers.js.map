{"version":3,"file":"type-checkers.js","sources":["../source/checkers/index.js","../source/proxy/config.js","../source/reporters/utils.js","../source/reporters/console.js","../source/reporters/error.js","../source/reporters/index.js","../source/enabled.js","../source/target/info.js","../source/target/proxy.js","../source/utils.js","../source/proxy/getProperty.js","../source/proxy/setProperty.js","../source/proxy/utils.js","../source/proxy/callFunction.js","../source/proxy/create.js","../source/proxy/createDeep.js","../source/target/object/merge.js","../source/target/object/properties.js"],"sourcesContent":["let defaultTypeChecker = null;\n\nconst getDefaultTypeChecker = () => defaultTypeChecker;\nconst setDefaultTypeChecker = (typeChecker) => {\n  defaultTypeChecker = typeChecker;\n};\n\nexport {\n  getDefaultTypeChecker,\n  setDefaultTypeChecker,\n};\n","import hasOwn from '@actualwave/hasOwn';\n\nexport const PROXY_WRAP_FUNCTION_RETURN_VALUES = 'wrapFunctionReturnValues';\nexport const PROXY_WRAP_FUNCTION_ARGUMENTS = 'wrapFunctionArguments';\nexport const PROXY_WRAP_SET_PROPERTY_VALUES = 'wrapSetPropertyValues';\nexport const PROXY_IGNORE_PROTOTYPE_METHODS = 'ignorePrototypeMethods';\n\nexport const getDefaultProxyConfig = () => ({\n  [PROXY_WRAP_FUNCTION_RETURN_VALUES]: true,\n  [PROXY_WRAP_FUNCTION_ARGUMENTS]: false,\n  [PROXY_WRAP_SET_PROPERTY_VALUES]: true,\n  [PROXY_IGNORE_PROTOTYPE_METHODS]: false,\n});\n\nconst config = getDefaultProxyConfig();\n\nexport const setProxyConfig = (newConfig) => Object.assign(config, newConfig);\n\nexport const getProxyConfig = () => ({ ...config });\n\nexport const getProxyConfigValue = (key, info = null) =>\n  (hasOwn(info, key) ? info[key] : config[key]);\n","export const constructErrorString = (action, name, required, actual) =>\n  `${action}Error on \"${name}\" instead of \"${required}\" received \"${actual}\"`;\n","import { constructErrorString } from './utils';\n\nexport const ConsoleErrorReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\nexport const ConsoleWarnReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.warn(constructErrorString(action, name, requiredTypeString, actualTypeString));\n","import { constructErrorString } from './utils';\n\nexport const ThrowErrorReporter = (action, name, requiredTypeString, actualTypeString) => {\n  throw new Error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n};\n","import {\n  ConsoleErrorReporter,\n  ConsoleWarnReporter,\n} from './console';\nimport { ThrowErrorReporter } from './error';\n\nlet errorReporter = ConsoleErrorReporter;\n\nconst getErrorReporter = () => errorReporter;\n\nconst setErrorReporter = (reporter) => {\n  errorReporter = reporter;\n};\n\nexport {\n  ConsoleErrorReporter,\n  ConsoleWarnReporter,\n  ThrowErrorReporter,\n  getErrorReporter,\n  setErrorReporter,\n};\n","let enabled = true;\n\nexport const isEnabled = () => enabled;\nexport const setEnabled = (value = true) => {\n  enabled = !!value;\n};\n","import hasOwn from '@actualwave/hasOwn';\n\nexport const INFO_KEY = Symbol('type-checkers::info');\n\nexport const createChildrenCache = (children = {}) => ({ ...children });\n\nexport const createTargetInfo = (\n  checker,\n  config,\n  deep = true,\n  names = [],\n  children = createChildrenCache(),\n) => ({\n  checker,\n  config,\n  deep,\n  names,\n  children,\n});\n\nexport const getTargetInfo = (target) => (target ? target[INFO_KEY] : undefined);\n\nexport const setTargetInfo = (target, info) => {\n  if (target && info) {\n    target[INFO_KEY] = info;\n  }\n};\n\nexport const hasTargetInfo = (target) => !!getTargetInfo(target);\n\nexport const getTargetTypeChecker = (target) =>\n  (target && target[INFO_KEY] ? target[INFO_KEY].checker : undefined);\n\nexport const getTargetTypeCheckerConfig = (target) => {\n  if (!target || !target[INFO_KEY]) {\n    return undefined;\n  }\n\n  return target[INFO_KEY].config;\n};\n\nexport const mergeChildrenCache = (targetCache, sourceCache) => {\n  for (const name in sourceCache) {\n    if (hasOwn(targetCache, name)) {\n      targetCache[name] = mergeTargetInfo(targetCache[name], sourceCache[name]);\n    } else {\n      targetCache[name] = sourceCache[name];\n    }\n  }\n\n  return targetCache;\n};\n\nexport const storeChildInfo = (cache, name, childInfo) => {\n  delete cache[name];\n\n  if (childInfo) {\n    cache[name] = childInfo;\n  }\n};\n\nexport const storeChildInfoFrom = (cache, name, child) => {\n  storeChildInfo(cache, name, getTargetInfo(child));\n};\n\nexport const getChildInfo = (cache, name) => cache[name];\n\nexport const hasChildInfo = (cache, name) => !!cache[name];\n\nexport const removeChildInfo = (cache, name) => delete cache[name];\n\nexport const mergeTargetInfo = (targetInfo, sourceInfo) => {\n  const { deep, checker, children, config, names } = targetInfo;\n\n  if (checker === sourceInfo.checker) {\n    targetInfo.deep = deep || sourceInfo.deep;\n    targetInfo.children = mergeChildrenCache(children, sourceInfo.children);\n    targetInfo.config = checker.mergeConfigs(config, sourceInfo.config, names);\n  } else {\n    console.error('TypeChecked objects can be merged only if using exactly same instance of type checker.');\n  }\n\n  return targetInfo;\n};\n","export const TARGET_KEY = Symbol('type-checkers::target');\n\nexport const getOriginalTarget = (target) => {\n  return target[TARGET_KEY] || target;\n};\n","import { TARGET_KEY } from './target/proxy';\n\nconst validTypes = {\n  object: true,\n  function: true,\n};\n\nexport const isValidTarget = (target) => Boolean(target && validTypes[typeof target]);\nexport const isTypeChecked = (target) => Boolean(target && target[TARGET_KEY]);\n","import hasOwn from '@actualwave/hasOwn';\n\nimport {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n} from '../target/info';\n\nimport {\n  getProxyConfigValue,\n  PROXY_IGNORE_PROTOTYPE_METHODS,\n} from './config';\n\nimport {\n  isValidTarget,\n  isTypeChecked,\n} from '../utils';\n\nimport { TARGET_KEY } from '../target/proxy';\n\nconst getTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, children, names, checker } = info;\n\n  if (deep || value instanceof Function) {\n    const childInfo = getChildInfo(children, property);\n\n    if (childInfo) {\n      value = createFn(value, { info: childInfo });\n    } else {\n      value = createFn(value, { deep, names: [...names, property], checker });\n      storeChildInfoFrom(children, property, value);\n    }\n  }\n\n  return value;\n};\n\nconst isIgnoredProperty = (target, info, property, value) => {\n  if (\n    value instanceof Function\n    && !hasOwn(target, property)\n    && getProxyConfigValue(PROXY_IGNORE_PROTOTYPE_METHODS, info)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getProperty = (createFn) => (target, property) => {\n  const value = target[property];\n\n  if (property === INFO_KEY) {\n    return value;\n    /*\n    target[TARGET_KEY] is a virtual property accessing which indicates\n    if object is wrapped with type checked proxy or not.\n    */\n  } else if (property === TARGET_KEY) {\n    return target;\n  }\n\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.getProperty) {\n    checker.getProperty(target, property, value, config, names);\n  }\n\n  if (\n    !isValidTarget(value)\n    || isTypeChecked(value)\n    || isIgnoredProperty(target, info, property, value)\n  ) {\n    return value;\n  }\n\n  return getTargetProperty(createFn, target, property, value);\n};\n\nexport default getProperty;\n","import {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n  mergeTargetInfo,\n} from '../target/info';\n\nimport {\n  getProxyConfigValue,\n  PROXY_WRAP_SET_PROPERTY_VALUES,\n} from './config';\n\nimport {\n  isValidTarget,\n  isTypeChecked,\n} from '../utils';\n\nimport { TARGET_KEY } from '../target/proxy';\n\nconst setNonTargetProperty = (target, property, value) => {\n  if (property === INFO_KEY) {\n    let info = getTargetInfo(target);\n    if (info && value && info !== value) {\n      info = mergeTargetInfo(info, value);\n    } else {\n      info = value;\n    }\n\n    target[property] = info;\n    return true;\n  } else if (!isValidTarget(value)) {\n    const { names, config, checker } = getTargetInfo(target);\n\n    if (checker.setProperty) {\n      checker.setProperty(target, property, value, config, names);\n    }\n\n    target[property] = value;\n    return true;\n  }\n\n  return false;\n};\n\nconst setTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, names, checker, config, children } = info;\n\n  if (checker.setProperty) {\n    checker.setProperty(target, property, value, config, names);\n  }\n\n  if (getProxyConfigValue(PROXY_WRAP_SET_PROPERTY_VALUES, info)) {\n    if (!isTypeChecked(value)) {\n      const childInfo = getChildInfo(children, property);\n\n      if (childInfo) {\n        value = createFn(value, { info: childInfo });\n      } else {\n        value = createFn(value, { deep, names: [...names, property], checker });\n      }\n    }\n\n    storeChildInfoFrom(children, property, value);\n  }\n\n  target[property] = value;\n  return true;\n};\n\nconst setProperty = (createFn) => (target, property, value) => {\n  if (property === TARGET_KEY) {\n    throw new Error(`\"${TARGET_KEY}\" is a virtual property and cannot be set`);\n  }\n\n  return setNonTargetProperty(target, property, value)\n    || setTargetProperty(createFn, target, property, value);\n};\n\nexport default setProperty;\n","import { isTypeChecked, isValidTarget } from '../utils';\nimport { getChildInfo, storeChildInfoFrom } from '../target/info';\n\nexport const getTypeCheckedChild = (createFn, info, name, value) => {\n  if (!isValidTarget(value)) {\n    return value;\n  }\n\n  let result = value;\n\n  if (!isTypeChecked(value)) {\n    const { children } = info;\n    const childInfo = getChildInfo(children, name);\n\n    if (childInfo) {\n      result = createFn(value, { info: childInfo });\n    } else {\n      const { deep, names, checker } = info;\n      result = createFn(value, { deep, names: [...names, name], checker });\n      storeChildInfoFrom(children, name, result);\n    }\n  }\n\n  return result;\n};\n","import { getTargetInfo } from '../target/info';\n\nimport {\n  getProxyConfigValue,\n  PROXY_WRAP_FUNCTION_ARGUMENTS,\n  PROXY_WRAP_FUNCTION_RETURN_VALUES\n} from './config';\n\nimport { getTypeCheckedChild } from './utils';\n\nconst getTargetArguments = (createFn, target, argumentsList) => {\n  const info = getTargetInfo(target);\n\n  if (getProxyConfigValue(PROXY_WRAP_FUNCTION_ARGUMENTS, info)) {\n    const { length } = argumentsList;\n    // FIXME cache arguments info objects as children\n    for (let index = 0; index < length; index++) {\n      argumentsList[index] = getTypeCheckedChild(\n        createFn,\n        info,\n        String(index),\n        argumentsList[index]\n      );\n    }\n  }\n\n  return argumentsList;\n};\n\nconst callFunction = (createFn) => (target, thisArg, argumentsList) => {\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.arguments) {\n    checker.arguments(target, thisArg, argumentsList, config, names);\n  }\n\n  argumentsList = getTargetArguments(createFn, target, argumentsList);\n\n  let result = target.apply(thisArg, argumentsList);\n\n  if (checker.returnValue) {\n    checker.returnValue(target, thisArg, result, config, names);\n  }\n\n  if (getProxyConfigValue(PROXY_WRAP_FUNCTION_RETURN_VALUES, info)) {\n    result = getTypeCheckedChild(createFn, info, 'returnValue', result);\n  }\n\n  return result;\n};\n\nexport default callFunction;\n","import { getDefaultTypeChecker } from '../checkers';\nimport { getErrorReporter } from '../reporters';\nimport { isEnabled } from '../enabled';\nimport {\n  createTargetInfo,\n  setTargetInfo,\n  createChildrenCache,\n} from '../target/info';\nimport { isValidTarget, isTypeChecked } from '../utils';\nimport getPropertyInit from './getProperty';\nimport setPropertyInit from './setProperty';\nimport callFunctionInit from './callFunction';\n\nlet getProperty;\nlet setProperty;\nlet callFunction;\n\nconst objectProxy = (target) => new Proxy(\n  target,\n  {\n    get: getProperty,\n    set: setProperty,\n  },\n);\n\nconst functionProxy = (target) => new Proxy(\n  target,\n  {\n    get: getProperty,\n    set: setProperty,\n    apply: callFunction,\n    construct: callFunction,\n  },\n);\n\nexport const wrapWithProxy = (target) => {\n  if (target instanceof Function) {\n    return functionProxy(target);\n  }\n\n  return objectProxy(target);\n};\n\nexport const createInfoFromOptions = (target, {\n  deep = true,\n  names = [],\n  config = null,\n  children = null,\n  checker = getDefaultTypeChecker(),\n  info = null, // exclusive option, if set other options being ignored\n} = {}) => info || createTargetInfo(\n  checker,\n  checker.init(target, getErrorReporter(), config),\n  deep,\n  names,\n  createChildrenCache(children),\n);\n\nconst create = (target, options) => {\n  if (!isValidTarget(target) || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  setTargetInfo(\n    target,\n    createInfoFromOptions(target, options),\n  );\n\n  return wrapWithProxy(target);\n};\n\ngetProperty = getPropertyInit(create);\nsetProperty = setPropertyInit(create);\ncallFunction = callFunctionInit(create);\n\nexport default create;\n","import { isEnabled } from '../enabled';\nimport {\n  setTargetInfo,\n  storeChildInfo,\n  getChildInfo,\n} from '../target/info';\nimport { isTypeChecked } from '../utils';\nimport { wrapWithProxy, createInfoFromOptions } from './create';\n\nconst deepInitializer = (target, options) => {\n  const info = createInfoFromOptions(target, options);\n  const { deep, names, checker, config, children } = info;\n\n  Object.keys(target)\n    .forEach((name) => {\n      const value = target[name];\n\n      checker.getProperty(target, name, value, config, names);\n\n      // skip functions/methods since we get info about them only when being executed\n      if (typeof value === 'object') {\n        let childInfo = getChildInfo(children, name);\n\n        if (childInfo) {\n          deepInitializer(value, { info: childInfo });\n        } else {\n          childInfo = deepInitializer(value, { deep, names: [...names, name], checker });\n          storeChildInfo(children, name, childInfo);\n        }\n      }\n    });\n\n  setTargetInfo(target, info);\n\n  return info;\n};\n\nconst createDeep = (target, options) => {\n  if (!target || typeof target !== 'object' || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  deepInitializer(target, options);\n\n  return wrapWithProxy(target);\n};\n\nexport default createDeep;\n","import {\n  getTargetInfo,\n  hasTargetInfo,\n} from '../info';\n\nimport create from '../../proxy/create';\n\nimport { isEnabled } from '../../enabled';\n\nconst objectMerge = (options, ...sources) => {\n  let target = {};\n\n  if (isEnabled()) {\n    if (!options) {\n      options = {\n        info: getTargetInfo(sources.find((item) => hasTargetInfo(item))),\n        deep: false,\n      };\n    }\n\n    target = create(target, options);\n  }\n\n  return Object.assign(target, ...sources);\n};\n\nexport default objectMerge;\n","import { isEnabled } from '../../enabled';\nimport { isValidTarget, isTypeChecked } from '../../utils';\nimport create from '../../proxy/create';\n\n// TODO if enabled, replaces original value with type checked\nconst properties = (target, options = undefined, ...names) => {\n  if (!isEnabled()) {\n    return target;\n  }\n\n  if (!isValidTarget(target)) {\n    throw new Error('Target must be a valid object.');\n  }\n\n  if (Object.isFrozen(target) || Object.isSealed(target)) {\n    throw new Error('Target object should not be sealed or frozen.');\n  }\n\n  if (!names.length) {\n    // Symbols and non-enumerables must be explicitly specified\n    names = Object.keys(target);\n  }\n\n  const { length } = names;\n  for (let index = 0; index < length; index += 1) {\n    const name = names[index];\n    const { writable, get, set } = Object.getOwnPropertyDescriptor(target, name);\n\n    // Prohibit applying to properties with accessor/mutator pair?\n    if ((get && set) || writable) {\n      const value = target[name];\n\n      if (isValidTarget(value) && !isTypeChecked(value)) {\n        target[name] = create(value, options);\n      }\n    }\n  }\n\n  return target;\n};\n\nexport default properties;\n"],"names":["defaultTypeChecker","getDefaultTypeChecker","setDefaultTypeChecker","typeChecker","PROXY_WRAP_FUNCTION_RETURN_VALUES","PROXY_WRAP_FUNCTION_ARGUMENTS","PROXY_WRAP_SET_PROPERTY_VALUES","PROXY_IGNORE_PROTOTYPE_METHODS","getDefaultProxyConfig","config","setProxyConfig","newConfig","Object","assign","getProxyConfig","getProxyConfigValue","key","info","hasOwn","constructErrorString","action","name","required","actual","ConsoleErrorReporter","requiredTypeString","actualTypeString","console","error","ConsoleWarnReporter","warn","ThrowErrorReporter","Error","errorReporter","getErrorReporter","setErrorReporter","reporter","enabled","isEnabled","setEnabled","value","INFO_KEY","Symbol","createChildrenCache","children","createTargetInfo","checker","deep","names","getTargetInfo","target","undefined","setTargetInfo","hasTargetInfo","getTargetTypeChecker","getTargetTypeCheckerConfig","mergeChildrenCache","targetCache","sourceCache","mergeTargetInfo","storeChildInfo","cache","childInfo","storeChildInfoFrom","child","getChildInfo","targetInfo","sourceInfo","mergeConfigs","TARGET_KEY","getOriginalTarget","validTypes","isValidTarget","Boolean","isTypeChecked","getTargetProperty","createFn","property","Function","isIgnoredProperty","getProperty","setNonTargetProperty","setProperty","setTargetProperty","getTypeCheckedChild","result","getTargetArguments","argumentsList","length","index","String","callFunction","thisArg","arguments","apply","returnValue","objectProxy","Proxy","functionProxy","wrapWithProxy","createInfoFromOptions","init","create","options","getPropertyInit","setPropertyInit","callFunctionInit","deepInitializer","keys","forEach","createDeep","objectMerge","sources","find","item","properties","isFrozen","isSealed","writable","get","set","getOwnPropertyDescriptor"],"mappings":"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"}