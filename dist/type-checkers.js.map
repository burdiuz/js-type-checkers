{"version":3,"file":"type-checkers.js","sources":["../source/checkers/utils.js","../source/checkers/primitive.js","../source/checkers/index.js","../source/reporters/utils.js","../source/reporters/console.js","../source/reporters/error.js","../source/reporters/index.js","../source/enabled.js","../source/target/index.js","../source/proxy/config.js","../source/utils.js","../source/proxy/proxy.js"],"sourcesContent":["\nexport const GET_PROPERTY = 'GetProperty';\nexport const SET_PROPERTY = 'SetProperty';\nexport const ARGUMENTS = 'Arguments';\nexport const RETURN_VALUE = 'ReturnValue';\nexport const MERGE = 'Merge';\n\nexport const buildPath = sequence => sequence\n  .reduce((str, name) => {\n    if (String(parseInt(name, 10)) === name) {\n      str = `${str}[${name}]`;\n    } else if (/^[a-z][\\w$]*$/i.test(name)) {\n      str = str ? `${str}.${name}` : name;\n    } else {\n      str = `${str}[\"${name}\"]`;\n    }\n\n    return str;\n  }, '');\n","import {\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  MERGE,\n  buildPath,\n} from './utils';\n\nconst checkType = (action, types, name, type, errorReporter, sequence) => {\n  if (!type) {\n    return true;\n  }\n\n  const storedType = types[name];\n\n  if (storedType) {\n    // TODO add possibility to store function in types[name] that can be called to identify if there are type error\n    if (storedType !== type) {\n      errorReporter(action, buildPath([...sequence, name]), types[name], type);\n\n      return false;\n    }\n  } else {\n    types[name] = type;\n  }\n\n  return true;\n};\n\nconst PrimitiveTypeChecker = {\n  collectTypesOnInit: true,\n\n  init(target, errorReporter, cachedTypes = null) {\n    let types = {};\n\n    if (cachedTypes) {\n      types = cachedTypes;\n    } else if (this.collectTypesOnInit) {\n      Object.keys(target)\n        .forEach((key) => {\n          types[key] = this.getTypeString(target[key]);\n        });\n    }\n\n    return {\n      types,\n      errorReporter,\n    };\n  },\n\n  getTypeString(value) {\n    if (value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return 'array';\n    }\n\n    return typeof value;\n  },\n\n  mergeConfigs({ types, errorReporter }, source, names = []) {\n    const sourceTypes = source.types;\n\n    for (const name in sourceTypes) {\n      const sourceType = sourceTypes[name];\n      const targetType = types[name];\n      \n      if (sourceType && targetType && targetType !== sourceType) {\n        errorReporter(MERGE, buildPath([...names, name]), targetType, sourceType);\n      } else {\n        types[name] = sourceType;\n      }\n    }\n  },\n\n  getProperty(target, name, value, { types, errorReporter }, sequence) {\n    return checkType(\n      GET_PROPERTY,\n      types,\n      name,\n      this.getTypeString(value),\n      errorReporter,\n      sequence,\n    );\n  },\n\n  setProperty(target, name, newValue, { types, errorReporter }, sequence) {\n    return checkType(\n      SET_PROPERTY,\n      types,\n      name,\n      this.getTypeString(newValue),\n      errorReporter,\n      sequence,\n    );\n  },\n\n  arguments(target, thisArg, args, { types, errorReporter }, sequence) {\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const agrValid = checkType(\n        ARGUMENTS,\n        types,\n        String(index),\n        this.getTypeString(args[index]),\n        errorReporter,\n        sequence,\n      );\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  },\n\n  returnValue(target, thisArg, value, { types, errorReporter }, sequence) {\n    return checkType(\n      RETURN_VALUE,\n      types,\n      '',\n      this.getTypeString(value),\n      errorReporter,\n      sequence,\n    );\n  },\n};\n\nexport default PrimitiveTypeChecker;\n","import PrimitiveTypeChecker from './primitive';\n\nlet defaultTypeChecker = PrimitiveTypeChecker;\n\nexport const getDefaultTypeChecker = () => defaultTypeChecker;\nexport const setDefaultTypeChecker = (typeChecker) => defaultTypeChecker = typeChecker;\n","export const constructErrorString = (action, name, required, actual) =>\n  `${action}Error on \"${name}\" instead of \"${required}\" received \"${actual}\"`;\n","import { constructErrorString } from './utils';\n\nexport const ConsoleErrorReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\nexport const ConsoleWarnReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.warn(constructErrorString(action, name, requiredTypeString, actualTypeString));\n","import { constructErrorString } from './utils';\n\nexport const ThrowErrorReporter = (action, name, requiredTypeString, actualTypeString) => {\n  throw new Error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n};\n","import { ConsoleErrorReporter } from './console';\n\nlet errorReporter = ConsoleErrorReporter;\n\nexport const getErrorReporter = () => errorReporter;\n\nexport const setErrorReporter = (reporter) => errorReporter = reporter;\n","let enabled = true;\n\nexport const isEnabled = () => enabled;\nexport const setEnabled = (value = true) => enabled = !!value;\n","export const INFO_KEY = Symbol('type-checkers::info');\n\nexport const createTargetInfo = (checker, config, deep = true, names = [], children = createChildrenCache()) => ({\n  checker,\n  config,\n  deep,\n  names,\n  children,\n});\nexport const getTargetInfo = (target) => target[INFO_KEY];\nexport const setTargetInfo = (target, info) => target[INFO_KEY] = info;\nexport const getTargetTypeChecker = (target) => getTargetInfo(target).checker;\nexport const getTargetTypeCheckerConfig = (target) => getTargetInfo(target).config;\n\nexport const createChildrenCache = (children = {}) => ({ ...children });\n\nexport const mergeChildrenCache = (targetCache, sourceCache) => {\n  for (const name in sourceCache) {\n    if (targetCache.hasOwnProperty(name)) {\n      targetCache[name] = mergeTargetInfo(targetCache[name], sourceCache[name]);\n    } else {\n      targetCache[name] = sourceCache[name];\n    }\n  }\n\n  return targetCache;\n};\n\nexport const storeChildInfo = (cache, name, childInfo) => {\n  // FIXME shoud it merge or just reassign?\n  cache[name] = childInfo;\n};\n\nexport const storeChildInfoFrom = (cache, name, child) => {\n  storeChildInfo(cache, name, getTargetInfo(child));\n};\n\nexport const getChildInfo = (cache, name) => cache[name];\n\nexport const removeChildInfo = (cache, name) => delete cache[name];\n\nexport const mergeTargetInfo = (targetInfo, sourceInfo) => {\n  const { checker, children, config, names } = targetInfo;\n\n  if (checker === sourceInfo.checker) {\n    targetInfo.children = mergeChildrenCache(children, sourceInfo.children);\n    targetInfo.config = checker.mergeConfigs(config, sourceInfo.config, names);\n  } else {\n    console.error('TypeChecked objects can be merged only if using exactly same instance of type checker.');\n  }\n\n  return targetInfo;\n};\n\nexport const assignTargetInfo = (targetInfo, ...sourceInfo) => {\n  const { length } = sourceInfo;\n\n  for (let index = 0; index < length; index++) {\n    const item = sourceInfo[index];\n\n    if (item) {\n      if (targetInfo) {\n        targetInfo = mergeTargetInfo(targetInfo, item);\n      } else {\n        targetInfo = item;\n      }\n    }\n  }\n\n  return targetInfo;\n};\n\nexport const assignTargetInfoFrom = (target, ...sources) => {\n  const { length } = sources;\n  let targetInfo = getTargetInfo(target);\n\n  for (let index = 0; index < length; index++) {\n    const sourceInfo = sources[index];\n\n    if (sourceInfo) {\n      if (targetInfo) {\n        targetInfo = mergeTargetInfo(targetInfo, sourceInfo);\n      } else {\n        targetInfo = sourceInfo;\n      }\n    }\n  }\n\n  setTargetInfo(target, targetInfo);\n  return target;\n};\n","export const config = {\n  wrapFunctionReturnValues: true,\n  wrapFunctionArguments: false,\n  wrapSetPropertyValues: true,\n};\n\nexport const setProxyConfig = (newConfig) => Object.assign(config, newConfig);\n\nexport const getProxyConfig = () => ({ ...config });\n","import { getTargetInfo } from './target';\n\nconst validTypes = {\n    object: true,\n    function: true,\n};\n\nexport const isValidTarget = (target) => target && validTypes[typeof target];\nexport const isTypeChecked = (target) => !!getTargetInfo(target);","import { getDefaultTypeChecker } from '../checkers';\nimport { getErrorReporter } from '../reporters';\nimport { isEnabled } from '../enabled';\nimport {\n  INFO_KEY,\n  createTargetInfo,\n  getTargetInfo,\n  setTargetInfo,\n  createChildrenCache,\n  getChildInfo,\n  storeChildInfoFrom,\n  removeChildInfo,\n} from '../target';\nimport { config as proxyConfig } from './config';\nimport { isValidTarget, isTypeChecked } from '../utils';\nimport { RETURN_VALUE } from '../checkers/utils';\n\nconst getProperty = (target, property) => {\n  let value = target[property];\n\n  if (property === INFO_KEY) {\n    return value;\n  }\n\n  const info = getTargetInfo(target);\n  const { deep, names, config, checker } = info;\n\n  checker.getProperty\n    && checker.getProperty(target, property, value, config, names);\n\n  if (!isValidTarget(value) || isTypeChecked(value)) {\n    return value;\n  }\n\n  if (deep || value instanceof Function) {\n    const { children } = info;\n    const childInfo = getChildInfo(children, name);\n\n    if (childInfo) {\n      value = create(value, { info: childInfo }, checker);\n    } else {\n      value = create(value, { deep, names: [...names, property] }, checker);\n      storeChildInfoFrom(children, name, value);\n    }\n  }\n\n  return value;\n};\n\nconst setProperty = (target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, names, config, checker } = info;\n\n  if (property !== INFO_KEY) {\n    checker.setProperty\n      && checker.setProperty(target, property, value, config, names);\n\n    if (proxyConfig.wrapSetPropertyValues) {\n      const { children } = info;\n\n      if (!isTypeChecked(value)) {\n        const childInfo = getChildInfo(children, name);\n\n        if (childInfo) {\n          value = create(value, { info: childInfo }, checker);\n        } else {\n          value = create(value, { deep, names: [...names, property] }, checker);\n        }\n      }\n\n      storeChildInfoFrom(children, name, value);\n    }\n  }\n\n  target[property] = value;\n};\n\nconst callFunction = (target, thisArg, argumentsList) => {\n  const info = getTargetInfo(target);\n  const { deep, names, config, checker } = info;\n\n  checker.arguments\n    && checker.arguments(target, thisArg, argumentsList, config, names);\n\n  if (proxyConfig.wrapFunctionArguments) {\n    const { length } = argumentsList;\n    for (let index = 0; index < length; index++) {\n      argumentsList[index] = create(argumentsList[index], { deep, names: [...names, index] }, checker);\n    }\n  }\n\n  let result = target.apply(thisArg, argumentsList);\n\n  checker.returnValue\n    && checker.returnValue(target, thisArg, result, config, names);\n\n  if (proxyConfig.wrapFunctionReturnValues) {\n    const { children } = info;\n\n    if (!isTypeChecked(result)) {\n      const childInfo = getChildInfo(children, RETURN_VALUE);\n\n      if (childInfo) {\n        result = create(result, { info: childInfo }, checker);\n      } else {\n        result = create(result, { deep, names: [...names] }, checker)\n      }\n    }\n\n    storeChildInfoFrom(children, RETURN_VALUE, result);\n  }\n  return result;\n};\n\nconst objectProxy = (target) => new Proxy(\n  target,\n  {\n    get: getProperty,\n    set: setProperty,\n  },\n);\n\nconst functionProxy = (target) => new Proxy(\n  target,\n  {\n    apply: callFunction,\n    construct: callFunction,\n  },\n);\n\nexport const create = (\n  target,\n  {\n    deep = true,\n    names = [],\n    config = null,\n    children = null,\n    info = null, // exclusive option, if set other options being ignored\n  } = {},\n  checker = getDefaultTypeChecker(),\n) => {\n  if (!isValidTarget(target) || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  setTargetInfo(\n    target,\n    info || createTargetInfo(\n      checker,\n      checker.init(target, getErrorReporter(), config),\n      deep,\n      names,\n      createChildrenCache(children),\n    ),\n  );\n\n  if (target instanceof Function) {\n    return functionProxy(target);\n  }\n\n  return objectProxy(target);\n};\n\nexport const createDeep = () => {\n  // FIXME add new factory function createDeep, it will have deep == true by default and init type checkers for all internal objects \n  // and functions by reassigning original values with type checked proxies\n  // when creating checkers for children objects should check cached info\n};"],"names":["GET_PROPERTY","SET_PROPERTY","ARGUMENTS","RETURN_VALUE","MERGE","buildPath","sequence","reduce","str","name","String","parseInt","test","checkType","action","types","type","errorReporter","storedType","PrimitiveTypeChecker","collectTypesOnInit","init","target","cachedTypes","Object","keys","forEach","key","getTypeString","value","undefined","Array","mergeConfigs","source","names","sourceTypes","sourceType","targetType","getProperty","setProperty","newValue","arguments","thisArg","args","length","valid","index","agrValid","returnValue","defaultTypeChecker","getDefaultTypeChecker","setDefaultTypeChecker","typeChecker","constructErrorString","required","actual","ConsoleErrorReporter","requiredTypeString","actualTypeString","console","error","ConsoleWarnReporter","warn","ThrowErrorReporter","Error","getErrorReporter","setErrorReporter","reporter","enabled","isEnabled","setEnabled","INFO_KEY","Symbol","createTargetInfo","checker","config","deep","children","createChildrenCache","getTargetInfo","setTargetInfo","info","getTargetTypeChecker","getTargetTypeCheckerConfig","mergeChildrenCache","targetCache","sourceCache","hasOwnProperty","mergeTargetInfo","storeChildInfo","cache","childInfo","storeChildInfoFrom","child","getChildInfo","targetInfo","sourceInfo","assignTargetInfo","item","assignTargetInfoFrom","sources","wrapFunctionReturnValues","wrapFunctionArguments","wrapSetPropertyValues","setProxyConfig","newConfig","assign","getProxyConfig","validTypes","object","function","isValidTarget","isTypeChecked","property","Function","create","proxyConfig","callFunction","argumentsList","result","apply","objectProxy","Proxy","get","set","functionProxy","construct","createDeep"],"mappings":";;;;;;EACO,MAAMA,eAAe,aAArB;AACP,EAAO,MAAMC,eAAe,aAArB;AACP,EAAO,MAAMC,YAAY,WAAlB;AACP,EAAO,MAAMC,eAAe,aAArB;AACP,EAAO,MAAMC,QAAQ,OAAd;;AAEP,EAAO,MAAMC,YAAYC,YAAYA,SAClCC,MADkC,CAC3B,CAACC,GAAD,EAAMC,IAAN,KAAe;EACrB,MAAIC,OAAOC,SAASF,IAAT,EAAe,EAAf,CAAP,MAA+BA,IAAnC,EAAyC;EACvCD,UAAO,GAAEA,GAAI,IAAGC,IAAK,GAArB;EACD,GAFD,MAEO,IAAI,iBAAiBG,IAAjB,CAAsBH,IAAtB,CAAJ,EAAiC;EACtCD,UAAMA,MAAO,GAAEA,GAAI,IAAGC,IAAK,EAArB,GAAyBA,IAA/B;EACD,GAFM,MAEA;EACLD,UAAO,GAAEA,GAAI,KAAIC,IAAK,IAAtB;EACD;;EAED,SAAOD,GAAP;EACD,CAXkC,EAWhC,EAXgC,CAA9B;;ECEP,MAAMK,YAAY,CAACC,MAAD,EAASC,KAAT,EAAgBN,IAAhB,EAAsBO,IAAtB,EAA4BC,aAA5B,EAA2CX,QAA3C,KAAwD;EACxE,MAAI,CAACU,IAAL,EAAW;EACT,WAAO,IAAP;EACD;;EAED,QAAME,aAAaH,MAAMN,IAAN,CAAnB;;EAEA,MAAIS,UAAJ,EAAgB;EACd;EACA,QAAIA,eAAeF,IAAnB,EAAyB;EACvBC,oBAAcH,MAAd,EAAsBT,UAAU,CAAC,GAAGC,QAAJ,EAAcG,IAAd,CAAV,CAAtB,EAAsDM,MAAMN,IAAN,CAAtD,EAAmEO,IAAnE;;EAEA,aAAO,KAAP;EACD;EACF,GAPD,MAOO;EACLD,UAAMN,IAAN,IAAcO,IAAd;EACD;;EAED,SAAO,IAAP;EACD,CAnBD;;EAqBA,MAAMG,uBAAuB;EAC3BC,sBAAoB,IADO;;EAG3BC,OAAKC,MAAL,EAAaL,aAAb,EAA4BM,cAAc,IAA1C,EAAgD;EAC9C,QAAIR,QAAQ,EAAZ;;EAEA,QAAIQ,WAAJ,EAAiB;EACfR,cAAQQ,WAAR;EACD,KAFD,MAEO,IAAI,KAAKH,kBAAT,EAA6B;EAClCI,aAAOC,IAAP,CAAYH,MAAZ,EACGI,OADH,CACYC,GAAD,IAAS;EAChBZ,cAAMY,GAAN,IAAa,KAAKC,aAAL,CAAmBN,OAAOK,GAAP,CAAnB,CAAb;EACD,OAHH;EAID;;EAED,WAAO;EACLZ,WADK;EAELE;EAFK,KAAP;EAID,GAnB0B;;EAqB3BW,gBAAcC,KAAd,EAAqB;EACnB,QAAIA,UAAUC,SAAd,EAAyB;EACvB,aAAO,EAAP;EACD,KAFD,MAEO,IAAID,iBAAiBE,KAArB,EAA4B;EACjC,aAAO,OAAP;EACD;;EAED,WAAO,OAAOF,KAAd;EACD,GA7B0B;;EA+B3BG,eAAa,EAAEjB,KAAF,EAASE,aAAT,EAAb,EAAuCgB,MAAvC,EAA+CC,QAAQ,EAAvD,EAA2D;EACzD,UAAMC,cAAcF,OAAOlB,KAA3B;;EAEA,SAAK,MAAMN,IAAX,IAAmB0B,WAAnB,EAAgC;EAC9B,YAAMC,aAAaD,YAAY1B,IAAZ,CAAnB;EACA,YAAM4B,aAAatB,MAAMN,IAAN,CAAnB;;EAEA,UAAI2B,cAAcC,UAAd,IAA4BA,eAAeD,UAA/C,EAA2D;EACzDnB,sBAAcb,KAAd,EAAqBC,UAAU,CAAC,GAAG6B,KAAJ,EAAWzB,IAAX,CAAV,CAArB,EAAkD4B,UAAlD,EAA8DD,UAA9D;EACD,OAFD,MAEO;EACLrB,cAAMN,IAAN,IAAc2B,UAAd;EACD;EACF;EACF,GA5C0B;;EA8C3BE,cAAYhB,MAAZ,EAAoBb,IAApB,EAA0BoB,KAA1B,EAAiC,EAAEd,KAAF,EAASE,aAAT,EAAjC,EAA2DX,QAA3D,EAAqE;EACnE,WAAOO,UACLb,YADK,EAELe,KAFK,EAGLN,IAHK,EAIL,KAAKmB,aAAL,CAAmBC,KAAnB,CAJK,EAKLZ,aALK,EAMLX,QANK,CAAP;EAQD,GAvD0B;;EAyD3BiC,cAAYjB,MAAZ,EAAoBb,IAApB,EAA0B+B,QAA1B,EAAoC,EAAEzB,KAAF,EAASE,aAAT,EAApC,EAA8DX,QAA9D,EAAwE;EACtE,WAAOO,UACLZ,YADK,EAELc,KAFK,EAGLN,IAHK,EAIL,KAAKmB,aAAL,CAAmBY,QAAnB,CAJK,EAKLvB,aALK,EAMLX,QANK,CAAP;EAQD,GAlE0B;;EAoE3BmC,YAAUnB,MAAV,EAAkBoB,OAAlB,EAA2BC,IAA3B,EAAiC,EAAE5B,KAAF,EAASE,aAAT,EAAjC,EAA2DX,QAA3D,EAAqE;EACnE,UAAM,EAAEsC,MAAF,KAAaD,IAAnB;EACA,QAAIE,QAAQ,IAAZ;;EAEA,SAAK,IAAIC,QAAQ,CAAjB,EAAoBA,QAAQF,MAA5B,EAAoCE,OAApC,EAA6C;EAC3C,YAAMC,WAAWlC,UACfX,SADe,EAEfa,KAFe,EAGfL,OAAOoC,KAAP,CAHe,EAIf,KAAKlB,aAAL,CAAmBe,KAAKG,KAAL,CAAnB,CAJe,EAKf7B,aALe,EAMfX,QANe,CAAjB;;EASAuC,cAAQE,YAAYF,KAApB;EACD;;EAED,WAAOA,KAAP;EACD,GAtF0B;;EAwF3BG,cAAY1B,MAAZ,EAAoBoB,OAApB,EAA6Bb,KAA7B,EAAoC,EAAEd,KAAF,EAASE,aAAT,EAApC,EAA8DX,QAA9D,EAAwE;EACtE,WAAOO,UACLV,YADK,EAELY,KAFK,EAGL,EAHK,EAIL,KAAKa,aAAL,CAAmBC,KAAnB,CAJK,EAKLZ,aALK,EAMLX,QANK,CAAP;EAQD;EAjG0B,CAA7B;;EC5BA,IAAI2C,qBAAqB9B,oBAAzB;;AAEA,QAAa+B,wBAAwB,MAAMD,kBAApC;AACP,QAAaE,wBAAyBC,WAAD,IAAiBH,qBAAqBG,WAApE;;ECLA,MAAMC,uBAAuB,CAACvC,MAAD,EAASL,IAAT,EAAe6C,QAAf,EAAyBC,MAAzB,KACjC,GAAEzC,MAAO,aAAYL,IAAK,iBAAgB6C,QAAS,eAAcC,MAAO,GADpE;;QCEMC,uBAAuB,CAAC1C,MAAD,EAASL,IAAT,EAAegD,kBAAf,EAAmCC,gBAAnC,KAClCC,QAAQC,KAAR,CAAcP,qBAAqBvC,MAArB,EAA6BL,IAA7B,EAAmCgD,kBAAnC,EAAuDC,gBAAvD,CAAd,CADK;;AAGP,QAAaG,sBAAsB,CAAC/C,MAAD,EAASL,IAAT,EAAegD,kBAAf,EAAmCC,gBAAnC,KACjCC,QAAQG,IAAR,CAAaT,qBAAqBvC,MAArB,EAA6BL,IAA7B,EAAmCgD,kBAAnC,EAAuDC,gBAAvD,CAAb,CADK;;QCHMK,qBAAqB,CAACjD,MAAD,EAASL,IAAT,EAAegD,kBAAf,EAAmCC,gBAAnC,KAAwD;EACxF,QAAM,IAAIM,KAAJ,CAAUX,qBAAqBvC,MAArB,EAA6BL,IAA7B,EAAmCgD,kBAAnC,EAAuDC,gBAAvD,CAAV,CAAN;EACD,CAFM;;ECAP,IAAIzC,gBAAgBuC,oBAApB;;AAEA,QAAaS,mBAAmB,MAAMhD,aAA/B;;AAEP,QAAaiD,mBAAoBC,QAAD,IAAclD,gBAAgBkD,QAAvD;;ECNP,IAAIC,UAAU,IAAd;;AAEA,QAAaC,YAAY,MAAMD,OAAxB;AACP,QAAaE,aAAa,CAACzC,QAAQ,IAAT,KAAkBuC,UAAU,CAAC,CAACvC,KAAjD;;ECHA,MAAM0C,WAAWC,OAAO,qBAAP,CAAjB;;AAEP,EAAO,MAAMC,mBAAmB,CAACC,OAAD,EAAUC,MAAV,EAAkBC,OAAO,IAAzB,EAA+B1C,QAAQ,EAAvC,EAA2C2C,WAAWC,qBAAtD,MAAiF;EAC/GJ,SAD+G;EAE/GC,QAF+G;EAG/GC,MAH+G;EAI/G1C,OAJ+G;EAK/G2C;EAL+G,CAAjF,CAAzB;AAOP,EAAO,MAAME,gBAAiBzD,MAAD,IAAYA,OAAOiD,QAAP,CAAlC;AACP,EAAO,MAAMS,gBAAgB,CAAC1D,MAAD,EAAS2D,IAAT,KAAkB3D,OAAOiD,QAAP,IAAmBU,IAA3D;AACP,QAAaC,uBAAwB5D,MAAD,IAAYyD,cAAczD,MAAd,EAAsBoD,OAA/D;AACP,QAAaS,6BAA8B7D,MAAD,IAAYyD,cAAczD,MAAd,EAAsBqD,MAArE;;AAEP,EAAO,MAAMG,sBAAsB,CAACD,WAAW,EAAZ,uBAAyBA,QAAzB,CAA5B;;AAEP,EAAO,MAAMO,qBAAqB,CAACC,WAAD,EAAcC,WAAd,KAA8B;EAC9D,OAAK,MAAM7E,IAAX,IAAmB6E,WAAnB,EAAgC;EAC9B,QAAID,YAAYE,cAAZ,CAA2B9E,IAA3B,CAAJ,EAAsC;EACpC4E,kBAAY5E,IAAZ,IAAoB+E,gBAAgBH,YAAY5E,IAAZ,CAAhB,EAAmC6E,YAAY7E,IAAZ,CAAnC,CAApB;EACD,KAFD,MAEO;EACL4E,kBAAY5E,IAAZ,IAAoB6E,YAAY7E,IAAZ,CAApB;EACD;EACF;;EAED,SAAO4E,WAAP;EACD,CAVM;;AAYP,EAAO,MAAMI,iBAAiB,CAACC,KAAD,EAAQjF,IAAR,EAAckF,SAAd,KAA4B;EACxD;EACAD,QAAMjF,IAAN,IAAckF,SAAd;EACD,CAHM;;AAKP,EAAO,MAAMC,qBAAqB,CAACF,KAAD,EAAQjF,IAAR,EAAcoF,KAAd,KAAwB;EACxDJ,iBAAeC,KAAf,EAAsBjF,IAAtB,EAA4BsE,cAAcc,KAAd,CAA5B;EACD,CAFM;;AAIP,EAAO,MAAMC,eAAe,CAACJ,KAAD,EAAQjF,IAAR,KAAiBiF,MAAMjF,IAAN,CAAtC;;AAIP,QAAa+E,kBAAkB,CAACO,UAAD,EAAaC,UAAb,KAA4B;EACzD,QAAM,EAAEtB,OAAF,EAAWG,QAAX,EAAqBF,MAArB,EAA6BzC,KAA7B,KAAuC6D,UAA7C;;EAEA,MAAIrB,YAAYsB,WAAWtB,OAA3B,EAAoC;EAClCqB,eAAWlB,QAAX,GAAsBO,mBAAmBP,QAAnB,EAA6BmB,WAAWnB,QAAxC,CAAtB;EACAkB,eAAWpB,MAAX,GAAoBD,QAAQ1C,YAAR,CAAqB2C,MAArB,EAA6BqB,WAAWrB,MAAxC,EAAgDzC,KAAhD,CAApB;EACD,GAHD,MAGO;EACLyB,YAAQC,KAAR,CAAc,wFAAd;EACD;;EAED,SAAOmC,UAAP;EACD,CAXM;;AAaP,QAAaE,mBAAmB,CAACF,UAAD,EAAa,GAAGC,UAAhB,KAA+B;EAC7D,QAAM,EAAEpD,MAAF,KAAaoD,UAAnB;;EAEA,OAAK,IAAIlD,QAAQ,CAAjB,EAAoBA,QAAQF,MAA5B,EAAoCE,OAApC,EAA6C;EAC3C,UAAMoD,OAAOF,WAAWlD,KAAX,CAAb;;EAEA,QAAIoD,IAAJ,EAAU;EACR,UAAIH,UAAJ,EAAgB;EACdA,qBAAaP,gBAAgBO,UAAhB,EAA4BG,IAA5B,CAAb;EACD,OAFD,MAEO;EACLH,qBAAaG,IAAb;EACD;EACF;EACF;;EAED,SAAOH,UAAP;EACD,CAhBM;;AAkBP,QAAaI,uBAAuB,CAAC7E,MAAD,EAAS,GAAG8E,OAAZ,KAAwB;EAC1D,QAAM,EAAExD,MAAF,KAAawD,OAAnB;EACA,MAAIL,aAAahB,cAAczD,MAAd,CAAjB;;EAEA,OAAK,IAAIwB,QAAQ,CAAjB,EAAoBA,QAAQF,MAA5B,EAAoCE,OAApC,EAA6C;EAC3C,UAAMkD,aAAaI,QAAQtD,KAAR,CAAnB;;EAEA,QAAIkD,UAAJ,EAAgB;EACd,UAAID,UAAJ,EAAgB;EACdA,qBAAaP,gBAAgBO,UAAhB,EAA4BC,UAA5B,CAAb;EACD,OAFD,MAEO;EACLD,qBAAaC,UAAb;EACD;EACF;EACF;;EAEDhB,gBAAc1D,MAAd,EAAsByE,UAAtB;EACA,SAAOzE,MAAP;EACD,CAlBM;;ECxEA,MAAMqD,SAAS;EACpB0B,4BAA0B,IADN;EAEpBC,yBAAuB,KAFH;EAGpBC,yBAAuB;EAHH,CAAf;;AAMP,QAAaC,iBAAkBC,SAAD,IAAejF,OAAOkF,MAAP,CAAc/B,MAAd,EAAsB8B,SAAtB,CAAtC;;AAEP,QAAaE,iBAAiB,wBAAYhC,MAAZ,CAAvB;;ECNP,MAAMiC,aAAa;EACfC,YAAQ,IADO;EAEfC,cAAU;EAFK,CAAnB;;AAKA,QAAaC,gBAAiBzF,MAAD,IAAYA,UAAUsF,WAAW,OAAOtF,MAAlB,CAA5C;AACP,QAAa0F,gBAAiB1F,MAAD,IAAY,CAAC,CAACyD,cAAczD,MAAd,CAApC;;ECSP,MAAMgB,cAAc,CAAChB,MAAD,EAAS2F,QAAT,KAAsB;EACxC,MAAIpF,QAAQP,OAAO2F,QAAP,CAAZ;;EAEA,MAAIA,aAAa1C,QAAjB,EAA2B;EACzB,WAAO1C,KAAP;EACD;;EAED,QAAMoD,OAAOF,cAAczD,MAAd,CAAb;EACA,QAAM,EAAEsD,IAAF,EAAQ1C,KAAR,UAAeyC,SAAf,EAAuBD,OAAvB,KAAmCO,IAAzC;;EAEAP,UAAQpC,WAAR,IACKoC,QAAQpC,WAAR,CAAoBhB,MAApB,EAA4B2F,QAA5B,EAAsCpF,KAAtC,EAA6C8C,SAA7C,EAAqDzC,KAArD,CADL;;EAGA,MAAI,CAAC6E,cAAclF,KAAd,CAAD,IAAyBmF,cAAcnF,KAAd,CAA7B,EAAmD;EACjD,WAAOA,KAAP;EACD;;EAED,MAAI+C,QAAQ/C,iBAAiBqF,QAA7B,EAAuC;EACrC,UAAM,EAAErC,QAAF,KAAeI,IAArB;EACA,UAAMU,YAAYG,aAAajB,QAAb,EAAuBpE,IAAvB,CAAlB;;EAEA,QAAIkF,SAAJ,EAAe;EACb9D,cAAQsF,OAAOtF,KAAP,EAAc,EAAEoD,MAAMU,SAAR,EAAd,EAAmCjB,OAAnC,CAAR;EACD,KAFD,MAEO;EACL7C,cAAQsF,OAAOtF,KAAP,EAAc,EAAE+C,IAAF,EAAQ1C,OAAO,CAAC,GAAGA,KAAJ,EAAW+E,QAAX,CAAf,EAAd,EAAqDvC,OAArD,CAAR;EACAkB,yBAAmBf,QAAnB,EAA6BpE,IAA7B,EAAmCoB,KAAnC;EACD;EACF;;EAED,SAAOA,KAAP;EACD,CA9BD;;EAgCA,MAAMU,cAAc,CAACjB,MAAD,EAAS2F,QAAT,EAAmBpF,KAAnB,KAA6B;EAC/C,QAAMoD,OAAOF,cAAczD,MAAd,CAAb;EACA,QAAM,EAAEsD,IAAF,EAAQ1C,KAAR,UAAeyC,SAAf,EAAuBD,OAAvB,KAAmCO,IAAzC;;EAEA,MAAIgC,aAAa1C,QAAjB,EAA2B;EACzBG,YAAQnC,WAAR,IACKmC,QAAQnC,WAAR,CAAoBjB,MAApB,EAA4B2F,QAA5B,EAAsCpF,KAAtC,EAA6C8C,SAA7C,EAAqDzC,KAArD,CADL;;EAGA,QAAIkF,OAAYb,qBAAhB,EAAuC;EACrC,YAAM,EAAE1B,QAAF,KAAeI,IAArB;;EAEA,UAAI,CAAC+B,cAAcnF,KAAd,CAAL,EAA2B;EACzB,cAAM8D,YAAYG,aAAajB,QAAb,EAAuBpE,IAAvB,CAAlB;;EAEA,YAAIkF,SAAJ,EAAe;EACb9D,kBAAQsF,OAAOtF,KAAP,EAAc,EAAEoD,MAAMU,SAAR,EAAd,EAAmCjB,OAAnC,CAAR;EACD,SAFD,MAEO;EACL7C,kBAAQsF,OAAOtF,KAAP,EAAc,EAAE+C,IAAF,EAAQ1C,OAAO,CAAC,GAAGA,KAAJ,EAAW+E,QAAX,CAAf,EAAd,EAAqDvC,OAArD,CAAR;EACD;EACF;;EAEDkB,yBAAmBf,QAAnB,EAA6BpE,IAA7B,EAAmCoB,KAAnC;EACD;EACF;;EAEDP,SAAO2F,QAAP,IAAmBpF,KAAnB;EACD,CA1BD;;EA4BA,MAAMwF,eAAe,CAAC/F,MAAD,EAASoB,OAAT,EAAkB4E,aAAlB,KAAoC;EACvD,QAAMrC,OAAOF,cAAczD,MAAd,CAAb;EACA,QAAM,EAAEsD,IAAF,EAAQ1C,KAAR,UAAeyC,SAAf,EAAuBD,OAAvB,KAAmCO,IAAzC;;EAEAP,UAAQjC,SAAR,IACKiC,QAAQjC,SAAR,CAAkBnB,MAAlB,EAA0BoB,OAA1B,EAAmC4E,aAAnC,EAAkD3C,SAAlD,EAA0DzC,KAA1D,CADL;;EAGA,MAAIkF,OAAYd,qBAAhB,EAAuC;EACrC,UAAM,EAAE1D,MAAF,KAAa0E,aAAnB;EACA,SAAK,IAAIxE,QAAQ,CAAjB,EAAoBA,QAAQF,MAA5B,EAAoCE,OAApC,EAA6C;EAC3CwE,oBAAcxE,KAAd,IAAuBqE,OAAOG,cAAcxE,KAAd,CAAP,EAA6B,EAAE8B,IAAF,EAAQ1C,OAAO,CAAC,GAAGA,KAAJ,EAAWY,KAAX,CAAf,EAA7B,EAAiE4B,OAAjE,CAAvB;EACD;EACF;;EAED,MAAI6C,SAASjG,OAAOkG,KAAP,CAAa9E,OAAb,EAAsB4E,aAAtB,CAAb;;EAEA5C,UAAQ1B,WAAR,IACK0B,QAAQ1B,WAAR,CAAoB1B,MAApB,EAA4BoB,OAA5B,EAAqC6E,MAArC,EAA6C5C,SAA7C,EAAqDzC,KAArD,CADL;;EAGA,MAAIkF,OAAYf,wBAAhB,EAA0C;EACxC,UAAM,EAAExB,QAAF,KAAeI,IAArB;;EAEA,QAAI,CAAC+B,cAAcO,MAAd,CAAL,EAA4B;EAC1B,YAAM5B,YAAYG,aAAajB,QAAb,EAAuB1E,YAAvB,CAAlB;;EAEA,UAAIwF,SAAJ,EAAe;EACb4B,iBAASJ,OAAOI,MAAP,EAAe,EAAEtC,MAAMU,SAAR,EAAf,EAAoCjB,OAApC,CAAT;EACD,OAFD,MAEO;EACL6C,iBAASJ,OAAOI,MAAP,EAAe,EAAE3C,IAAF,EAAQ1C,OAAO,CAAC,GAAGA,KAAJ,CAAf,EAAf,EAA4CwC,OAA5C,CAAT;EACD;EACF;;EAEDkB,uBAAmBf,QAAnB,EAA6B1E,YAA7B,EAA2CoH,MAA3C;EACD;EACD,SAAOA,MAAP;EACD,CAnCD;;EAqCA,MAAME,cAAenG,MAAD,IAAY,IAAIoG,KAAJ,CAC9BpG,MAD8B,EAE9B;EACEqG,OAAKrF,WADP;EAEEsF,OAAKrF;EAFP,CAF8B,CAAhC;;EAQA,MAAMsF,gBAAiBvG,MAAD,IAAY,IAAIoG,KAAJ,CAChCpG,MADgC,EAEhC;EACEkG,SAAOH,YADT;EAEES,aAAWT;EAFb,CAFgC,CAAlC;;AAQA,QAAaF,SAAS,CACpB7F,MADoB,EAEpB;EACEsD,SAAO,IADT;EAEE1C,UAAQ,EAFV;EAGEyC,sBAAS,IAHX;EAIEE,aAAW,IAJb;EAKEI,SAAO,IALT;EAAA,IAMI,EARgB,EASpBP,UAAUxB,uBATU,KAUjB;EACH,MAAI,CAAC6D,cAAczF,MAAd,CAAD,IAA0B,CAAC+C,WAA3B,IAA0C2C,cAAc1F,MAAd,CAA9C,EAAqE;EACnE,WAAOA,MAAP;EACD;;EAED0D,gBACE1D,MADF,EAEE2D,QAAQR,iBACNC,OADM,EAENA,QAAQrD,IAAR,CAAaC,MAAb,EAAqB2C,kBAArB,EAAyCU,SAAzC,CAFM,EAGNC,IAHM,EAIN1C,KAJM,EAKN4C,oBAAoBD,QAApB,CALM,CAFV;;EAWA,MAAIvD,kBAAkB4F,QAAtB,EAAgC;EAC9B,WAAOW,cAAcvG,MAAd,CAAP;EACD;;EAED,SAAOmG,YAAYnG,MAAZ,CAAP;EACD,CA/BM;;AAiCP,QAAayG,aAAa,MAAM;EAC9B;EACA;EACA;EACD,CAJM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}