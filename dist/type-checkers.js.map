{"version":3,"file":"type-checkers.js","sources":["../source/checkers/utils.js","../source/target/info.js","../source/checkers/primitive.js","../source/checkers/index.js","../source/reporters/utils.js","../source/reporters/console.js","../source/reporters/error.js","../source/reporters/index.js","../source/enabled.js","../source/target/proxy.js","../source/proxy/config.js","../source/utils.js","../source/proxy/getProperty.js","../source/proxy/setProperty.js","../source/proxy/utils.js","../source/proxy/callFunction.js","../source/proxy/create.js","../source/proxy/createDeep.js","../source/target/objectMerge.js","../source/target/replaceProperty.js"],"sourcesContent":["\nexport const GET_PROPERTY = '(GetProperty)';\nexport const SET_PROPERTY = '(SetProperty)';\nexport const INDEX = '(Index)';\nexport const ARGUMENTS = '(Arguments)';\nexport const RETURN_VALUE = '(ReturnValue)';\nexport const MERGE = '(Merge)';\n\nexport function AsIs(value) {\n  if (this instanceof AsIs) {\n    this.value = value;\n  } else {\n    return new AsIs(value);\n  }\n}\n\nfunction asIs() {\n  return this.value;\n}\n\nAsIs.prototype.toString = asIs;\nAsIs.prototype.valueOf = asIs;\nAsIs.prototype[Symbol.toPrimitive] = asIs;\n\nexport const buildPath = (sequence) => sequence\n  .reduce((str, name) => {\n    if (name instanceof AsIs) {\n      str = `${str}${name}`;\n    } else if (String(parseInt(name, 10)) === name) {\n      str = `${str}[${name}]`;\n    } else if (/^[a-z][\\w$]*$/i.test(name)) {\n      str = str ? `${str}.${name}` : name;\n    } else {\n      str = `${str}[\"${name}\"]`;\n    }\n\n    return str;\n  }, '');\n","export const INFO_KEY = Symbol('type-checkers::info');\n\nexport const createTargetInfo = (\n  checker,\n  config,\n  deep = true,\n  names = [],\n  children = createChildrenCache(),\n) => ({\n  checker,\n  config,\n  deep,\n  names,\n  children,\n});\n\nexport const getTargetInfo = (target) => (target ? target[INFO_KEY] : undefined);\n\nexport const setTargetInfo = (target, info) => {\n  if (target && info) {\n    target[INFO_KEY] = info;\n  }\n};\n\nexport const hasTargetInfo = (target) => !!getTargetInfo(target);\n\nexport const getTargetTypeChecker = (target) =>\n  (target && target[INFO_KEY] ? target[INFO_KEY].checker : undefined);\n\nexport const getTargetTypeCheckerConfig = (target) => {\n  if (!target || !target[INFO_KEY]) {\n    return undefined;\n  }\n\n  return target[INFO_KEY].config;\n};\n\nexport const createChildrenCache = (children = {}) => ({ ...children });\n\nexport const mergeChildrenCache = (targetCache, sourceCache) => {\n  for (const name in sourceCache) {\n    if (targetCache.hasOwnProperty(name)) {\n      targetCache[name] = mergeTargetInfo(targetCache[name], sourceCache[name]);\n    } else {\n      targetCache[name] = sourceCache[name];\n    }\n  }\n\n  return targetCache;\n};\n\nexport const storeChildInfo = (cache, name, childInfo) => {\n  delete cache[name];\n\n  if (childInfo) {\n    cache[name] = childInfo;\n  }\n};\n\nexport const storeChildInfoFrom = (cache, name, child) => {\n  storeChildInfo(cache, name, getTargetInfo(child));\n};\n\nexport const getChildInfo = (cache, name) => cache[name];\n\nexport const hasChildInfo = (cache, name) => !!cache[name];\n\nexport const removeChildInfo = (cache, name) => delete cache[name];\n\nexport const mergeTargetInfo = (targetInfo, sourceInfo) => {\n  const { deep, checker, children, config, names } = targetInfo;\n\n  if (checker === sourceInfo.checker) {\n    targetInfo.deep = deep || sourceInfo.deep;\n    targetInfo.children = mergeChildrenCache(children, sourceInfo.children);\n    targetInfo.config = checker.mergeConfigs(config, sourceInfo.config, names);\n  } else {\n    console.error('TypeChecked objects can be merged only if using exactly same instance of type checker.');\n  }\n\n  return targetInfo;\n};\n","import {\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  INDEX,\n  MERGE,\n  buildPath,\n  AsIs,\n} from './utils';\n\nimport { getTargetTypeCheckerConfig } from '../target/info';\n\nconst checkPrimitiveType = (action, types, name, type, errorReporter, sequence) => {\n  if (!type) {\n    return true;\n  }\n\n  const storedType = types[name];\n\n  if (storedType) {\n    if (storedType !== type) {\n      errorReporter(action, buildPath([...sequence, name]), storedType, type);\n\n      return false;\n    }\n  } else {\n    types[name] = type;\n  }\n\n  return true;\n};\n\nconst indexBasedClasses = [Array];\n\nexport const isIndexAccessTarget = (target) =>\n  (target && indexBasedClasses.indexOf(target.constructor) >= 0);\n\nexport const getTypeString = (value) => {\n  if (value === undefined) {\n    return '';\n  } else if (value instanceof Array) {\n    return 'array';\n  }\n\n  return typeof value;\n};\n\nexport const mergeConfigs = ({ types, errorReporter }, source, names = []) => {\n  const sourceTypes = source.types;\n\n  for (const name in sourceTypes) {\n    if (sourceTypes.hasOwnProperty(name)) {\n      const sourceType = sourceTypes[name];\n      const targetType = types[name];\n\n      if (sourceType && targetType && targetType !== sourceType) {\n        errorReporter(MERGE, buildPath([...names, name]), targetType, sourceType);\n      } else {\n        types[name] = sourceType;\n      }\n    }\n  }\n\n  return { types, errorReporter };\n};\n\nexport const replacePropertyTypeCheck = (target, name, typeCheckFn) => {\n  const { types } = getTargetTypeCheckerConfig(target);\n  delete types[name];\n\n  if (typeCheckFn) {\n    types[name] = typeCheckFn;\n  }\n};\n\nexport const replaceArgumentsTypeCheck = (target, argumentsTypeCheckFn) => {\n  const { types } = getTargetTypeCheckerConfig(target);\n  delete types[ARGUMENTS];\n\n  if (argumentsTypeCheckFn) {\n    types[ARGUMENTS] = argumentsTypeCheckFn;\n  }\n};\n\nexport const replaceReturnValueTypeCheck = (target, returnValueTypeCheckFn) => {\n  const { types } = getTargetTypeCheckerConfig(target);\n  delete types[RETURN_VALUE];\n\n  if (returnValueTypeCheckFn) {\n    types[RETURN_VALUE] = returnValueTypeCheckFn;\n  }\n};\n\nexport const registerIndexBasedClass = (constructor) => {\n  indexBasedClasses.push(constructor);\n};\n\nexport const setIndexValueType = (target, type) => {\n  const config = getTargetTypeCheckerConfig(target);\n  if (config) {\n    config.types[INDEX] = type;\n  }\n};\n\nexport const setIndexValueTypeBy = (target, value) => {\n  setIndexValueType(target, getTypeString(value));\n};\n\nexport const replaceIndexedTypeCheck = (target, typeCheckFn) => {\n  const { types } = getTargetTypeCheckerConfig(target);\n  delete types[INDEX];\n\n  if (typeCheckFn) {\n    types[INDEX] = typeCheckFn;\n  }\n};\n\nconst PrimitiveTypeChecker = {\n  collectTypesOnInit: true,\n  areArrayElementsOfSameType: true,\n\n  init(target, errorReporter, cachedTypes = null) {\n    let types = {};\n\n    if (cachedTypes) {\n      types = cachedTypes;\n    } else if (this.collectTypesOnInit) {\n      if (this.areArrayElementsOfSameType && target instanceof Array) {\n        const indexType = getTypeString(target\n        .find((item) => (typeof item !== 'undefined')));\n\n        if (indexType) {\n          types[INDEX] = indexType;\n        }\n      } else {\n        Object.keys(target)\n          .forEach((key) => {\n            types[key] = getTypeString(target[key]);\n          });\n      }\n    }\n\n    return {\n      types,\n      errorReporter,\n    };\n  },\n\n  getProperty(target, name, value, config, sequence) {\n    if (this.areArrayElementsOfSameType && isIndexAccessTarget(target)) {\n      return this.getIndexProperty(target, INDEX, value, config, sequence);\n    }\n\n    return this.getNamedProperty(target, name, value, config, sequence);\n  },\n\n  getIndexProperty(target, name, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[name];\n\n    if (typeFn instanceof Function) {\n      return typeFn(GET_PROPERTY, target, name, value, config, sequence);\n    }\n\n    const type = getTypeString(value);\n\n    return checkPrimitiveType(GET_PROPERTY, types, AsIs(INDEX), type, errorReporter, sequence);\n  },\n\n  getNamedProperty(target, name, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[name];\n\n    if (typeFn instanceof Function) {\n      return typeFn(GET_PROPERTY, target, name, value, config, sequence);\n    }\n\n    const type = getTypeString(value);\n\n    return checkPrimitiveType(GET_PROPERTY, types, name, type, errorReporter, sequence);\n  },\n\n  setProperty(target, name, newValue, config, sequence) {\n    if (this.areArrayElementsOfSameType && isIndexAccessTarget(target)) {\n      return this.setIndexProperty(target, INDEX, newValue, config, sequence);\n    }\n\n    return this.setNamedProperty(target, name, newValue, config, sequence);\n  },\n\n  setIndexProperty(target, name, newValue, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[name];\n\n    if (typeFn instanceof Function) {\n      return typeFn(SET_PROPERTY, target, name, newValue, config, sequence);\n    }\n\n    const type = getTypeString(newValue);\n\n    return checkPrimitiveType(SET_PROPERTY, types, AsIs(INDEX), type, errorReporter, sequence);\n  },\n\n  setNamedProperty(target, name, newValue, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[name];\n\n    if (typeFn instanceof Function) {\n      return typeFn(SET_PROPERTY, target, name, newValue, config, sequence);\n    }\n\n    const type = getTypeString(newValue);\n\n    return checkPrimitiveType(SET_PROPERTY, types, name, type, errorReporter, sequence);\n  },\n\n  arguments(target, thisArg, args, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[ARGUMENTS];\n\n    if (typeFn instanceof Function) {\n      return typeFn(ARGUMENTS, target, args, config, sequence);\n    }\n\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = getTypeString(args[index]);\n      const agrValid = checkPrimitiveType(ARGUMENTS, types, String(index), type, errorReporter, sequence);\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  },\n\n  returnValue(target, thisArg, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[RETURN_VALUE];\n\n    if (typeFn instanceof Function) {\n      return typeFn(RETURN_VALUE, target, value, config, sequence);\n    }\n\n    const type = getTypeString(value);\n\n    return checkPrimitiveType(RETURN_VALUE, types, AsIs(RETURN_VALUE), type, errorReporter, sequence);\n  },\n\n  isIndexAccessTarget,\n  getTypeString,\n  mergeConfigs,\n  replacePropertyTypeCheck,\n  replaceArgumentsTypeCheck,\n  replaceReturnValueTypeCheck,\n  registerIndexBasedClass,\n  setIndexValueType,\n  setIndexValueTypeBy,\n  replaceIndexedTypeCheck,\n};\n\nexport default PrimitiveTypeChecker;\n","import PrimitiveTypeChecker from './primitive';\n\nlet defaultTypeChecker = PrimitiveTypeChecker;\n\nconst getDefaultTypeChecker = () => defaultTypeChecker;\nconst setDefaultTypeChecker = (typeChecker) => {\n  defaultTypeChecker = typeChecker;\n};\n\nexport {\n  PrimitiveTypeChecker,\n  getDefaultTypeChecker,\n  setDefaultTypeChecker,\n};\n","export const constructErrorString = (action, name, required, actual) =>\n  `${action}Error on \"${name}\" instead of \"${required}\" received \"${actual}\"`;\n","import { constructErrorString } from './utils';\n\nexport const ConsoleErrorReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\nexport const ConsoleWarnReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.warn(constructErrorString(action, name, requiredTypeString, actualTypeString));\n","import { constructErrorString } from './utils';\n\nexport const ThrowErrorReporter = (action, name, requiredTypeString, actualTypeString) => {\n  throw new Error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n};\n","import { ConsoleErrorReporter } from './console';\n\nlet errorReporter = ConsoleErrorReporter;\n\nexport const getErrorReporter = () => errorReporter;\n\nexport const setErrorReporter = (reporter) => errorReporter = reporter;\n","let enabled = true;\n\nexport const isEnabled = () => enabled;\nexport const setEnabled = (value = true) => {\n  enabled = !!value;\n};\n","export const TARGET_KEY = Symbol('type-checkers::target');\n\nexport const getOriginalTarget = (target) => {\n  return target[TARGET_KEY] || target;\n};\n","export const PROXY_WRAP_FUNCTION_RETURN_VALUES = 'wrapFunctionReturnValues';\nexport const PROXY_WRAP_FUNCTION_ARGUMENTS = 'wrapFunctionArguments';\nexport const PROXY_WRAP_SET_PROPERTY_VALUES = 'wrapSetPropertyValues';\nexport const PROXY_IGNORE_PROTOTYPE_METHODS = 'ignorePrototypeMethods';\n\nexport const getDefaultProxyConfig = () => ({\n  [PROXY_WRAP_FUNCTION_RETURN_VALUES]: true,\n  [PROXY_WRAP_FUNCTION_ARGUMENTS]: false,\n  [PROXY_WRAP_SET_PROPERTY_VALUES]: true,\n  [PROXY_IGNORE_PROTOTYPE_METHODS]: false,\n});\n\nconst config = getDefaultProxyConfig();\n\nexport const setProxyConfig = (newConfig) => Object.assign(config, newConfig);\n\nexport const getProxyConfig = () => ({ ...config });\n\nexport const getProxyConfigValue = (key, info = null) =>\n  (info && info.hasOwnProperty(key) ? info[key] : config[key]);\n","import { TARGET_KEY } from './target/proxy';\n\nconst validTypes = {\n  object: true,\n  function: true,\n};\n\nexport const isValidTarget = (target) => Boolean(target && validTypes[typeof target]);\nexport const isTypeChecked = (target) => Boolean(target && target[TARGET_KEY]);\n","import {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n} from '../target/info';\n\nimport {\n  getProxyConfigValue,\n  PROXY_IGNORE_PROTOTYPE_METHODS,\n} from './config';\n\nimport {\n  isValidTarget,\n  isTypeChecked,\n} from '../utils';\n\nimport { TARGET_KEY } from '../target/proxy';\n\nconst getTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, children, names, checker } = info;\n\n  if (deep || value instanceof Function) {\n    const childInfo = getChildInfo(children, property);\n\n    if (childInfo) {\n      value = createFn(value, { info: childInfo });\n    } else {\n      value = createFn(value, { deep, names: [...names, property], checker });\n      storeChildInfoFrom(children, property, value);\n    }\n  }\n\n  return value;\n};\n\nconst isIgnoredProperty = (target, info, property, value) => {\n  if (\n    value instanceof Function\n    && !target.hasOwnProperty(property)\n    && getProxyConfigValue(PROXY_IGNORE_PROTOTYPE_METHODS, info)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getProperty = (createFn) => (target, property) => {\n  const value = target[property];\n\n  if (property === INFO_KEY) {\n    return value;\n    /*\n    target[TARGET_KEY] is a virtual property accessing which indicates\n    if object is wrapped with type checked proxy or not.\n    */\n  } else if (property === TARGET_KEY) {\n    return target;\n  }\n\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.getProperty) {\n    checker.getProperty(target, property, value, config, names);\n  }\n\n  if (\n    !isValidTarget(value)\n    || isTypeChecked(value)\n    || isIgnoredProperty(target, info, property, value)\n  ) {\n    return value;\n  }\n\n  return getTargetProperty(createFn, target, property, value);\n};\n\nexport default getProperty;\n","import {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n  mergeTargetInfo,\n} from '../target/info';\n\nimport {\n  getProxyConfigValue,\n  PROXY_WRAP_SET_PROPERTY_VALUES,\n} from './config';\n\nimport {\n  isValidTarget,\n  isTypeChecked,\n} from '../utils';\n\nimport { TARGET_KEY } from '../target/proxy';\n\nconst setNonTargetProperty = (target, property, value) => {\n  if (property === INFO_KEY) {\n    let info = getTargetInfo(target);\n    if (info && value && info !== value) {\n      info = mergeTargetInfo(info, value);\n    } else {\n      info = value;\n    }\n\n    target[property] = info;\n    return true;\n  } else if (!isValidTarget(value)) {\n    const { names, config, checker } = getTargetInfo(target);\n\n    if (checker.setProperty) {\n      checker.setProperty(target, property, value, config, names);\n    }\n\n    target[property] = value;\n    return true;\n  }\n\n  return false;\n};\n\nconst setTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, names, checker, config, children } = info;\n\n  if (checker.setProperty) {\n    checker.setProperty(target, property, value, config, names);\n  }\n\n  if (getProxyConfigValue(PROXY_WRAP_SET_PROPERTY_VALUES, info)) {\n    if (!isTypeChecked(value)) {\n      const childInfo = getChildInfo(children, property);\n\n      if (childInfo) {\n        value = createFn(value, { info: childInfo });\n      } else {\n        value = createFn(value, { deep, names: [...names, property], checker });\n      }\n    }\n\n    storeChildInfoFrom(children, property, value);\n  }\n\n  target[property] = value;\n  return true;\n};\n\nconst setProperty = (createFn) => (target, property, value) => {\n  if (property === TARGET_KEY) {\n    throw new Error(`\"${TARGET_KEY}\" is a virtual property and cannot be set`);\n  }\n\n  return setNonTargetProperty(target, property, value)\n    || setTargetProperty(createFn, target, property, value);\n};\n\nexport default setProperty;\n","import { isTypeChecked, isValidTarget } from '../utils';\nimport { getChildInfo, storeChildInfoFrom } from '../target/info';\n\nexport const getTypeCheckedChild = (createFn, info, name, value) => {\n  if (!isValidTarget(value)) {\n    return value;\n  }\n\n  let result = value;\n\n  if (!isTypeChecked(value)) {\n    const { children } = info;\n    const childInfo = getChildInfo(children, name);\n\n    if (childInfo) {\n      result = createFn(value, { info: childInfo });\n    } else {\n      const { deep, names, checker } = info;\n      result = createFn(value, { deep, names: [...names, name], checker });\n      storeChildInfoFrom(children, name, result);\n    }\n  }\n\n  return result;\n};\n","import {\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n} from '../target/info';\n\nimport {\n  getProxyConfigValue,\n  PROXY_WRAP_FUNCTION_ARGUMENTS,\n  PROXY_WRAP_FUNCTION_RETURN_VALUES,\n} from './config';\n\nimport { isTypeChecked } from '../utils';\n\nimport { RETURN_VALUE, AsIs } from '../checkers/utils';\nimport { getTypeCheckedChild } from './utils';\n\nconst getTargetArguments = (createFn, target, argumentsList) => {\n  const info = getTargetInfo(target);\n\n  if (getProxyConfigValue(PROXY_WRAP_FUNCTION_ARGUMENTS, info)) {\n    const { length } = argumentsList;\n    // FIXME cache arguments info objects as children\n    for (let index = 0; index < length; index++) {\n      argumentsList[index] = getTypeCheckedChild(createFn, info, String(index), argumentsList[index]);\n    }\n  }\n\n  return argumentsList;\n};\n\nconst callFunction = (createFn) => (target, thisArg, argumentsList) => {\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.arguments) {\n    checker.arguments(target, thisArg, argumentsList, config, names);\n  }\n\n  argumentsList = getTargetArguments(createFn, target, argumentsList);\n\n  let result = target.apply(thisArg, argumentsList);\n\n  if (checker.returnValue) {\n    checker.returnValue(target, thisArg, result, config, names);\n  }\n\n  if (getProxyConfigValue(PROXY_WRAP_FUNCTION_RETURN_VALUES, info)) {\n    result = getTypeCheckedChild(createFn, info, new AsIs(RETURN_VALUE), result);\n  }\n\n  return result;\n};\n\nexport default callFunction;\n","import { getDefaultTypeChecker } from '../checkers';\nimport { getErrorReporter } from '../reporters';\nimport { isEnabled } from '../enabled';\nimport {\n  createTargetInfo,\n  setTargetInfo,\n  createChildrenCache,\n} from '../target/info';\nimport { isValidTarget, isTypeChecked } from '../utils';\nimport getPropertyInit from './getProperty';\nimport setPropertyInit from './setProperty';\nimport callFunctionInit from './callFunction';\n\nlet getProperty;\nlet setProperty;\nlet callFunction;\n\nconst objectProxy = (target) => new Proxy(\n  target,\n  {\n    get: getProperty,\n    set: setProperty,\n  },\n);\n\nconst functionProxy = (target) => new Proxy(\n  target,\n  {\n    get: getProperty,\n    set: setProperty,\n    apply: callFunction,\n    construct: callFunction,\n  },\n);\n\nexport const wrapWithProxy = (target) => {\n  if (target instanceof Function) {\n    return functionProxy(target);\n  }\n\n  return objectProxy(target);\n};\n\nexport const createInfoFromOptions = (target, {\n  deep = true,\n  names = [],\n  config = null,\n  children = null,\n  checker = getDefaultTypeChecker(),\n  info = null, // exclusive option, if set other options being ignored\n} = {}) => info || createTargetInfo(\n  checker,\n  checker.init(target, getErrorReporter(), config),\n  deep,\n  names,\n  createChildrenCache(children),\n);\n\nconst create = (target, options) => {\n  if (!isValidTarget(target) || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  setTargetInfo(\n    target,\n    createInfoFromOptions(target, options),\n  );\n\n  return wrapWithProxy(target);\n};\n\ngetProperty = getPropertyInit(create);\nsetProperty = setPropertyInit(create);\ncallFunction = callFunctionInit(create);\n\nexport default create;\n","import { isEnabled } from '../enabled';\nimport {\n  setTargetInfo,\n  storeChildInfo,\n  getChildInfo,\n} from '../target/info';\nimport { isTypeChecked } from '../utils';\nimport { wrapWithProxy, createInfoFromOptions } from './create';\n\nconst deepInitializer = (target, options) => {\n  const info = createInfoFromOptions(target, options);\n  const { deep, names, checker, config, children } = info;\n\n  Object.keys(target)\n    .forEach((name) => {\n      const value = target[name];\n\n      checker.getProperty(target, name, value, config, names);\n\n      // skip functions/methods since we get info about them only when being executed\n      if (typeof value === 'object') {\n        let childInfo = getChildInfo(children, name);\n\n        if (childInfo) {\n          deepInitializer(value, { info: childInfo });\n        } else {\n          childInfo = deepInitializer(value, { deep, names: [...names, name], checker });\n          storeChildInfo(children, name, childInfo);\n        }\n      }\n    });\n\n  setTargetInfo(target, info);\n\n  return info;\n};\n\nconst createDeep = (target, options) => {\n  if (!target || typeof target !== 'object' || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  deepInitializer(target, options);\n\n  return wrapWithProxy(target);\n};\n\nexport default createDeep;\n","import {\n  getTargetInfo,\n  hasTargetInfo,\n} from './info';\n\nimport { create } from '../proxy';\n\nimport { isEnabled } from '../enabled';\n\nconst objectMerge = (options, ...sources) => {\n  let target = {};\n\n  if (isEnabled()) {\n    if (!options) {\n      options = {\n        info: getTargetInfo(sources.find((item) => hasTargetInfo(item))),\n        deep: false,\n      };\n    }\n\n    target = create(target, options);\n  }\n\n  return Object.assign(target, ...sources);\n};\n\nexport default objectMerge;\n","import { isEnabled } from '../enabled';\nimport { isValidTarget, isTypeChecked } from '../utils';\n\n// TODO if enabled, replaces original value with type checked\nconst replaceProperty = (target, name, options) => {\n  const value = target[name];\n\n  if (!isEnabled() || !isValidTarget(value) || isTypeChecked(value)) {\n    return target;\n  }\n\n  return target;\n};\n\nexport default replaceProperty;\n"],"names":["GET_PROPERTY","SET_PROPERTY","INDEX","ARGUMENTS","RETURN_VALUE","MERGE","AsIs","value","asIs","prototype","toString","valueOf","Symbol","toPrimitive","buildPath","sequence","reduce","str","name","String","parseInt","test","INFO_KEY","createTargetInfo","checker","config","deep","names","children","createChildrenCache","getTargetInfo","target","undefined","setTargetInfo","info","hasTargetInfo","getTargetTypeChecker","getTargetTypeCheckerConfig","mergeChildrenCache","targetCache","sourceCache","hasOwnProperty","mergeTargetInfo","storeChildInfo","cache","childInfo","storeChildInfoFrom","child","getChildInfo","targetInfo","sourceInfo","mergeConfigs","console","error","checkPrimitiveType","action","types","type","errorReporter","storedType","indexBasedClasses","Array","isIndexAccessTarget","indexOf","constructor","getTypeString","source","sourceTypes","sourceType","targetType","replacePropertyTypeCheck","typeCheckFn","replaceArgumentsTypeCheck","argumentsTypeCheckFn","replaceReturnValueTypeCheck","returnValueTypeCheckFn","registerIndexBasedClass","push","setIndexValueType","setIndexValueTypeBy","replaceIndexedTypeCheck","PrimitiveTypeChecker","collectTypesOnInit","areArrayElementsOfSameType","init","cachedTypes","indexType","find","item","Object","keys","forEach","key","getProperty","getIndexProperty","getNamedProperty","typeFn","Function","setProperty","newValue","setIndexProperty","setNamedProperty","arguments","thisArg","args","length","valid","index","agrValid","returnValue","defaultTypeChecker","getDefaultTypeChecker","setDefaultTypeChecker","typeChecker","constructErrorString","required","actual","ConsoleErrorReporter","requiredTypeString","actualTypeString","ConsoleWarnReporter","warn","ThrowErrorReporter","Error","getErrorReporter","setErrorReporter","reporter","enabled","isEnabled","setEnabled","TARGET_KEY","getOriginalTarget","PROXY_WRAP_FUNCTION_RETURN_VALUES","PROXY_WRAP_FUNCTION_ARGUMENTS","PROXY_WRAP_SET_PROPERTY_VALUES","PROXY_IGNORE_PROTOTYPE_METHODS","getDefaultProxyConfig","setProxyConfig","newConfig","assign","getProxyConfig","getProxyConfigValue","validTypes","object","function","isValidTarget","Boolean","isTypeChecked","getTargetProperty","createFn","property","isIgnoredProperty","setNonTargetProperty","setTargetProperty","getTypeCheckedChild","result","getTargetArguments","argumentsList","callFunction","apply","objectProxy","Proxy","get","set","functionProxy","construct","wrapWithProxy","createInfoFromOptions","create","options","getPropertyInit","setPropertyInit","callFunctionInit","deepInitializer","createDeep","objectMerge","sources","replaceProperty"],"mappings":"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"}