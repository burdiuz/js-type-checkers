{"version":3,"file":"type-checkers.js","sources":["../source/checkers/utils.js","../source/checkers/primitive.js","../source/checkers/index.js","../source/reporters/utils.js","../source/reporters/console.js","../source/reporters/error.js","../source/reporters/index.js","../source/enabled.js","../source/target/info.js","../source/proxy/config.js","../source/target/proxy.js","../source/utils.js","../source/proxy/getProperty.js","../source/proxy/setProperty.js","../source/proxy/callFunction.js","../source/proxy/create.js","../source/proxy/createDeep.js","../source/target/objectMerge.js"],"sourcesContent":["\nexport const GET_PROPERTY = 'GetProperty';\nexport const SET_PROPERTY = 'SetProperty';\nexport const ARGUMENTS = 'Arguments';\nexport const RETURN_VALUE = 'ReturnValue';\nexport const MERGE = 'Merge';\n\nexport const buildPath = sequence => sequence\n  .reduce((str, name) => {\n    if (String(parseInt(name, 10)) === name) {\n      str = `${str}[${name}]`;\n    } else if (/^[a-z][\\w$]*$/i.test(name)) {\n      str = str ? `${str}.${name}` : name;\n    } else {\n      str = `${str}[\"${name}\"]`;\n    }\n\n    return str;\n  }, '');\n","import {\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  MERGE,\n  buildPath,\n} from './utils';\n\nconst checkType = (action, types, name, type, errorReporter, sequence) => {\n  if (!type) {\n    return true;\n  }\n\n  const storedType = types[name];\n\n  if (storedType) {\n    // TODO add possibility to store function in types[name] that can be called to identify if there are type error\n    if (storedType !== type) {\n      errorReporter(action, buildPath([...sequence, name]), types[name], type);\n\n      return false;\n    }\n  } else {\n    types[name] = type;\n  }\n\n  return true;\n};\n\nconst PrimitiveTypeChecker = {\n  collectTypesOnInit: true,\n\n  init(target, errorReporter, cachedTypes = null) {\n    let types = {};\n\n    if (cachedTypes) {\n      types = cachedTypes;\n    } else if (this.collectTypesOnInit) {\n      Object.keys(target)\n        .forEach((key) => {\n          types[key] = this.getTypeString(target[key]);\n        });\n    }\n\n    return {\n      types,\n      errorReporter,\n    };\n  },\n\n  getTypeString(value) {\n    if (value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return 'array';\n    }\n\n    return typeof value;\n  },\n\n  mergeConfigs({ types, errorReporter }, source, names = []) {\n    const sourceTypes = source.types;\n\n    for (const name in sourceTypes) {\n      if (sourceTypes.hasOwnProperty(name)) {\n        const sourceType = sourceTypes[name];\n        const targetType = types[name];\n\n        if (sourceType && targetType && targetType !== sourceType) {\n          errorReporter(MERGE, buildPath([...names, name]), targetType, sourceType);\n        } else {\n          types[name] = sourceType;\n        }\n      }\n    }\n  },\n\n  getProperty(target, name, value, { types, errorReporter }, sequence) {\n    return checkType(\n      GET_PROPERTY,\n      types,\n      name,\n      this.getTypeString(value),\n      errorReporter,\n      sequence,\n    );\n  },\n\n  setProperty(target, name, newValue, { types, errorReporter }, sequence) {\n    return checkType(\n      SET_PROPERTY,\n      types,\n      name,\n      this.getTypeString(newValue),\n      errorReporter,\n      sequence,\n    );\n  },\n\n  arguments(target, thisArg, args, { types, errorReporter }, sequence) {\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const agrValid = checkType(\n        ARGUMENTS,\n        types,\n        String(index),\n        this.getTypeString(args[index]),\n        errorReporter,\n        sequence,\n      );\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  },\n\n  returnValue(target, thisArg, value, { types, errorReporter }, sequence) {\n    return checkType(\n      RETURN_VALUE,\n      types,\n      '',\n      this.getTypeString(value),\n      errorReporter,\n      sequence,\n    );\n  },\n};\n\nexport default PrimitiveTypeChecker;\n","import PrimitiveTypeChecker from './primitive';\n\nlet defaultTypeChecker = PrimitiveTypeChecker;\n\nexport const getDefaultTypeChecker = () => defaultTypeChecker;\nexport const setDefaultTypeChecker = (typeChecker) => defaultTypeChecker = typeChecker;\n","export const constructErrorString = (action, name, required, actual) =>\n  `${action}Error on \"${name}\" instead of \"${required}\" received \"${actual}\"`;\n","import { constructErrorString } from './utils';\n\nexport const ConsoleErrorReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\nexport const ConsoleWarnReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.warn(constructErrorString(action, name, requiredTypeString, actualTypeString));\n","import { constructErrorString } from './utils';\n\nexport const ThrowErrorReporter = (action, name, requiredTypeString, actualTypeString) => {\n  throw new Error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n};\n","import { ConsoleErrorReporter } from './console';\n\nlet errorReporter = ConsoleErrorReporter;\n\nexport const getErrorReporter = () => errorReporter;\n\nexport const setErrorReporter = (reporter) => errorReporter = reporter;\n","let enabled = true;\n\nexport const isEnabled = () => enabled;\nexport const setEnabled = (value = true) => enabled = !!value;\n","export const INFO_KEY = Symbol('type-checkers::info');\n\nexport const createTargetInfo = (checker, config, deep = true, names = [], children = createChildrenCache()) => ({\n  checker,\n  config,\n  deep,\n  names,\n  children,\n});\n\nexport const getTargetInfo = (target) => {\n  return target ? target[INFO_KEY] : undefined;\n};\n\nexport const setTargetInfo = (target, info) => {\n  if (target && info) {\n    target[INFO_KEY] = info;\n  }\n};\n\nexport const hasTargetInfo = (target) => !!getTargetInfo(target);\n\nexport const getTargetTypeChecker = (target) => {\n  return target && target[INFO_KEY] ? target[INFO_KEY].checker : undefined;\n};\n\nexport const getTargetTypeCheckerConfig = (target) => {\n  return target && target[INFO_KEY] ? target[INFO_KEY].config : undefined;\n};\n\nexport const createChildrenCache = (children = {}) => ({ ...children });\n\nexport const mergeChildrenCache = (targetCache, sourceCache) => {\n  for (const name in sourceCache) {\n    if (targetCache.hasOwnProperty(name)) {\n      targetCache[name] = mergeTargetInfo(targetCache[name], sourceCache[name]);\n    } else {\n      targetCache[name] = sourceCache[name];\n    }\n  }\n\n  return targetCache;\n};\n\nexport const storeChildInfo = (cache, name, childInfo) => {\n  delete cache[name];\n\n  if (childInfo) {\n    cache[name] = childInfo;\n  }\n};\n\nexport const storeChildInfoFrom = (cache, name, child) => {\n  storeChildInfo(cache, name, getTargetInfo(child));\n};\n\nexport const getChildInfo = (cache, name) => cache[name];\n\nexport const hasChildInfo = (cache, name) => !!cache[name];\n\nexport const removeChildInfo = (cache, name) => delete cache[name];\n\nexport const mergeTargetInfo = (targetInfo, sourceInfo) => {\n  const { deep, checker, children, config, names } = targetInfo;\n\n  if (checker === sourceInfo.checker) {\n    targetInfo.deep = deep || sourceInfo.deep;\n    targetInfo.children = mergeChildrenCache(children, sourceInfo.children);\n    targetInfo.config = checker.mergeConfigs(config, sourceInfo.config, names);\n  } else {\n    console.error('TypeChecked objects can be merged only if using exactly same instance of type checker.');\n  }\n\n  return targetInfo;\n};\n","export const config = {\n  wrapFunctionReturnValues: true,\n  wrapFunctionArguments: false,\n  wrapSetPropertyValues: true,\n};\n\nexport const setProxyConfig = (newConfig) => Object.assign(config, newConfig);\n\nexport const getProxyConfig = () => ({ ...config });\n","export const TARGET_KEY = Symbol('type-checkers::target');\n\nexport const getOriginalTarget = (target) => {\n  return target[TARGET_KEY] || target;\n};","import { TARGET_KEY } from './target/proxy';\n\nconst validTypes = {\n  object: true,\n  function: true,\n};\n\nexport const isValidTarget = (target) => target && validTypes[typeof target];\nexport const isTypeChecked = (target) => Boolean(target && target[TARGET_KEY]);","import {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n} from '../target/info';\nimport { TARGET_KEY } from '../target/proxy';\nimport { isValidTarget, isTypeChecked } from '../utils';\n\nconst getTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, children, names, checker } = info;\n\n  if (deep || value instanceof Function) {\n    const childInfo = getChildInfo(children, property);\n\n    if (childInfo) {\n      value = createFn(value, { info: childInfo });\n    } else {\n      value = createFn(value, { deep, names: [...names, property], checker });\n      storeChildInfoFrom(children, property, value);\n    }\n  }\n\n  return value;\n};\n\nconst getProperty = (createFn) => (target, property) => {\n  const value = target[property];\n\n  if (property === INFO_KEY) {\n    return value;\n    /*\n    target[TARGET_KEY] is a virtual property accessing which indicates\n    if object is wrapped with type checked proxy or not.\n    */\n  } else if (property === TARGET_KEY) {\n    return target;\n  }\n\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.getProperty) {\n    checker.getProperty(target, property, value, config, names);\n  }\n\n  if (!isValidTarget(value) || isTypeChecked(value)) {\n    return value;\n  }\n\n  return getTargetProperty(createFn, target, property, value);\n};\n\nexport default getProperty;\n","import {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n  mergeTargetInfo,\n} from '../target/info';\nimport { TARGET_KEY } from '../target/proxy';\nimport { config as proxyConfig } from './config';\nimport { isValidTarget, isTypeChecked } from '../utils';\n\nconst setNonTargetProperty = (target, property, value) => {\n  if (property === INFO_KEY) {\n    let info = getTargetInfo(target);\n    if (info && value && info !== value) {\n      info = mergeTargetInfo(info, value);\n    } else {\n      info = value;\n    }\n\n    target[property] = info;\n    return true;\n  } else if (!isValidTarget(value)) {\n    target[property] = value;\n    return true;\n  }\n\n  return false;\n};\n\nconst setTargetProperty = (createFn, target, property, value) => {\n  if (proxyConfig.wrapSetPropertyValues) {\n    const { deep, names, checker, children } = getTargetInfo(target);\n\n    if (!isTypeChecked(value)) {\n      const childInfo = getChildInfo(children, property);\n\n      if (childInfo) {\n        value = createFn(value, { info: childInfo });\n      } else {\n        value = createFn(value, { deep, names: [...names, property], checker });\n      }\n    }\n\n    storeChildInfoFrom(children, property, value);\n  }\n\n  target[property] = value;\n  return true;\n};\n\nconst setProperty = (createFn) => (target, property, value) => {\n  if (property === TARGET_KEY) {\n    throw new Error(`\"${TARGET_KEY}\" is a virtual property and cannot be set`);\n  }\n\n  const { names, config, checker } = getTargetInfo(target);\n\n  if (checker.setProperty) {\n    checker.setProperty(target, property, value, config, names);\n  }\n\n  return setNonTargetProperty(target, property, value)\n    || setTargetProperty(createFn, target, property, value);\n};\n\nexport default setProperty;\n","import {\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n} from '../target/info';\nimport { config as proxyConfig } from './config';\nimport { isTypeChecked } from '../utils';\nimport { RETURN_VALUE } from '../checkers/utils';\n\nconst getTargetArguments = (createFn, target, argumentsList) => {\n  if (proxyConfig.wrapFunctionArguments) {\n    const { deep, names, checker } = getTargetInfo(target);\n    const { length } = argumentsList;\n    // FIXME cache arguments info objects as children\n    for (let index = 0; index < length; index++) {\n      argumentsList[index] = createFn(\n        argumentsList[index],\n        {\n          deep,\n          names: [...names, index],\n          checker,\n        },\n      );\n    }\n  }\n\n  return argumentsList;\n};\nconst getTargetReturnValue = (createFn, target, returnValue) => {\n  if (proxyConfig.wrapFunctionReturnValues) {\n    const { deep, names, checker, children } = getTargetInfo(target);\n\n    if (!isTypeChecked(returnValue)) {\n      const childInfo = getChildInfo(children, RETURN_VALUE);\n\n      if (childInfo) {\n        returnValue = createFn(returnValue, { info: childInfo });\n      } else {\n        returnValue = createFn(returnValue, { deep, names: [...names], checker });\n      }\n    }\n\n    storeChildInfoFrom(children, RETURN_VALUE, returnValue);\n  }\n\n  return returnValue;\n};\n\nconst callFunction = (createFn) => (target, thisArg, argumentsList) => {\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.arguments) {\n    checker.arguments(target, thisArg, argumentsList, config, names);\n  }\n\n  argumentsList = getTargetArguments(createFn, target, argumentsList);\n\n  const result = target.apply(thisArg, argumentsList);\n\n  if (checker.returnValue) {\n    checker.returnValue(target, thisArg, result, config, names);\n  }\n\n  return getTargetReturnValue(createFn, target, result);\n};\n\nexport default callFunction;\n","import { getDefaultTypeChecker } from '../checkers';\nimport { getErrorReporter } from '../reporters';\nimport { isEnabled } from '../enabled';\nimport {\n  createTargetInfo,\n  setTargetInfo,\n  createChildrenCache,\n} from '../target/info';\nimport { isValidTarget, isTypeChecked } from '../utils';\nimport getPropertyInit from './getProperty';\nimport setPropertyInit from './setProperty';\nimport callFunctionInit from './callFunction';\n\nlet getProperty;\nlet setProperty;\nlet callFunction;\n\nconst objectProxy = (target) => new Proxy(\n  target,\n  {\n    get: getProperty,\n    set: setProperty,\n  },\n);\n\nconst functionProxy = (target) => new Proxy(\n  target,\n  {\n    apply: callFunction,\n    construct: callFunction,\n  },\n);\n\nexport const wrapWithProxy = (target) => {\n  if (target instanceof Function) {\n    return functionProxy(target);\n  }\n\n  return objectProxy(target);\n};\n\nexport const createInfoFromOptions = (target, {\n  deep = true,\n  names = [],\n  config = null,\n  children = null,\n  checker = getDefaultTypeChecker(),\n  info = null, // exclusive option, if set other options being ignored\n} = {}) => info || createTargetInfo(\n  checker,\n  checker.init(target, getErrorReporter(), config),\n  deep,\n  names,\n  createChildrenCache(children),\n);\n\nconst create = (target, options) => {\n  if (!isValidTarget(target) || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  setTargetInfo(\n    target,\n    createInfoFromOptions(target, options),\n  );\n\n  return wrapWithProxy(target);\n};\n\ngetProperty = getPropertyInit(create);\nsetProperty = setPropertyInit(create);\ncallFunction = callFunctionInit(create);\n\nexport default create;\n","import { isEnabled } from '../enabled';\nimport {\n  setTargetInfo,\n  storeChildInfo,\n  getChildInfo,\n} from '../target/info';\nimport { isTypeChecked } from '../utils';\nimport { wrapWithProxy, createInfoFromOptions } from './create';\n\nconst deepInitializer = (target, options) => {\n  const info = createInfoFromOptions(target, options);\n  const { deep, names, checker, config, children } = info;\n\n  Object.keys(target)\n    .forEach((name) => {\n      const value = target[name];\n\n      checker.getProperty(target, name, value, config, names);\n\n      // skip functions/methods since we get info about them only when being executed\n      if (typeof value === 'object') {\n        let childInfo = getChildInfo(children, name);\n\n        if (childInfo) {\n          deepInitializer(value, { info: childInfo });\n        } else {\n          childInfo = deepInitializer(value, { deep, names: [...names, name], checker });\n          storeChildInfo(children, name, childInfo);\n        }\n      }\n    });\n\n  setTargetInfo(target, info);\n\n  return info;\n};\n\nconst createDeep = (target, options) => {\n  if (!target || typeof target !== 'object' || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  deepInitializer(target, options);\n\n  return wrapWithProxy(target);\n};\n\nexport default createDeep;\n","import {\n  getTargetInfo,\n  hasTargetInfo,\n} from './info';\n\nimport { create } from '../proxy';\n\nimport { isEnabled } from '../enabled';\n\nconst objectMerge = (options, ...sources) => {\n  let target = {};\n\n  if (isEnabled()) {\n    if (!options) {\n      options = {\n        info: getTargetInfo(sources.find((item) => hasTargetInfo(item))),\n        deep: false,\n      };\n    }\n\n    target = create(target, options);\n  }\n\n  return Object.assign(target, ...sources);\n};\n\nexport default objectMerge;\n"],"names":["GET_PROPERTY","SET_PROPERTY","ARGUMENTS","RETURN_VALUE","MERGE","buildPath","sequence","reduce","str","name","String","parseInt","test","checkType","action","types","type","errorReporter","storedType","PrimitiveTypeChecker","collectTypesOnInit","init","target","cachedTypes","Object","keys","forEach","key","getTypeString","value","undefined","Array","mergeConfigs","source","names","sourceTypes","hasOwnProperty","sourceType","targetType","getProperty","setProperty","newValue","arguments","thisArg","args","length","valid","index","agrValid","returnValue","defaultTypeChecker","getDefaultTypeChecker","setDefaultTypeChecker","typeChecker","constructErrorString","required","actual","ConsoleErrorReporter","requiredTypeString","actualTypeString","console","error","ConsoleWarnReporter","warn","ThrowErrorReporter","Error","getErrorReporter","setErrorReporter","reporter","enabled","isEnabled","setEnabled","INFO_KEY","Symbol","createTargetInfo","checker","config","deep","children","createChildrenCache","getTargetInfo","setTargetInfo","info","hasTargetInfo","getTargetTypeChecker","getTargetTypeCheckerConfig","mergeChildrenCache","targetCache","sourceCache","mergeTargetInfo","storeChildInfo","cache","childInfo","storeChildInfoFrom","child","getChildInfo","targetInfo","sourceInfo","wrapFunctionReturnValues","wrapFunctionArguments","wrapSetPropertyValues","setProxyConfig","newConfig","assign","getProxyConfig","TARGET_KEY","validTypes","object","function","isValidTarget","isTypeChecked","Boolean","getTargetProperty","createFn","property","Function","setNonTargetProperty","setTargetProperty","proxyConfig","getTargetArguments","argumentsList","getTargetReturnValue","callFunction","result","apply","objectProxy","Proxy","get","set","functionProxy","construct","wrapWithProxy","createInfoFromOptions","create","options","getPropertyInit","setPropertyInit","callFunctionInit","deepInitializer","createDeep","objectMerge","sources","find","item"],"mappings":";;;;;;EACO,MAAMA,eAAe,aAArB;AACP,EAAO,MAAMC,eAAe,aAArB;AACP,EAAO,MAAMC,YAAY,WAAlB;AACP,EAAO,MAAMC,eAAe,aAArB;AACP,EAAO,MAAMC,QAAQ,OAAd;;AAEP,EAAO,MAAMC,YAAYC,YAAYA,SAClCC,MADkC,CAC3B,CAACC,GAAD,EAAMC,IAAN,KAAe;EACrB,MAAIC,OAAOC,SAASF,IAAT,EAAe,EAAf,CAAP,MAA+BA,IAAnC,EAAyC;EACvCD,UAAO,GAAEA,GAAI,IAAGC,IAAK,GAArB;EACD,GAFD,MAEO,IAAI,iBAAiBG,IAAjB,CAAsBH,IAAtB,CAAJ,EAAiC;EACtCD,UAAMA,MAAO,GAAEA,GAAI,IAAGC,IAAK,EAArB,GAAyBA,IAA/B;EACD,GAFM,MAEA;EACLD,UAAO,GAAEA,GAAI,KAAIC,IAAK,IAAtB;EACD;;EAED,SAAOD,GAAP;EACD,CAXkC,EAWhC,EAXgC,CAA9B;;ECEP,MAAMK,YAAY,CAACC,MAAD,EAASC,KAAT,EAAgBN,IAAhB,EAAsBO,IAAtB,EAA4BC,aAA5B,EAA2CX,QAA3C,KAAwD;EACxE,MAAI,CAACU,IAAL,EAAW;EACT,WAAO,IAAP;EACD;;EAED,QAAME,aAAaH,MAAMN,IAAN,CAAnB;;EAEA,MAAIS,UAAJ,EAAgB;EACd;EACA,QAAIA,eAAeF,IAAnB,EAAyB;EACvBC,oBAAcH,MAAd,EAAsBT,UAAU,CAAC,GAAGC,QAAJ,EAAcG,IAAd,CAAV,CAAtB,EAAsDM,MAAMN,IAAN,CAAtD,EAAmEO,IAAnE;;EAEA,aAAO,KAAP;EACD;EACF,GAPD,MAOO;EACLD,UAAMN,IAAN,IAAcO,IAAd;EACD;;EAED,SAAO,IAAP;EACD,CAnBD;;EAqBA,MAAMG,uBAAuB;EAC3BC,sBAAoB,IADO;;EAG3BC,OAAKC,MAAL,EAAaL,aAAb,EAA4BM,cAAc,IAA1C,EAAgD;EAC9C,QAAIR,QAAQ,EAAZ;;EAEA,QAAIQ,WAAJ,EAAiB;EACfR,cAAQQ,WAAR;EACD,KAFD,MAEO,IAAI,KAAKH,kBAAT,EAA6B;EAClCI,aAAOC,IAAP,CAAYH,MAAZ,EACGI,OADH,CACYC,GAAD,IAAS;EAChBZ,cAAMY,GAAN,IAAa,KAAKC,aAAL,CAAmBN,OAAOK,GAAP,CAAnB,CAAb;EACD,OAHH;EAID;;EAED,WAAO;EACLZ,WADK;EAELE;EAFK,KAAP;EAID,GAnB0B;;EAqB3BW,gBAAcC,KAAd,EAAqB;EACnB,QAAIA,UAAUC,SAAd,EAAyB;EACvB,aAAO,EAAP;EACD,KAFD,MAEO,IAAID,iBAAiBE,KAArB,EAA4B;EACjC,aAAO,OAAP;EACD;;EAED,WAAO,OAAOF,KAAd;EACD,GA7B0B;;EA+B3BG,eAAa,EAAEjB,KAAF,EAASE,aAAT,EAAb,EAAuCgB,MAAvC,EAA+CC,QAAQ,EAAvD,EAA2D;EACzD,UAAMC,cAAcF,OAAOlB,KAA3B;;EAEA,SAAK,MAAMN,IAAX,IAAmB0B,WAAnB,EAAgC;EAC9B,UAAIA,YAAYC,cAAZ,CAA2B3B,IAA3B,CAAJ,EAAsC;EACpC,cAAM4B,aAAaF,YAAY1B,IAAZ,CAAnB;EACA,cAAM6B,aAAavB,MAAMN,IAAN,CAAnB;;EAEA,YAAI4B,cAAcC,UAAd,IAA4BA,eAAeD,UAA/C,EAA2D;EACzDpB,wBAAcb,KAAd,EAAqBC,UAAU,CAAC,GAAG6B,KAAJ,EAAWzB,IAAX,CAAV,CAArB,EAAkD6B,UAAlD,EAA8DD,UAA9D;EACD,SAFD,MAEO;EACLtB,gBAAMN,IAAN,IAAc4B,UAAd;EACD;EACF;EACF;EACF,GA9C0B;;EAgD3BE,cAAYjB,MAAZ,EAAoBb,IAApB,EAA0BoB,KAA1B,EAAiC,EAAEd,KAAF,EAASE,aAAT,EAAjC,EAA2DX,QAA3D,EAAqE;EACnE,WAAOO,UACLb,YADK,EAELe,KAFK,EAGLN,IAHK,EAIL,KAAKmB,aAAL,CAAmBC,KAAnB,CAJK,EAKLZ,aALK,EAMLX,QANK,CAAP;EAQD,GAzD0B;;EA2D3BkC,cAAYlB,MAAZ,EAAoBb,IAApB,EAA0BgC,QAA1B,EAAoC,EAAE1B,KAAF,EAASE,aAAT,EAApC,EAA8DX,QAA9D,EAAwE;EACtE,WAAOO,UACLZ,YADK,EAELc,KAFK,EAGLN,IAHK,EAIL,KAAKmB,aAAL,CAAmBa,QAAnB,CAJK,EAKLxB,aALK,EAMLX,QANK,CAAP;EAQD,GApE0B;;EAsE3BoC,YAAUpB,MAAV,EAAkBqB,OAAlB,EAA2BC,IAA3B,EAAiC,EAAE7B,KAAF,EAASE,aAAT,EAAjC,EAA2DX,QAA3D,EAAqE;EACnE,UAAM,EAAEuC,MAAF,KAAaD,IAAnB;EACA,QAAIE,QAAQ,IAAZ;;EAEA,SAAK,IAAIC,QAAQ,CAAjB,EAAoBA,QAAQF,MAA5B,EAAoCE,OAApC,EAA6C;EAC3C,YAAMC,WAAWnC,UACfX,SADe,EAEfa,KAFe,EAGfL,OAAOqC,KAAP,CAHe,EAIf,KAAKnB,aAAL,CAAmBgB,KAAKG,KAAL,CAAnB,CAJe,EAKf9B,aALe,EAMfX,QANe,CAAjB;;EASAwC,cAAQE,YAAYF,KAApB;EACD;;EAED,WAAOA,KAAP;EACD,GAxF0B;;EA0F3BG,cAAY3B,MAAZ,EAAoBqB,OAApB,EAA6Bd,KAA7B,EAAoC,EAAEd,KAAF,EAASE,aAAT,EAApC,EAA8DX,QAA9D,EAAwE;EACtE,WAAOO,UACLV,YADK,EAELY,KAFK,EAGL,EAHK,EAIL,KAAKa,aAAL,CAAmBC,KAAnB,CAJK,EAKLZ,aALK,EAMLX,QANK,CAAP;EAQD;EAnG0B,CAA7B;;EC5BA,IAAI4C,qBAAqB/B,oBAAzB;;AAEA,QAAagC,wBAAwB,MAAMD,kBAApC;AACP,QAAaE,wBAAyBC,WAAD,IAAiBH,qBAAqBG,WAApE;;ECLA,MAAMC,uBAAuB,CAACxC,MAAD,EAASL,IAAT,EAAe8C,QAAf,EAAyBC,MAAzB,KACjC,GAAE1C,MAAO,aAAYL,IAAK,iBAAgB8C,QAAS,eAAcC,MAAO,GADpE;;QCEMC,uBAAuB,CAAC3C,MAAD,EAASL,IAAT,EAAeiD,kBAAf,EAAmCC,gBAAnC,KAClCC,QAAQC,KAAR,CAAcP,qBAAqBxC,MAArB,EAA6BL,IAA7B,EAAmCiD,kBAAnC,EAAuDC,gBAAvD,CAAd,CADK;;AAGP,QAAaG,sBAAsB,CAAChD,MAAD,EAASL,IAAT,EAAeiD,kBAAf,EAAmCC,gBAAnC,KACjCC,QAAQG,IAAR,CAAaT,qBAAqBxC,MAArB,EAA6BL,IAA7B,EAAmCiD,kBAAnC,EAAuDC,gBAAvD,CAAb,CADK;;QCHMK,qBAAqB,CAAClD,MAAD,EAASL,IAAT,EAAeiD,kBAAf,EAAmCC,gBAAnC,KAAwD;EACxF,QAAM,IAAIM,KAAJ,CAAUX,qBAAqBxC,MAArB,EAA6BL,IAA7B,EAAmCiD,kBAAnC,EAAuDC,gBAAvD,CAAV,CAAN;EACD,CAFM;;ECAP,IAAI1C,gBAAgBwC,oBAApB;;AAEA,QAAaS,mBAAmB,MAAMjD,aAA/B;;AAEP,QAAakD,mBAAoBC,QAAD,IAAcnD,gBAAgBmD,QAAvD;;ECNP,IAAIC,UAAU,IAAd;;AAEA,QAAaC,YAAY,MAAMD,OAAxB;AACP,QAAaE,aAAa,CAAC1C,QAAQ,IAAT,KAAkBwC,UAAU,CAAC,CAACxC,KAAjD;;ECHA,MAAM2C,WAAWC,OAAO,qBAAP,CAAjB;;AAEP,EAAO,MAAMC,mBAAmB,CAACC,OAAD,EAAUC,MAAV,EAAkBC,OAAO,IAAzB,EAA+B3C,QAAQ,EAAvC,EAA2C4C,WAAWC,qBAAtD,MAAiF;EAC/GJ,SAD+G;EAE/GC,QAF+G;EAG/GC,MAH+G;EAI/G3C,OAJ+G;EAK/G4C;EAL+G,CAAjF,CAAzB;;AAQP,QAAaE,gBAAiB1D,MAAD,IAAY;EACvC,SAAOA,SAASA,OAAOkD,QAAP,CAAT,GAA4B1C,SAAnC;EACD,CAFM;;AAIP,QAAamD,gBAAgB,CAAC3D,MAAD,EAAS4D,IAAT,KAAkB;EAC7C,MAAI5D,UAAU4D,IAAd,EAAoB;EAClB5D,WAAOkD,QAAP,IAAmBU,IAAnB;EACD;EACF,CAJM;;AAMP,QAAaC,gBAAiB7D,MAAD,IAAY,CAAC,CAAC0D,cAAc1D,MAAd,CAApC;;AAEP,QAAa8D,uBAAwB9D,MAAD,IAAY;EAC9C,SAAOA,UAAUA,OAAOkD,QAAP,CAAV,GAA6BlD,OAAOkD,QAAP,EAAiBG,OAA9C,GAAwD7C,SAA/D;EACD,CAFM;;AAIP,QAAauD,6BAA8B/D,MAAD,IAAY;EACpD,SAAOA,UAAUA,OAAOkD,QAAP,CAAV,GAA6BlD,OAAOkD,QAAP,EAAiBI,MAA9C,GAAuD9C,SAA9D;EACD,CAFM;;AAIP,EAAO,MAAMiD,sBAAsB,CAACD,WAAW,EAAZ,uBAAyBA,QAAzB,CAA5B;;AAEP,EAAO,MAAMQ,qBAAqB,CAACC,WAAD,EAAcC,WAAd,KAA8B;EAC9D,OAAK,MAAM/E,IAAX,IAAmB+E,WAAnB,EAAgC;EAC9B,QAAID,YAAYnD,cAAZ,CAA2B3B,IAA3B,CAAJ,EAAsC;EACpC8E,kBAAY9E,IAAZ,IAAoBgF,gBAAgBF,YAAY9E,IAAZ,CAAhB,EAAmC+E,YAAY/E,IAAZ,CAAnC,CAApB;EACD,KAFD,MAEO;EACL8E,kBAAY9E,IAAZ,IAAoB+E,YAAY/E,IAAZ,CAApB;EACD;EACF;;EAED,SAAO8E,WAAP;EACD,CAVM;;AAYP,EAAO,MAAMG,iBAAiB,CAACC,KAAD,EAAQlF,IAAR,EAAcmF,SAAd,KAA4B;EACxD,SAAOD,MAAMlF,IAAN,CAAP;;EAEA,MAAImF,SAAJ,EAAe;EACbD,UAAMlF,IAAN,IAAcmF,SAAd;EACD;EACF,CANM;;AAQP,EAAO,MAAMC,qBAAqB,CAACF,KAAD,EAAQlF,IAAR,EAAcqF,KAAd,KAAwB;EACxDJ,iBAAeC,KAAf,EAAsBlF,IAAtB,EAA4BuE,cAAcc,KAAd,CAA5B;EACD,CAFM;;AAIP,EAAO,MAAMC,eAAe,CAACJ,KAAD,EAAQlF,IAAR,KAAiBkF,MAAMlF,IAAN,CAAtC;;AAMP,QAAagF,kBAAkB,CAACO,UAAD,EAAaC,UAAb,KAA4B;EACzD,QAAM,EAAEpB,IAAF,EAAQF,OAAR,EAAiBG,QAAjB,EAA2BF,MAA3B,EAAmC1C,KAAnC,KAA6C8D,UAAnD;;EAEA,MAAIrB,YAAYsB,WAAWtB,OAA3B,EAAoC;EAClCqB,eAAWnB,IAAX,GAAkBA,QAAQoB,WAAWpB,IAArC;EACAmB,eAAWlB,QAAX,GAAsBQ,mBAAmBR,QAAnB,EAA6BmB,WAAWnB,QAAxC,CAAtB;EACAkB,eAAWpB,MAAX,GAAoBD,QAAQ3C,YAAR,CAAqB4C,MAArB,EAA6BqB,WAAWrB,MAAxC,EAAgD1C,KAAhD,CAApB;EACD,GAJD,MAIO;EACL0B,YAAQC,KAAR,CAAc,wFAAd;EACD;;EAED,SAAOmC,UAAP;EACD,CAZM;;EC9DA,MAAMpB,SAAS;EACpBsB,4BAA0B,IADN;EAEpBC,yBAAuB,KAFH;EAGpBC,yBAAuB;EAHH,CAAf;;AAMP,QAAaC,iBAAkBC,SAAD,IAAe9E,OAAO+E,MAAP,CAAc3B,MAAd,EAAsB0B,SAAtB,CAAtC;;AAEP,QAAaE,iBAAiB,wBAAY5B,MAAZ,CAAvB;;ECRA,MAAM6B,aAAahC,OAAO,uBAAP,CAAnB;;ECEP,MAAMiC,aAAa;EACjBC,UAAQ,IADS;EAEjBC,YAAU;EAFO,CAAnB;;AAKA,QAAaC,gBAAiBvF,MAAD,IAAYA,UAAUoF,WAAW,OAAOpF,MAAlB,CAA5C;AACP,QAAawF,gBAAiBxF,MAAD,IAAYyF,QAAQzF,UAAUA,OAAOmF,UAAP,CAAlB,CAAlC;;ECCP,MAAMO,oBAAoB,CAACC,QAAD,EAAW3F,MAAX,EAAmB4F,QAAnB,EAA6BrF,KAA7B,KAAuC;EAC/D,QAAMqD,OAAOF,cAAc1D,MAAd,CAAb;EACA,QAAM,EAAEuD,IAAF,EAAQC,QAAR,EAAkB5C,KAAlB,EAAyByC,OAAzB,KAAqCO,IAA3C;;EAEA,MAAIL,QAAQhD,iBAAiBsF,QAA7B,EAAuC;EACrC,UAAMvB,YAAYG,aAAajB,QAAb,EAAuBoC,QAAvB,CAAlB;;EAEA,QAAItB,SAAJ,EAAe;EACb/D,cAAQoF,SAASpF,KAAT,EAAgB,EAAEqD,MAAMU,SAAR,EAAhB,CAAR;EACD,KAFD,MAEO;EACL/D,cAAQoF,SAASpF,KAAT,EAAgB,EAAEgD,IAAF,EAAQ3C,OAAO,CAAC,GAAGA,KAAJ,EAAWgF,QAAX,CAAf,EAAqCvC,OAArC,EAAhB,CAAR;EACAkB,yBAAmBf,QAAnB,EAA6BoC,QAA7B,EAAuCrF,KAAvC;EACD;EACF;;EAED,SAAOA,KAAP;EACD,CAhBD;;EAkBA,MAAMU,cAAe0E,QAAD,IAAc,CAAC3F,MAAD,EAAS4F,QAAT,KAAsB;EACtD,QAAMrF,QAAQP,OAAO4F,QAAP,CAAd;;EAEA,MAAIA,aAAa1C,QAAjB,EAA2B;EACzB,WAAO3C,KAAP;EACA;;;;EAID,GAND,MAMO,IAAIqF,aAAaT,UAAjB,EAA6B;EAClC,WAAOnF,MAAP;EACD;;EAED,QAAM4D,OAAOF,cAAc1D,MAAd,CAAb;EACA,QAAM,EAAEY,KAAF,EAAS0C,MAAT,EAAiBD,OAAjB,KAA6BO,IAAnC;;EAEA,MAAIP,QAAQpC,WAAZ,EAAyB;EACvBoC,YAAQpC,WAAR,CAAoBjB,MAApB,EAA4B4F,QAA5B,EAAsCrF,KAAtC,EAA6C+C,MAA7C,EAAqD1C,KAArD;EACD;;EAED,MAAI,CAAC2E,cAAchF,KAAd,CAAD,IAAyBiF,cAAcjF,KAAd,CAA7B,EAAmD;EACjD,WAAOA,KAAP;EACD;;EAED,SAAOmF,kBAAkBC,QAAlB,EAA4B3F,MAA5B,EAAoC4F,QAApC,EAA8CrF,KAA9C,CAAP;EACD,CAzBD;;EChBA,MAAMuF,uBAAuB,CAAC9F,MAAD,EAAS4F,QAAT,EAAmBrF,KAAnB,KAA6B;EACxD,MAAIqF,aAAa1C,QAAjB,EAA2B;EACzB,QAAIU,OAAOF,cAAc1D,MAAd,CAAX;EACA,QAAI4D,QAAQrD,KAAR,IAAiBqD,SAASrD,KAA9B,EAAqC;EACnCqD,aAAOO,gBAAgBP,IAAhB,EAAsBrD,KAAtB,CAAP;EACD,KAFD,MAEO;EACLqD,aAAOrD,KAAP;EACD;;EAEDP,WAAO4F,QAAP,IAAmBhC,IAAnB;EACA,WAAO,IAAP;EACD,GAVD,MAUO,IAAI,CAAC2B,cAAchF,KAAd,CAAL,EAA2B;EAChCP,WAAO4F,QAAP,IAAmBrF,KAAnB;EACA,WAAO,IAAP;EACD;;EAED,SAAO,KAAP;EACD,CAjBD;;EAmBA,MAAMwF,oBAAoB,CAACJ,QAAD,EAAW3F,MAAX,EAAmB4F,QAAnB,EAA6BrF,KAA7B,KAAuC;EAC/D,MAAIyF,OAAYlB,qBAAhB,EAAuC;EACrC,UAAM,EAAEvB,IAAF,EAAQ3C,KAAR,EAAeyC,OAAf,EAAwBG,QAAxB,KAAqCE,cAAc1D,MAAd,CAA3C;;EAEA,QAAI,CAACwF,cAAcjF,KAAd,CAAL,EAA2B;EACzB,YAAM+D,YAAYG,aAAajB,QAAb,EAAuBoC,QAAvB,CAAlB;;EAEA,UAAItB,SAAJ,EAAe;EACb/D,gBAAQoF,SAASpF,KAAT,EAAgB,EAAEqD,MAAMU,SAAR,EAAhB,CAAR;EACD,OAFD,MAEO;EACL/D,gBAAQoF,SAASpF,KAAT,EAAgB,EAAEgD,IAAF,EAAQ3C,OAAO,CAAC,GAAGA,KAAJ,EAAWgF,QAAX,CAAf,EAAqCvC,OAArC,EAAhB,CAAR;EACD;EACF;;EAEDkB,uBAAmBf,QAAnB,EAA6BoC,QAA7B,EAAuCrF,KAAvC;EACD;;EAEDP,SAAO4F,QAAP,IAAmBrF,KAAnB;EACA,SAAO,IAAP;EACD,CAnBD;;EAqBA,MAAMW,cAAeyE,QAAD,IAAc,CAAC3F,MAAD,EAAS4F,QAAT,EAAmBrF,KAAnB,KAA6B;EAC7D,MAAIqF,aAAaT,UAAjB,EAA6B;EAC3B,UAAM,IAAIxC,KAAJ,CAAW,IAAGwC,UAAW,2CAAzB,CAAN;EACD;;EAED,QAAM,EAAEvE,KAAF,UAAS0C,SAAT,EAAiBD,OAAjB,KAA6BK,cAAc1D,MAAd,CAAnC;;EAEA,MAAIqD,QAAQnC,WAAZ,EAAyB;EACvBmC,YAAQnC,WAAR,CAAoBlB,MAApB,EAA4B4F,QAA5B,EAAsCrF,KAAtC,EAA6C+C,SAA7C,EAAqD1C,KAArD;EACD;;EAED,SAAOkF,qBAAqB9F,MAArB,EAA6B4F,QAA7B,EAAuCrF,KAAvC,KACFwF,kBAAkBJ,QAAlB,EAA4B3F,MAA5B,EAAoC4F,QAApC,EAA8CrF,KAA9C,CADL;EAED,CAbD;;EC1CA,MAAM0F,qBAAqB,CAACN,QAAD,EAAW3F,MAAX,EAAmBkG,aAAnB,KAAqC;EAC9D,MAAIF,OAAYnB,qBAAhB,EAAuC;EACrC,UAAM,EAAEtB,IAAF,EAAQ3C,KAAR,EAAeyC,OAAf,KAA2BK,cAAc1D,MAAd,CAAjC;EACA,UAAM,EAAEuB,MAAF,KAAa2E,aAAnB;EACA;EACA,SAAK,IAAIzE,QAAQ,CAAjB,EAAoBA,QAAQF,MAA5B,EAAoCE,OAApC,EAA6C;EAC3CyE,oBAAczE,KAAd,IAAuBkE,SACrBO,cAAczE,KAAd,CADqB,EAErB;EACE8B,YADF;EAEE3C,eAAO,CAAC,GAAGA,KAAJ,EAAWa,KAAX,CAFT;EAGE4B;EAHF,OAFqB,CAAvB;EAQD;EACF;;EAED,SAAO6C,aAAP;EACD,CAlBD;EAmBA,MAAMC,uBAAuB,CAACR,QAAD,EAAW3F,MAAX,EAAmB2B,WAAnB,KAAmC;EAC9D,MAAIqE,OAAYpB,wBAAhB,EAA0C;EACxC,UAAM,EAAErB,IAAF,EAAQ3C,KAAR,EAAeyC,OAAf,EAAwBG,QAAxB,KAAqCE,cAAc1D,MAAd,CAA3C;;EAEA,QAAI,CAACwF,cAAc7D,WAAd,CAAL,EAAiC;EAC/B,YAAM2C,YAAYG,aAAajB,QAAb,EAAuB3E,YAAvB,CAAlB;;EAEA,UAAIyF,SAAJ,EAAe;EACb3C,sBAAcgE,SAAShE,WAAT,EAAsB,EAAEiC,MAAMU,SAAR,EAAtB,CAAd;EACD,OAFD,MAEO;EACL3C,sBAAcgE,SAAShE,WAAT,EAAsB,EAAE4B,IAAF,EAAQ3C,OAAO,CAAC,GAAGA,KAAJ,CAAf,EAA2ByC,OAA3B,EAAtB,CAAd;EACD;EACF;;EAEDkB,uBAAmBf,QAAnB,EAA6B3E,YAA7B,EAA2C8C,WAA3C;EACD;;EAED,SAAOA,WAAP;EACD,CAlBD;;EAoBA,MAAMyE,eAAgBT,QAAD,IAAc,CAAC3F,MAAD,EAASqB,OAAT,EAAkB6E,aAAlB,KAAoC;EACrE,QAAMtC,OAAOF,cAAc1D,MAAd,CAAb;EACA,QAAM,EAAEY,KAAF,UAAS0C,SAAT,EAAiBD,OAAjB,KAA6BO,IAAnC;;EAEA,MAAIP,QAAQjC,SAAZ,EAAuB;EACrBiC,YAAQjC,SAAR,CAAkBpB,MAAlB,EAA0BqB,OAA1B,EAAmC6E,aAAnC,EAAkD5C,SAAlD,EAA0D1C,KAA1D;EACD;;EAEDsF,kBAAgBD,mBAAmBN,QAAnB,EAA6B3F,MAA7B,EAAqCkG,aAArC,CAAhB;;EAEA,QAAMG,SAASrG,OAAOsG,KAAP,CAAajF,OAAb,EAAsB6E,aAAtB,CAAf;;EAEA,MAAI7C,QAAQ1B,WAAZ,EAAyB;EACvB0B,YAAQ1B,WAAR,CAAoB3B,MAApB,EAA4BqB,OAA5B,EAAqCgF,MAArC,EAA6C/C,SAA7C,EAAqD1C,KAArD;EACD;;EAED,SAAOuF,qBAAqBR,QAArB,EAA+B3F,MAA/B,EAAuCqG,MAAvC,CAAP;EACD,CAjBD;;ECnCA,IAAIpF,aAAJ;EACA,IAAIC,aAAJ;EACA,IAAIkF,cAAJ;;EAEA,MAAMG,cAAevG,MAAD,IAAY,IAAIwG,KAAJ,CAC9BxG,MAD8B,EAE9B;EACEyG,OAAKxF,aADP;EAEEyF,OAAKxF;EAFP,CAF8B,CAAhC;;EAQA,MAAMyF,gBAAiB3G,MAAD,IAAY,IAAIwG,KAAJ,CAChCxG,MADgC,EAEhC;EACEsG,SAAOF,cADT;EAEEQ,aAAWR;EAFb,CAFgC,CAAlC;;AAQA,EAAO,MAAMS,gBAAiB7G,MAAD,IAAY;EACvC,MAAIA,kBAAkB6F,QAAtB,EAAgC;EAC9B,WAAOc,cAAc3G,MAAd,CAAP;EACD;;EAED,SAAOuG,YAAYvG,MAAZ,CAAP;EACD,CANM;;AAQP,EAAO,MAAM8G,wBAAwB,CAAC9G,MAAD,EAAS;EAC5CuD,SAAO,IADqC;EAE5C3C,UAAQ,EAFoC;EAG5C0C,WAAS,IAHmC;EAI5CE,aAAW,IAJiC;EAK5CH,YAAUxB,uBALkC;EAM5C+B,SAAO,IANqC;EAAA,IAO1C,EAPiC,KAO1BA,QAAQR,iBACjBC,OADiB,EAEjBA,QAAQtD,IAAR,CAAaC,MAAb,EAAqB4C,kBAArB,EAAyCU,MAAzC,CAFiB,EAGjBC,IAHiB,EAIjB3C,KAJiB,EAKjB6C,oBAAoBD,QAApB,CALiB,CAPZ;;EAeP,MAAMuD,SAAS,CAAC/G,MAAD,EAASgH,OAAT,KAAqB;EAClC,MAAI,CAACzB,cAAcvF,MAAd,CAAD,IAA0B,CAACgD,WAA3B,IAA0CwC,cAAcxF,MAAd,CAA9C,EAAqE;EACnE,WAAOA,MAAP;EACD;;EAED2D,gBACE3D,MADF,EAEE8G,sBAAsB9G,MAAtB,EAA8BgH,OAA9B,CAFF;;EAKA,SAAOH,cAAc7G,MAAd,CAAP;EACD,CAXD;;AAaAiB,kBAAcgG,YAAgBF,MAAhB,CAAd;AACA7F,kBAAcgG,YAAgBH,MAAhB,CAAd;AACAX,mBAAee,aAAiBJ,MAAjB,CAAf;;EC9DA,MAAMK,kBAAkB,CAACpH,MAAD,EAASgH,OAAT,KAAqB;EAC3C,QAAMpD,OAAOkD,sBAAsB9G,MAAtB,EAA8BgH,OAA9B,CAAb;EACA,QAAM,EAAEzD,IAAF,EAAQ3C,KAAR,EAAeyC,OAAf,EAAwBC,MAAxB,EAAgCE,QAAhC,KAA6CI,IAAnD;;EAEA1D,SAAOC,IAAP,CAAYH,MAAZ,EACGI,OADH,CACYjB,IAAD,IAAU;EACjB,UAAMoB,QAAQP,OAAOb,IAAP,CAAd;;EAEAkE,YAAQpC,WAAR,CAAoBjB,MAApB,EAA4Bb,IAA5B,EAAkCoB,KAAlC,EAAyC+C,MAAzC,EAAiD1C,KAAjD;;EAEA;EACA,QAAI,OAAOL,KAAP,KAAiB,QAArB,EAA+B;EAC7B,UAAI+D,YAAYG,aAAajB,QAAb,EAAuBrE,IAAvB,CAAhB;;EAEA,UAAImF,SAAJ,EAAe;EACb8C,wBAAgB7G,KAAhB,EAAuB,EAAEqD,MAAMU,SAAR,EAAvB;EACD,OAFD,MAEO;EACLA,oBAAY8C,gBAAgB7G,KAAhB,EAAuB,EAAEgD,IAAF,EAAQ3C,OAAO,CAAC,GAAGA,KAAJ,EAAWzB,IAAX,CAAf,EAAiCkE,OAAjC,EAAvB,CAAZ;EACAe,uBAAeZ,QAAf,EAAyBrE,IAAzB,EAA+BmF,SAA/B;EACD;EACF;EACF,GAjBH;;EAmBAX,gBAAc3D,MAAd,EAAsB4D,IAAtB;;EAEA,SAAOA,IAAP;EACD,CA1BD;;EA4BA,MAAMyD,aAAa,CAACrH,MAAD,EAASgH,OAAT,KAAqB;EACtC,MAAI,CAAChH,MAAD,IAAW,OAAOA,MAAP,KAAkB,QAA7B,IAAyC,CAACgD,WAA1C,IAAyDwC,cAAcxF,MAAd,CAA7D,EAAoF;EAClF,WAAOA,MAAP;EACD;;EAEDoH,kBAAgBpH,MAAhB,EAAwBgH,OAAxB;;EAEA,SAAOH,cAAc7G,MAAd,CAAP;EACD,CARD;;EC5BA,MAAMsH,cAAc,CAACN,OAAD,EAAU,GAAGO,OAAb,KAAyB;EAC3C,MAAIvH,SAAS,EAAb;;EAEA,MAAIgD,WAAJ,EAAiB;EACf,QAAI,CAACgE,OAAL,EAAc;EACZA,gBAAU;EACRpD,cAAMF,cAAc6D,QAAQC,IAAR,CAAcC,IAAD,IAAU5D,cAAc4D,IAAd,CAAvB,CAAd,CADE;EAERlE,cAAM;EAFE,OAAV;EAID;;EAEDvD,aAAS+G,OAAO/G,MAAP,EAAegH,OAAf,CAAT;EACD;;EAED,SAAO9G,OAAO+E,MAAP,CAAcjF,MAAd,EAAsB,GAAGuH,OAAzB,CAAP;EACD,CAfD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}