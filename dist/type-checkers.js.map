{"version":3,"file":"type-checkers.js","sources":["../source/checkers/utils.js","../source/target/info.js","../source/checkers/primitive.js","../source/checkers/index.js","../source/reporters/utils.js","../source/reporters/console.js","../source/reporters/error.js","../source/reporters/index.js","../source/enabled.js","../source/proxy/config.js","../source/target/proxy.js","../source/utils.js","../source/proxy/getProperty.js","../source/proxy/setProperty.js","../source/proxy/callFunction.js","../source/proxy/create.js","../source/proxy/createDeep.js","../source/target/objectMerge.js"],"sourcesContent":["\nexport const GET_PROPERTY = 'GetProperty';\nexport const SET_PROPERTY = 'SetProperty';\nexport const ARGUMENTS = 'Arguments';\nexport const RETURN_VALUE = 'ReturnValue';\nexport const MERGE = 'Merge';\n\nexport const buildPath = sequence => sequence\n  .reduce((str, name) => {\n    if (String(parseInt(name, 10)) === name) {\n      str = `${str}[${name}]`;\n    } else if (/^[a-z][\\w$]*$/i.test(name)) {\n      str = str ? `${str}.${name}` : name;\n    } else {\n      str = `${str}[\"${name}\"]`;\n    }\n\n    return str;\n  }, '');\n","export const INFO_KEY = Symbol('type-checkers::info');\n\nexport const createTargetInfo = (\n  checker,\n  config,\n  deep = true,\n  names = [],\n  children = createChildrenCache(),\n) => ({\n  checker,\n  config,\n  deep,\n  names,\n  children,\n});\n\nexport const getTargetInfo = (target) => {\n  return target ? target[INFO_KEY] : undefined;\n};\n\nexport const setTargetInfo = (target, info) => {\n  if (target && info) {\n    target[INFO_KEY] = info;\n  }\n};\n\nexport const hasTargetInfo = (target) => !!getTargetInfo(target);\n\nexport const getTargetTypeChecker = (target) => {\n  return target && target[INFO_KEY] ? target[INFO_KEY].checker : undefined;\n};\n\nexport const getTargetTypeCheckerConfig = (target) =>\n  (target && target[INFO_KEY] ? target[INFO_KEY].config : undefined);\n\nexport const createChildrenCache = (children = {}) => ({ ...children });\n\nexport const mergeChildrenCache = (targetCache, sourceCache) => {\n  for (const name in sourceCache) {\n    if (targetCache.hasOwnProperty(name)) {\n      targetCache[name] = mergeTargetInfo(targetCache[name], sourceCache[name]);\n    } else {\n      targetCache[name] = sourceCache[name];\n    }\n  }\n\n  return targetCache;\n};\n\nexport const storeChildInfo = (cache, name, childInfo) => {\n  delete cache[name];\n\n  if (childInfo) {\n    cache[name] = childInfo;\n  }\n};\n\nexport const storeChildInfoFrom = (cache, name, child) => {\n  storeChildInfo(cache, name, getTargetInfo(child));\n};\n\nexport const getChildInfo = (cache, name) => cache[name];\n\nexport const hasChildInfo = (cache, name) => !!cache[name];\n\nexport const removeChildInfo = (cache, name) => delete cache[name];\n\nexport const mergeTargetInfo = (targetInfo, sourceInfo) => {\n  const { deep, checker, children, config, names } = targetInfo;\n\n  if (checker === sourceInfo.checker) {\n    targetInfo.deep = deep || sourceInfo.deep;\n    targetInfo.children = mergeChildrenCache(children, sourceInfo.children);\n    targetInfo.config = checker.mergeConfigs(config, sourceInfo.config, names);\n  } else {\n    console.error('TypeChecked objects can be merged only if using exactly same instance of type checker.');\n  }\n\n  return targetInfo;\n};\n","import {\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  MERGE,\n  buildPath,\n} from './utils';\n\nimport { getTargetTypeCheckerConfig } from '../target/info';\n\nconst checkPrimitiveType = (action, types, name, type, errorReporter, sequence) => {\n  if (!type) {\n    return true;\n  }\n\n  const storedType = types[name];\n\n  if (storedType) {\n    if (storedType !== type) {\n      errorReporter(action, buildPath([...sequence, name]), storedType, type);\n\n      return false;\n    }\n  } else {\n    types[name] = type;\n  }\n\n  return true;\n};\n\nconst PrimitiveTypeChecker = {\n  collectTypesOnInit: true,\n\n  init(target, errorReporter, cachedTypes = null) {\n    let types = {};\n\n    if (cachedTypes) {\n      types = cachedTypes;\n    } else if (this.collectTypesOnInit) {\n      Object.keys(target)\n        .forEach((key) => {\n          types[key] = this.getTypeString(target[key]);\n        });\n    }\n\n    return {\n      types,\n      errorReporter,\n    };\n  },\n\n  getTypeString(value) {\n    if (value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return 'array';\n    }\n\n    return typeof value;\n  },\n\n  mergeConfigs({ types, errorReporter }, source, names = []) {\n    const sourceTypes = source.types;\n\n    for (const name in sourceTypes) {\n      if (sourceTypes.hasOwnProperty(name)) {\n        const sourceType = sourceTypes[name];\n        const targetType = types[name];\n\n        if (sourceType && targetType && targetType !== sourceType) {\n          errorReporter(MERGE, buildPath([...names, name]), targetType, sourceType);\n        } else {\n          types[name] = sourceType;\n        }\n      }\n    }\n  },\n\n  replacePropertyTypeCheck(target, name, typeCheckFn) {\n    const { types } = getTargetTypeCheckerConfig(target);\n    delete types[name];\n\n    if (typeCheckFn) {\n      types[name] = typeCheckFn;\n    }\n  },\n\n  replaceArgumentsTypeCheck(target, name, argumentsTypeCheckFn) {\n    const { types } = getTargetTypeCheckerConfig(target);\n    delete types[ARGUMENTS];\n\n    if (argumentsTypeCheckFn) {\n      types[name] = argumentsTypeCheckFn;\n    }\n  },\n\n  replaceReturnValueTypeCheck(target, name, returnValueTypeCheckFn) {\n    const { types } = getTargetTypeCheckerConfig(target);\n    delete types[RETURN_VALUE];\n\n    if (returnValueTypeCheckFn) {\n      types[RETURN_VALUE] = returnValueTypeCheckFn;\n    }\n  },\n\n  getProperty(target, name, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[name];\n\n    if (typeFn instanceof Function) {\n      return typeFn(GET_PROPERTY, target, name, value, config, sequence);\n    }\n\n    const type = this.getTypeString(value);\n\n    return checkPrimitiveType(GET_PROPERTY, types, name, type, errorReporter, sequence);\n  },\n\n  setProperty(target, name, newValue, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[name];\n\n    if (typeFn instanceof Function) {\n      return typeFn(SET_PROPERTY, target, name, newValue, config, sequence);\n    }\n\n    const type = this.getTypeString(newValue);\n\n    return checkPrimitiveType(\n      SET_PROPERTY,\n      types,\n      name,\n      type,\n      errorReporter,\n      sequence,\n    );\n  },\n\n  arguments(target, thisArg, args, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[ARGUMENTS];\n\n    if (typeFn instanceof Function) {\n      return typeFn(ARGUMENTS, target, args, config, sequence);\n    }\n\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = this.getTypeString(args[index]);\n      const agrValid = checkPrimitiveType(\n        ARGUMENTS,\n        types,\n        String(index),\n        type,\n        errorReporter,\n        sequence,\n      );\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  },\n\n  returnValue(target, thisArg, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[RETURN_VALUE];\n\n    if (typeFn instanceof Function) {\n      return typeFn(ARGUMENTS, target, value, config, sequence);\n    }\n\n    const type = this.getTypeString(value);\n\n    return checkPrimitiveType(\n      RETURN_VALUE,\n      types,\n      RETURN_VALUE,\n      type,\n      errorReporter,\n      sequence,\n    );\n  },\n};\n\nexport default PrimitiveTypeChecker;\n","import PrimitiveTypeChecker from './primitive';\n\nlet defaultTypeChecker = PrimitiveTypeChecker;\n\nexport const getDefaultTypeChecker = () => defaultTypeChecker;\nexport const setDefaultTypeChecker = (typeChecker) => {\n  defaultTypeChecker = typeChecker;\n};\n","export const constructErrorString = (action, name, required, actual) =>\n  `${action}Error on \"${name}\" instead of \"${required}\" received \"${actual}\"`;\n","import { constructErrorString } from './utils';\n\nexport const ConsoleErrorReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\nexport const ConsoleWarnReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.warn(constructErrorString(action, name, requiredTypeString, actualTypeString));\n","import { constructErrorString } from './utils';\n\nexport const ThrowErrorReporter = (action, name, requiredTypeString, actualTypeString) => {\n  throw new Error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n};\n","import { ConsoleErrorReporter } from './console';\n\nlet errorReporter = ConsoleErrorReporter;\n\nexport const getErrorReporter = () => errorReporter;\n\nexport const setErrorReporter = (reporter) => errorReporter = reporter;\n","let enabled = true;\n\nexport const isEnabled = () => enabled;\nexport const setEnabled = (value = true) => enabled = !!value;\n","export const config = {\n  wrapFunctionReturnValues: true,\n  wrapFunctionArguments: false,\n  wrapSetPropertyValues: true,\n};\n\nexport const setProxyConfig = (newConfig) => Object.assign(config, newConfig);\n\nexport const getProxyConfig = () => ({ ...config });\n","export const TARGET_KEY = Symbol('type-checkers::target');\n\nexport const getOriginalTarget = (target) => {\n  return target[TARGET_KEY] || target;\n};","import { TARGET_KEY } from './target/proxy';\n\nconst validTypes = {\n  object: true,\n  function: true,\n};\n\nexport const isValidTarget = (target) => target && validTypes[typeof target];\nexport const isTypeChecked = (target) => Boolean(target && target[TARGET_KEY]);","import {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n} from '../target/info';\nimport { TARGET_KEY } from '../target/proxy';\nimport { isValidTarget, isTypeChecked } from '../utils';\n\nconst getTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, children, names, checker } = info;\n\n  if (deep || value instanceof Function) {\n    const childInfo = getChildInfo(children, property);\n\n    if (childInfo) {\n      value = createFn(value, { info: childInfo });\n    } else {\n      value = createFn(value, { deep, names: [...names, property], checker });\n      storeChildInfoFrom(children, property, value);\n    }\n  }\n\n  return value;\n};\n\nconst getProperty = (createFn) => (target, property) => {\n  const value = target[property];\n\n  if (property === INFO_KEY) {\n    return value;\n    /*\n    target[TARGET_KEY] is a virtual property accessing which indicates\n    if object is wrapped with type checked proxy or not.\n    */\n  } else if (property === TARGET_KEY) {\n    return target;\n  }\n\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.getProperty) {\n    checker.getProperty(target, property, value, config, names);\n  }\n\n  if (!isValidTarget(value) || isTypeChecked(value)) {\n    return value;\n  }\n\n  return getTargetProperty(createFn, target, property, value);\n};\n\nexport default getProperty;\n","import {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n  mergeTargetInfo,\n} from '../target/info';\nimport { TARGET_KEY } from '../target/proxy';\nimport { config as proxyConfig } from './config';\nimport { isValidTarget, isTypeChecked } from '../utils';\n\nconst setNonTargetProperty = (target, property, value) => {\n  if (property === INFO_KEY) {\n    let info = getTargetInfo(target);\n    if (info && value && info !== value) {\n      info = mergeTargetInfo(info, value);\n    } else {\n      info = value;\n    }\n\n    target[property] = info;\n    return true;\n  } else if (!isValidTarget(value)) {\n    target[property] = value;\n    return true;\n  }\n\n  return false;\n};\n\nconst setTargetProperty = (createFn, target, property, value) => {\n  if (proxyConfig.wrapSetPropertyValues) {\n    const { deep, names, checker, children } = getTargetInfo(target);\n\n    if (!isTypeChecked(value)) {\n      const childInfo = getChildInfo(children, property);\n\n      if (childInfo) {\n        value = createFn(value, { info: childInfo });\n      } else {\n        value = createFn(value, { deep, names: [...names, property], checker });\n      }\n    }\n\n    storeChildInfoFrom(children, property, value);\n  }\n\n  target[property] = value;\n  return true;\n};\n\nconst setProperty = (createFn) => (target, property, value) => {\n  if (property === TARGET_KEY) {\n    throw new Error(`\"${TARGET_KEY}\" is a virtual property and cannot be set`);\n  }\n\n  const { names, config, checker } = getTargetInfo(target);\n\n  if (checker.setProperty) {\n    checker.setProperty(target, property, value, config, names);\n  }\n\n  return setNonTargetProperty(target, property, value)\n    || setTargetProperty(createFn, target, property, value);\n};\n\nexport default setProperty;\n","import {\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n} from '../target/info';\nimport { config as proxyConfig } from './config';\nimport { isTypeChecked } from '../utils';\nimport { RETURN_VALUE } from '../checkers/utils';\n\nconst getTargetArguments = (createFn, target, argumentsList) => {\n  if (proxyConfig.wrapFunctionArguments) {\n    const { deep, names, checker } = getTargetInfo(target);\n    const { length } = argumentsList;\n    // FIXME cache arguments info objects as children\n    for (let index = 0; index < length; index++) {\n      argumentsList[index] = createFn(\n        argumentsList[index],\n        {\n          deep,\n          names: [...names, index],\n          checker,\n        },\n      );\n    }\n  }\n\n  return argumentsList;\n};\nconst getTargetReturnValue = (createFn, target, returnValue) => {\n  if (proxyConfig.wrapFunctionReturnValues) {\n    const { deep, names, checker, children } = getTargetInfo(target);\n\n    if (!isTypeChecked(returnValue)) {\n      const childInfo = getChildInfo(children, RETURN_VALUE);\n\n      if (childInfo) {\n        returnValue = createFn(returnValue, { info: childInfo });\n      } else {\n        returnValue = createFn(returnValue, { deep, names: [...names], checker });\n      }\n    }\n\n    storeChildInfoFrom(children, RETURN_VALUE, returnValue);\n  }\n\n  return returnValue;\n};\n\nconst callFunction = (createFn) => (target, thisArg, argumentsList) => {\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.arguments) {\n    checker.arguments(target, thisArg, argumentsList, config, names);\n  }\n\n  argumentsList = getTargetArguments(createFn, target, argumentsList);\n\n  const result = target.apply(thisArg, argumentsList);\n\n  if (checker.returnValue) {\n    checker.returnValue(target, thisArg, result, config, names);\n  }\n\n  return getTargetReturnValue(createFn, target, result);\n};\n\nexport default callFunction;\n","import { getDefaultTypeChecker } from '../checkers';\nimport { getErrorReporter } from '../reporters';\nimport { isEnabled } from '../enabled';\nimport {\n  createTargetInfo,\n  setTargetInfo,\n  createChildrenCache,\n} from '../target/info';\nimport { isValidTarget, isTypeChecked } from '../utils';\nimport getPropertyInit from './getProperty';\nimport setPropertyInit from './setProperty';\nimport callFunctionInit from './callFunction';\n\nlet getProperty;\nlet setProperty;\nlet callFunction;\n\nconst objectProxy = (target) => new Proxy(\n  target,\n  {\n    get: getProperty,\n    set: setProperty,\n  },\n);\n\nconst functionProxy = (target) => new Proxy(\n  target,\n  {\n    apply: callFunction,\n    construct: callFunction,\n  },\n);\n\nexport const wrapWithProxy = (target) => {\n  if (target instanceof Function) {\n    return functionProxy(target);\n  }\n\n  return objectProxy(target);\n};\n\nexport const createInfoFromOptions = (target, {\n  deep = true,\n  names = [],\n  config = null,\n  children = null,\n  checker = getDefaultTypeChecker(),\n  info = null, // exclusive option, if set other options being ignored\n} = {}) => info || createTargetInfo(\n  checker,\n  checker.init(target, getErrorReporter(), config),\n  deep,\n  names,\n  createChildrenCache(children),\n);\n\nconst create = (target, options) => {\n  if (!isValidTarget(target) || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  setTargetInfo(\n    target,\n    createInfoFromOptions(target, options),\n  );\n\n  return wrapWithProxy(target);\n};\n\ngetProperty = getPropertyInit(create);\nsetProperty = setPropertyInit(create);\ncallFunction = callFunctionInit(create);\n\nexport default create;\n","import { isEnabled } from '../enabled';\nimport {\n  setTargetInfo,\n  storeChildInfo,\n  getChildInfo,\n} from '../target/info';\nimport { isTypeChecked } from '../utils';\nimport { wrapWithProxy, createInfoFromOptions } from './create';\n\nconst deepInitializer = (target, options) => {\n  const info = createInfoFromOptions(target, options);\n  const { deep, names, checker, config, children } = info;\n\n  Object.keys(target)\n    .forEach((name) => {\n      const value = target[name];\n\n      checker.getProperty(target, name, value, config, names);\n\n      // skip functions/methods since we get info about them only when being executed\n      if (typeof value === 'object') {\n        let childInfo = getChildInfo(children, name);\n\n        if (childInfo) {\n          deepInitializer(value, { info: childInfo });\n        } else {\n          childInfo = deepInitializer(value, { deep, names: [...names, name], checker });\n          storeChildInfo(children, name, childInfo);\n        }\n      }\n    });\n\n  setTargetInfo(target, info);\n\n  return info;\n};\n\nconst createDeep = (target, options) => {\n  if (!target || typeof target !== 'object' || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  deepInitializer(target, options);\n\n  return wrapWithProxy(target);\n};\n\nexport default createDeep;\n","import {\n  getTargetInfo,\n  hasTargetInfo,\n} from './info';\n\nimport { create } from '../proxy';\n\nimport { isEnabled } from '../enabled';\n\nconst objectMerge = (options, ...sources) => {\n  let target = {};\n\n  if (isEnabled()) {\n    if (!options) {\n      options = {\n        info: getTargetInfo(sources.find((item) => hasTargetInfo(item))),\n        deep: false,\n      };\n    }\n\n    target = create(target, options);\n  }\n\n  return Object.assign(target, ...sources);\n};\n\nexport default objectMerge;\n"],"names":["GET_PROPERTY","SET_PROPERTY","ARGUMENTS","RETURN_VALUE","MERGE","buildPath","sequence","reduce","str","name","String","parseInt","test","INFO_KEY","Symbol","createTargetInfo","checker","config","deep","names","children","createChildrenCache","getTargetInfo","target","undefined","setTargetInfo","info","hasTargetInfo","getTargetTypeChecker","getTargetTypeCheckerConfig","mergeChildrenCache","targetCache","sourceCache","hasOwnProperty","mergeTargetInfo","storeChildInfo","cache","childInfo","storeChildInfoFrom","child","getChildInfo","targetInfo","sourceInfo","mergeConfigs","console","error","checkPrimitiveType","action","types","type","errorReporter","storedType","PrimitiveTypeChecker","collectTypesOnInit","init","cachedTypes","Object","keys","forEach","key","getTypeString","value","Array","source","sourceTypes","sourceType","targetType","replacePropertyTypeCheck","typeCheckFn","replaceArgumentsTypeCheck","argumentsTypeCheckFn","replaceReturnValueTypeCheck","returnValueTypeCheckFn","getProperty","typeFn","Function","setProperty","newValue","arguments","thisArg","args","length","valid","index","agrValid","returnValue","defaultTypeChecker","getDefaultTypeChecker","setDefaultTypeChecker","typeChecker","constructErrorString","required","actual","ConsoleErrorReporter","requiredTypeString","actualTypeString","ConsoleWarnReporter","warn","ThrowErrorReporter","Error","getErrorReporter","setErrorReporter","reporter","enabled","isEnabled","setEnabled","wrapFunctionReturnValues","wrapFunctionArguments","wrapSetPropertyValues","setProxyConfig","newConfig","assign","getProxyConfig","TARGET_KEY","validTypes","object","function","isValidTarget","isTypeChecked","Boolean","getTargetProperty","createFn","property","setNonTargetProperty","setTargetProperty","proxyConfig","getTargetArguments","argumentsList","getTargetReturnValue","callFunction","result","apply","objectProxy","Proxy","get","set","functionProxy","construct","wrapWithProxy","createInfoFromOptions","create","options","getPropertyInit","setPropertyInit","callFunctionInit","deepInitializer","createDeep","objectMerge","sources","find","item"],"mappings":"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"}