{"version":3,"file":"type-checkers.js","sources":["../source/checkers/utils.js","../source/target/info.js","../source/checkers/primitive.js","../source/checkers/index.js","../source/reporters/utils.js","../source/reporters/console.js","../source/reporters/error.js","../source/reporters/index.js","../source/enabled.js","../source/proxy/config.js","../source/target/proxy.js","../source/utils.js","../source/proxy/getProperty.js","../source/proxy/setProperty.js","../source/proxy/callFunction.js","../source/proxy/create.js","../source/proxy/createDeep.js","../source/target/objectMerge.js"],"sourcesContent":["\nexport const GET_PROPERTY = 'GetProperty';\nexport const SET_PROPERTY = 'SetProperty';\nexport const INDEX = 'Index';\nexport const ARGUMENTS = 'Arguments';\nexport const RETURN_VALUE = 'ReturnValue';\nexport const MERGE = 'Merge';\n\nexport const buildPath = (sequence) => sequence\n  .reduce((str, name) => {\n    if (String(parseInt(name, 10)) === name) {\n      str = `${str}[${name}]`;\n    } else if (/^[a-z][\\w$]*$/i.test(name)) {\n      str = str ? `${str}.${name}` : name;\n    } else {\n      str = `${str}[\"${name}\"]`;\n    }\n\n    return str;\n  }, '');\n","export const INFO_KEY = Symbol('type-checkers::info');\n\nexport const createTargetInfo = (\n  checker,\n  config,\n  deep = true,\n  names = [],\n  children = createChildrenCache(),\n) => ({\n  checker,\n  config,\n  deep,\n  names,\n  children,\n});\n\nexport const getTargetInfo = (target) => (target ? target[INFO_KEY] : undefined);\n\nexport const setTargetInfo = (target, info) => {\n  if (target && info) {\n    target[INFO_KEY] = info;\n  }\n};\n\nexport const hasTargetInfo = (target) => !!getTargetInfo(target);\n\nexport const getTargetTypeChecker = (target) =>\n  (target && target[INFO_KEY] ? target[INFO_KEY].checker : undefined);\n\nexport const getTargetTypeCheckerConfig = (target) =>\n  (target && target[INFO_KEY] ? target[INFO_KEY].config : undefined);\n\nexport const createChildrenCache = (children = {}) => ({ ...children });\n\nexport const mergeChildrenCache = (targetCache, sourceCache) => {\n  for (const name in sourceCache) {\n    if (targetCache.hasOwnProperty(name)) {\n      targetCache[name] = mergeTargetInfo(targetCache[name], sourceCache[name]);\n    } else {\n      targetCache[name] = sourceCache[name];\n    }\n  }\n\n  return targetCache;\n};\n\nexport const storeChildInfo = (cache, name, childInfo) => {\n  delete cache[name];\n\n  if (childInfo) {\n    cache[name] = childInfo;\n  }\n};\n\nexport const storeChildInfoFrom = (cache, name, child) => {\n  storeChildInfo(cache, name, getTargetInfo(child));\n};\n\nexport const getChildInfo = (cache, name) => cache[name];\n\nexport const hasChildInfo = (cache, name) => !!cache[name];\n\nexport const removeChildInfo = (cache, name) => delete cache[name];\n\nexport const mergeTargetInfo = (targetInfo, sourceInfo) => {\n  const { deep, checker, children, config, names } = targetInfo;\n\n  if (checker === sourceInfo.checker) {\n    targetInfo.deep = deep || sourceInfo.deep;\n    targetInfo.children = mergeChildrenCache(children, sourceInfo.children);\n    targetInfo.config = checker.mergeConfigs(config, sourceInfo.config, names);\n  } else {\n    console.error('TypeChecked objects can be merged only if using exactly same instance of type checker.');\n  }\n\n  return targetInfo;\n};\n","import {\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  INDEX,\n  MERGE,\n  buildPath,\n} from './utils';\n\nimport { getTargetTypeCheckerConfig } from '../target/info';\n\nconst checkPrimitiveType = (action, types, name, type, errorReporter, sequence) => {\n  if (!type) {\n    return true;\n  }\n\n  const storedType = types[name];\n\n  if (storedType) {\n    if (storedType !== type) {\n      errorReporter(action, buildPath([...sequence, name]), storedType, type);\n\n      return false;\n    }\n  } else {\n    types[name] = type;\n  }\n\n  return true;\n};\n\nconst indexBasedClasses = [Array];\n\nexport const isIndexAccessTarget = (target) =>\n  (target && indexBasedClasses.indexOf(target.constructor) >= 0);\n\nexport const getTypeString = (value) => {\n  if (value === undefined) {\n    return '';\n  } else if (value instanceof Array) {\n    return 'array';\n  }\n\n  return typeof value;\n};\n\nexport const mergeConfigs = ({ types, errorReporter }, source, names = []) => {\n  const sourceTypes = source.types;\n\n  for (const name in sourceTypes) {\n    if (sourceTypes.hasOwnProperty(name)) {\n      const sourceType = sourceTypes[name];\n      const targetType = types[name];\n\n      if (sourceType && targetType && targetType !== sourceType) {\n        errorReporter(MERGE, buildPath([...names, name]), targetType, sourceType);\n      } else {\n        types[name] = sourceType;\n      }\n    }\n  }\n};\n\nexport const replacePropertyTypeCheck = (target, name, typeCheckFn) => {\n  const { types } = getTargetTypeCheckerConfig(target);\n  delete types[name];\n\n  if (typeCheckFn) {\n    types[name] = typeCheckFn;\n  }\n};\n\nexport const replaceArgumentsTypeCheck = (target, name, argumentsTypeCheckFn) => {\n  const { types } = getTargetTypeCheckerConfig(target);\n  delete types[ARGUMENTS];\n\n  if (argumentsTypeCheckFn) {\n    types[name] = argumentsTypeCheckFn;\n  }\n};\n\nexport const replaceReturnValueTypeCheck = (target, name, returnValueTypeCheckFn) => {\n  const { types } = getTargetTypeCheckerConfig(target);\n  delete types[RETURN_VALUE];\n\n  if (returnValueTypeCheckFn) {\n    types[RETURN_VALUE] = returnValueTypeCheckFn;\n  }\n};\n\nexport const registerIndexBasedClass = (constructor) => {\n  indexBasedClasses.push(constructor);\n};\n\nexport const setIndexValueTypeBy = (target, value) => {\n  const config = getTargetTypeCheckerConfig(target);\n  if (config) {\n    config.types[INDEX] = getTypeString(value);\n  }\n};\n\nexport const replaceIndexedTypeCheck = (target, typeCheckFn) => {\n  const { types } = getTargetTypeCheckerConfig(target);\n  delete types[INDEX];\n\n  if (typeCheckFn) {\n    types[INDEX] = typeCheckFn;\n  }\n};\n\nconst PrimitiveTypeChecker = {\n  collectTypesOnInit: true,\n  areArrayElementsOfSameType: true,\n\n  init(target, errorReporter, cachedTypes = null) {\n    let types = {};\n\n    if (cachedTypes) {\n      types = cachedTypes;\n    } else if (this.collectTypesOnInit) {\n      Object.keys(target)\n        .forEach((key) => {\n          types[key] = getTypeString(target[key]);\n        });\n    }\n\n    return {\n      types,\n      errorReporter,\n    };\n  },\n\n  getProperty(target, name, value, config, sequence) {\n    if (this.areArrayElementsOfSameType && isIndexAccessTarget(target)) {\n      return this.getIndexProperty(target, name, value, config, sequence);\n    }\n\n    return this.getNamedProperty(target, name, value, config, sequence);\n  },\n\n  getIndexProperty(target, name, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[name];\n\n    if (typeFn instanceof Function) {\n      return typeFn(GET_PROPERTY, target, name, value, config, sequence);\n    }\n\n    const type = getTypeString(value);\n\n    return checkPrimitiveType(GET_PROPERTY, types, INDEX, type, errorReporter, sequence);\n  },\n\n  getNamedProperty(target, name, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[name];\n\n    if (typeFn instanceof Function) {\n      return typeFn(GET_PROPERTY, target, name, value, config, sequence);\n    }\n\n    const type = getTypeString(value);\n\n    return checkPrimitiveType(GET_PROPERTY, types, name, type, errorReporter, sequence);\n  },\n\n  setProperty(target, name, newValue, config, sequence) {\n    if (this.areArrayElementsOfSameType && isIndexAccessTarget(target)) {\n      return this.setIndexProperty(target, name, newValue, config, sequence);\n    }\n\n    return this.setNamedProperty(target, name, newValue, config, sequence);\n  },\n\n  setIndexProperty(target, name, newValue, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[name];\n\n    if (typeFn instanceof Function) {\n      return typeFn(SET_PROPERTY, target, name, newValue, config, sequence);\n    }\n\n    const type = getTypeString(newValue);\n\n    return checkPrimitiveType(SET_PROPERTY, types, INDEX, type, errorReporter, sequence);\n  },\n\n  setNamedProperty(target, name, newValue, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[name];\n\n    if (typeFn instanceof Function) {\n      return typeFn(SET_PROPERTY, target, name, newValue, config, sequence);\n    }\n\n    const type = getTypeString(newValue);\n\n    return checkPrimitiveType(SET_PROPERTY, types, name, type, errorReporter, sequence);\n  },\n\n  arguments(target, thisArg, args, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[ARGUMENTS];\n\n    if (typeFn instanceof Function) {\n      return typeFn(ARGUMENTS, target, args, config, sequence);\n    }\n\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = getTypeString(args[index]);\n      const agrValid = checkPrimitiveType(ARGUMENTS, types, String(index), type, errorReporter, sequence);\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  },\n\n  returnValue(target, thisArg, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const typeFn = types[RETURN_VALUE];\n\n    if (typeFn instanceof Function) {\n      return typeFn(ARGUMENTS, target, value, config, sequence);\n    }\n\n    const type = getTypeString(value);\n\n    return checkPrimitiveType(RETURN_VALUE, types, RETURN_VALUE, type, errorReporter, sequence);\n  },\n\n  isIndexAccessTarget,\n  getTypeString,\n  mergeConfigs,\n  replacePropertyTypeCheck,\n  replaceArgumentsTypeCheck,\n  replaceReturnValueTypeCheck,\n  registerIndexBasedClass,\n  setIndexValueTypeBy,\n  replaceIndexedTypeCheck,\n};\n\nexport default PrimitiveTypeChecker;\n","import PrimitiveTypeChecker from './primitive';\n\nlet defaultTypeChecker = PrimitiveTypeChecker;\n\nexport const getDefaultTypeChecker = () => defaultTypeChecker;\nexport const setDefaultTypeChecker = (typeChecker) => {\n  defaultTypeChecker = typeChecker;\n};\n","export const constructErrorString = (action, name, required, actual) =>\n  `${action}Error on \"${name}\" instead of \"${required}\" received \"${actual}\"`;\n","import { constructErrorString } from './utils';\n\nexport const ConsoleErrorReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\nexport const ConsoleWarnReporter = (action, name, requiredTypeString, actualTypeString) =>\n  console.warn(constructErrorString(action, name, requiredTypeString, actualTypeString));\n","import { constructErrorString } from './utils';\n\nexport const ThrowErrorReporter = (action, name, requiredTypeString, actualTypeString) => {\n  throw new Error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n};\n","import { ConsoleErrorReporter } from './console';\n\nlet errorReporter = ConsoleErrorReporter;\n\nexport const getErrorReporter = () => errorReporter;\n\nexport const setErrorReporter = (reporter) => errorReporter = reporter;\n","let enabled = true;\n\nexport const isEnabled = () => enabled;\nexport const setEnabled = (value = true) => enabled = !!value;\n","export const config = {\n  wrapFunctionReturnValues: true,\n  wrapFunctionArguments: false,\n  wrapSetPropertyValues: true,\n};\n\nexport const setProxyConfig = (newConfig) => Object.assign(config, newConfig);\n\nexport const getProxyConfig = () => ({ ...config });\n","export const TARGET_KEY = Symbol('type-checkers::target');\n\nexport const getOriginalTarget = (target) => {\n  return target[TARGET_KEY] || target;\n};\n","import { TARGET_KEY } from './target/proxy';\n\nconst validTypes = {\n  object: true,\n  function: true,\n};\n\nexport const isValidTarget = (target) => target && validTypes[typeof target];\nexport const isTypeChecked = (target) => Boolean(target && target[TARGET_KEY]);","import {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n} from '../target/info';\nimport { TARGET_KEY } from '../target/proxy';\nimport { isValidTarget, isTypeChecked } from '../utils';\n\nconst getTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, children, names, checker } = info;\n\n  if (deep || value instanceof Function) {\n    const childInfo = getChildInfo(children, property);\n\n    if (childInfo) {\n      value = createFn(value, { info: childInfo });\n    } else {\n      value = createFn(value, { deep, names: [...names, property], checker });\n      storeChildInfoFrom(children, property, value);\n    }\n  }\n\n  return value;\n};\n\nconst getProperty = (createFn) => (target, property) => {\n  const value = target[property];\n\n  if (property === INFO_KEY) {\n    return value;\n    /*\n    target[TARGET_KEY] is a virtual property accessing which indicates\n    if object is wrapped with type checked proxy or not.\n    */\n  } else if (property === TARGET_KEY) {\n    return target;\n  }\n\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.getProperty) {\n    checker.getProperty(target, property, value, config, names);\n  }\n\n  if (!isValidTarget(value) || isTypeChecked(value)) {\n    return value;\n  }\n\n  return getTargetProperty(createFn, target, property, value);\n};\n\nexport default getProperty;\n","import {\n  INFO_KEY,\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n  mergeTargetInfo,\n} from '../target/info';\nimport { TARGET_KEY } from '../target/proxy';\nimport { config as proxyConfig } from './config';\nimport { isValidTarget, isTypeChecked } from '../utils';\n\nconst setNonTargetProperty = (target, property, value) => {\n  if (property === INFO_KEY) {\n    let info = getTargetInfo(target);\n    if (info && value && info !== value) {\n      info = mergeTargetInfo(info, value);\n    } else {\n      info = value;\n    }\n\n    target[property] = info;\n    return true;\n  } else if (!isValidTarget(value)) {\n    target[property] = value;\n    return true;\n  }\n\n  return false;\n};\n\nconst setTargetProperty = (createFn, target, property, value) => {\n  if (proxyConfig.wrapSetPropertyValues) {\n    const { deep, names, checker, children } = getTargetInfo(target);\n\n    if (!isTypeChecked(value)) {\n      const childInfo = getChildInfo(children, property);\n\n      if (childInfo) {\n        value = createFn(value, { info: childInfo });\n      } else {\n        value = createFn(value, { deep, names: [...names, property], checker });\n      }\n    }\n\n    storeChildInfoFrom(children, property, value);\n  }\n\n  target[property] = value;\n  return true;\n};\n\nconst setProperty = (createFn) => (target, property, value) => {\n  if (property === TARGET_KEY) {\n    throw new Error(`\"${TARGET_KEY}\" is a virtual property and cannot be set`);\n  }\n\n  const { names, config, checker } = getTargetInfo(target);\n\n  if (checker.setProperty) {\n    checker.setProperty(target, property, value, config, names);\n  }\n\n  return setNonTargetProperty(target, property, value)\n    || setTargetProperty(createFn, target, property, value);\n};\n\nexport default setProperty;\n","import {\n  getTargetInfo,\n  getChildInfo,\n  storeChildInfoFrom,\n} from '../target/info';\nimport { config as proxyConfig } from './config';\nimport { isTypeChecked } from '../utils';\nimport { RETURN_VALUE } from '../checkers/utils';\n\nconst getTargetArguments = (createFn, target, argumentsList) => {\n  if (proxyConfig.wrapFunctionArguments) {\n    const { deep, names, checker } = getTargetInfo(target);\n    const { length } = argumentsList;\n    // FIXME cache arguments info objects as children\n    for (let index = 0; index < length; index++) {\n      argumentsList[index] = createFn(\n        argumentsList[index],\n        {\n          deep,\n          names: [...names, index],\n          checker,\n        },\n      );\n    }\n  }\n\n  return argumentsList;\n};\nconst getTargetReturnValue = (createFn, target, returnValue) => {\n  if (proxyConfig.wrapFunctionReturnValues) {\n    const { deep, names, checker, children } = getTargetInfo(target);\n\n    if (!isTypeChecked(returnValue)) {\n      const childInfo = getChildInfo(children, RETURN_VALUE);\n\n      if (childInfo) {\n        returnValue = createFn(returnValue, { info: childInfo });\n      } else {\n        returnValue = createFn(returnValue, { deep, names: [...names], checker });\n      }\n    }\n\n    storeChildInfoFrom(children, RETURN_VALUE, returnValue);\n  }\n\n  return returnValue;\n};\n\nconst callFunction = (createFn) => (target, thisArg, argumentsList) => {\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.arguments) {\n    checker.arguments(target, thisArg, argumentsList, config, names);\n  }\n\n  argumentsList = getTargetArguments(createFn, target, argumentsList);\n\n  const result = target.apply(thisArg, argumentsList);\n\n  if (checker.returnValue) {\n    checker.returnValue(target, thisArg, result, config, names);\n  }\n\n  return getTargetReturnValue(createFn, target, result);\n};\n\nexport default callFunction;\n","import { getDefaultTypeChecker } from '../checkers';\nimport { getErrorReporter } from '../reporters';\nimport { isEnabled } from '../enabled';\nimport {\n  createTargetInfo,\n  setTargetInfo,\n  createChildrenCache,\n} from '../target/info';\nimport { isValidTarget, isTypeChecked } from '../utils';\nimport getPropertyInit from './getProperty';\nimport setPropertyInit from './setProperty';\nimport callFunctionInit from './callFunction';\n\nlet getProperty;\nlet setProperty;\nlet callFunction;\n\nconst objectProxy = (target) => new Proxy(\n  target,\n  {\n    get: getProperty,\n    set: setProperty,\n  },\n);\n\nconst functionProxy = (target) => new Proxy(\n  target,\n  {\n    apply: callFunction,\n    construct: callFunction,\n  },\n);\n\nexport const wrapWithProxy = (target) => {\n  if (target instanceof Function) {\n    return functionProxy(target);\n  }\n\n  return objectProxy(target);\n};\n\nexport const createInfoFromOptions = (target, {\n  deep = true,\n  names = [],\n  config = null,\n  children = null,\n  checker = getDefaultTypeChecker(),\n  info = null, // exclusive option, if set other options being ignored\n} = {}) => info || createTargetInfo(\n  checker,\n  checker.init(target, getErrorReporter(), config),\n  deep,\n  names,\n  createChildrenCache(children),\n);\n\nconst create = (target, options) => {\n  if (!isValidTarget(target) || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  setTargetInfo(\n    target,\n    createInfoFromOptions(target, options),\n  );\n\n  return wrapWithProxy(target);\n};\n\ngetProperty = getPropertyInit(create);\nsetProperty = setPropertyInit(create);\ncallFunction = callFunctionInit(create);\n\nexport default create;\n","import { isEnabled } from '../enabled';\nimport {\n  setTargetInfo,\n  storeChildInfo,\n  getChildInfo,\n} from '../target/info';\nimport { isTypeChecked } from '../utils';\nimport { wrapWithProxy, createInfoFromOptions } from './create';\n\nconst deepInitializer = (target, options) => {\n  const info = createInfoFromOptions(target, options);\n  const { deep, names, checker, config, children } = info;\n\n  Object.keys(target)\n    .forEach((name) => {\n      const value = target[name];\n\n      checker.getProperty(target, name, value, config, names);\n\n      // skip functions/methods since we get info about them only when being executed\n      if (typeof value === 'object') {\n        let childInfo = getChildInfo(children, name);\n\n        if (childInfo) {\n          deepInitializer(value, { info: childInfo });\n        } else {\n          childInfo = deepInitializer(value, { deep, names: [...names, name], checker });\n          storeChildInfo(children, name, childInfo);\n        }\n      }\n    });\n\n  setTargetInfo(target, info);\n\n  return info;\n};\n\nconst createDeep = (target, options) => {\n  if (!target || typeof target !== 'object' || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  deepInitializer(target, options);\n\n  return wrapWithProxy(target);\n};\n\nexport default createDeep;\n","import {\n  getTargetInfo,\n  hasTargetInfo,\n} from './info';\n\nimport { create } from '../proxy';\n\nimport { isEnabled } from '../enabled';\n\nconst objectMerge = (options, ...sources) => {\n  let target = {};\n\n  if (isEnabled()) {\n    if (!options) {\n      options = {\n        info: getTargetInfo(sources.find((item) => hasTargetInfo(item))),\n        deep: false,\n      };\n    }\n\n    target = create(target, options);\n  }\n\n  return Object.assign(target, ...sources);\n};\n\nexport default objectMerge;\n"],"names":["GET_PROPERTY","SET_PROPERTY","INDEX","ARGUMENTS","RETURN_VALUE","MERGE","buildPath","sequence","reduce","str","name","String","parseInt","test","INFO_KEY","Symbol","createTargetInfo","checker","config","deep","names","children","createChildrenCache","getTargetInfo","target","undefined","setTargetInfo","info","hasTargetInfo","getTargetTypeChecker","getTargetTypeCheckerConfig","mergeChildrenCache","targetCache","sourceCache","hasOwnProperty","mergeTargetInfo","storeChildInfo","cache","childInfo","storeChildInfoFrom","child","getChildInfo","targetInfo","sourceInfo","mergeConfigs","console","error","checkPrimitiveType","action","types","type","errorReporter","storedType","indexBasedClasses","Array","isIndexAccessTarget","indexOf","constructor","getTypeString","value","source","sourceTypes","sourceType","targetType","replacePropertyTypeCheck","typeCheckFn","replaceArgumentsTypeCheck","argumentsTypeCheckFn","replaceReturnValueTypeCheck","returnValueTypeCheckFn","registerIndexBasedClass","push","setIndexValueTypeBy","replaceIndexedTypeCheck","PrimitiveTypeChecker","collectTypesOnInit","areArrayElementsOfSameType","init","cachedTypes","Object","keys","forEach","key","getProperty","getIndexProperty","getNamedProperty","typeFn","Function","setProperty","newValue","setIndexProperty","setNamedProperty","arguments","thisArg","args","length","valid","index","agrValid","returnValue","defaultTypeChecker","getDefaultTypeChecker","setDefaultTypeChecker","typeChecker","constructErrorString","required","actual","ConsoleErrorReporter","requiredTypeString","actualTypeString","ConsoleWarnReporter","warn","ThrowErrorReporter","Error","getErrorReporter","setErrorReporter","reporter","enabled","isEnabled","setEnabled","wrapFunctionReturnValues","wrapFunctionArguments","wrapSetPropertyValues","setProxyConfig","newConfig","assign","getProxyConfig","TARGET_KEY","validTypes","object","function","isValidTarget","isTypeChecked","Boolean","getTargetProperty","createFn","property","setNonTargetProperty","setTargetProperty","proxyConfig","getTargetArguments","argumentsList","getTargetReturnValue","callFunction","result","apply","objectProxy","Proxy","get","set","functionProxy","construct","wrapWithProxy","createInfoFromOptions","create","options","getPropertyInit","setPropertyInit","callFunctionInit","deepInitializer","createDeep","objectMerge","sources","find","item"],"mappings":"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"}